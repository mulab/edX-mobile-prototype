{
  "start": [
    1240, 
    3270, 
    6090, 
    9680, 
    10960, 
    13000, 
    13710, 
    17720, 
    21590, 
    24570, 
    26750, 
    30930, 
    34530, 
    37730, 
    42250, 
    44800, 
    47920, 
    50150, 
    54690, 
    56650, 
    57660, 
    59340, 
    65740, 
    67280, 
    70100, 
    74520, 
    77410, 
    78650, 
    80420, 
    83380, 
    87210, 
    88330, 
    90610, 
    94940, 
    98890, 
    103260, 
    105660, 
    108790, 
    113390, 
    115570, 
    119120, 
    122490, 
    125760, 
    129990, 
    133130, 
    139180, 
    142320, 
    143870, 
    146060, 
    146510, 
    148940, 
    150370, 
    153040, 
    154780, 
    155640, 
    159400, 
    163160, 
    164480, 
    168690, 
    170540, 
    174230, 
    176740, 
    181630, 
    184010, 
    188910, 
    190490, 
    193060, 
    195550, 
    197710, 
    199000, 
    201670, 
    205070, 
    207770, 
    211060, 
    214410, 
    218700, 
    219250, 
    224550, 
    229250, 
    231890, 
    235530, 
    240860, 
    244340, 
    247390, 
    252090, 
    254300, 
    257279, 
    261380, 
    266560, 
    270580, 
    273120, 
    275150, 
    277200, 
    278440, 
    282640, 
    286240, 
    288270, 
    292300, 
    295910, 
    297590, 
    300770, 
    305650, 
    309810, 
    311290, 
    314490, 
    318850, 
    323120, 
    324580, 
    326590, 
    328670, 
    331720, 
    333120, 
    337065, 
    341440, 
    344530, 
    345680, 
    348450, 
    350800, 
    354160, 
    355150, 
    357890, 
    361600, 
    365070, 
    367520, 
    370800, 
    374000, 
    378960, 
    382440, 
    386200, 
    390040, 
    394180, 
    398740, 
    402290, 
    407450, 
    409720, 
    412370, 
    415420, 
    416250, 
    419880, 
    423730, 
    425300, 
    428320, 
    432380, 
    434200, 
    435920, 
    437940, 
    441070, 
    445620, 
    448970, 
    451060, 
    454270, 
    456230, 
    460130, 
    462680, 
    464470, 
    470040, 
    472730, 
    475430, 
    478740, 
    482480, 
    486550, 
    490800, 
    493430, 
    496870, 
    499150, 
    503560, 
    505950, 
    509240, 
    511110, 
    514558, 
    519270, 
    522200, 
    523679, 
    525540, 
    530190, 
    536400, 
    538430, 
    542710, 
    548360, 
    553950, 
    557580, 
    561690, 
    564060, 
    565710, 
    568530, 
    569330, 
    571610, 
    574330, 
    577460, 
    581460, 
    584880, 
    586580, 
    589990, 
    593600, 
    597840, 
    600330, 
    605450, 
    607850, 
    611240, 
    613660, 
    616070, 
    619400, 
    623405, 
    627050, 
    629820, 
    631680, 
    633130, 
    636150, 
    637880, 
    642170, 
    645270, 
    649500, 
    653410, 
    656730, 
    659810, 
    665590, 
    670590, 
    675090, 
    682890, 
    688850, 
    693900, 
    696400, 
    698030, 
    703800, 
    707710, 
    710940, 
    711590, 
    715420, 
    718760, 
    723500, 
    727580, 
    731190, 
    734610, 
    738300, 
    740310, 
    745660, 
    750020, 
    753170, 
    756590, 
    759760, 
    764300, 
    770238, 
    773680, 
    776450, 
    780000, 
    782530, 
    787560, 
    792550, 
    793970, 
    798400, 
    800140, 
    810660, 
    813510, 
    815780, 
    819590, 
    821140, 
    823720, 
    825010, 
    827380, 
    828590, 
    831610, 
    835050, 
    838990, 
    839930, 
    842420, 
    844650, 
    847460, 
    848800, 
    852790, 
    855580, 
    856860, 
    859320, 
    863330, 
    866210, 
    870020, 
    871740, 
    874440, 
    875760, 
    878930, 
    882520, 
    884510, 
    885690, 
    889270, 
    892470, 
    895500, 
    896920, 
    898900, 
    900440, 
    904600, 
    910210, 
    913440, 
    916600, 
    917930, 
    923530, 
    926800, 
    930710, 
    932560, 
    935040, 
    938390, 
    939250, 
    941750, 
    943110, 
    947590, 
    950060, 
    955250, 
    958540, 
    963120, 
    965210
  ], 
  "end": [
    3270, 
    6090, 
    9680, 
    10960, 
    13000, 
    13710, 
    17720, 
    21590, 
    24570, 
    26750, 
    30930, 
    34530, 
    37730, 
    42250, 
    44800, 
    47920, 
    50150, 
    54690, 
    56650, 
    57660, 
    59340, 
    62990, 
    67280, 
    70100, 
    74520, 
    75770, 
    78650, 
    80420, 
    83380, 
    87210, 
    88330, 
    90610, 
    94940, 
    98890, 
    103260, 
    105660, 
    108790, 
    113390, 
    115570, 
    119120, 
    122490, 
    125760, 
    129990, 
    133130, 
    139180, 
    142320, 
    143870, 
    146060, 
    146510, 
    148940, 
    150370, 
    153040, 
    154780, 
    155640, 
    159400, 
    163160, 
    164480, 
    168690, 
    170540, 
    174230, 
    176740, 
    181630, 
    184010, 
    188910, 
    190490, 
    193060, 
    195550, 
    197710, 
    199000, 
    201670, 
    205070, 
    207770, 
    211060, 
    214410, 
    218700, 
    219250, 
    224550, 
    229250, 
    231890, 
    235530, 
    240860, 
    244340, 
    247390, 
    252090, 
    254300, 
    257279, 
    261380, 
    266560, 
    270580, 
    273120, 
    275150, 
    277200, 
    278440, 
    282640, 
    286240, 
    288270, 
    292300, 
    295910, 
    297590, 
    300770, 
    305650, 
    309810, 
    311290, 
    314490, 
    318850, 
    323120, 
    324580, 
    326590, 
    328670, 
    331720, 
    333120, 
    337065, 
    341440, 
    344530, 
    345680, 
    348450, 
    350800, 
    354160, 
    355150, 
    357890, 
    361600, 
    365070, 
    367520, 
    370800, 
    374000, 
    378960, 
    382440, 
    386200, 
    390040, 
    394180, 
    398740, 
    402290, 
    407450, 
    409720, 
    412370, 
    415420, 
    416250, 
    419880, 
    423730, 
    425300, 
    428320, 
    432380, 
    434200, 
    435920, 
    437940, 
    441070, 
    445620, 
    448970, 
    451060, 
    454270, 
    456230, 
    460130, 
    462680, 
    464470, 
    470040, 
    472730, 
    475430, 
    478740, 
    482480, 
    486550, 
    490800, 
    493430, 
    496870, 
    499150, 
    503560, 
    505950, 
    509240, 
    511110, 
    514559, 
    519270, 
    522200, 
    523679, 
    525540, 
    530190, 
    536400, 
    538430, 
    542710, 
    548360, 
    553950, 
    557580, 
    561690, 
    564060, 
    565710, 
    568530, 
    569330, 
    571610, 
    574330, 
    577460, 
    581460, 
    584880, 
    586580, 
    589990, 
    593600, 
    597840, 
    600330, 
    605450, 
    607850, 
    611240, 
    613660, 
    616070, 
    619400, 
    623405, 
    627050, 
    629820, 
    631680, 
    633130, 
    636150, 
    637880, 
    642170, 
    645270, 
    649500, 
    653410, 
    656730, 
    659810, 
    665590, 
    670590, 
    675090, 
    678480, 
    688850, 
    693900, 
    696400, 
    698030, 
    703800, 
    707710, 
    710940, 
    711590, 
    715420, 
    718760, 
    723500, 
    727580, 
    731190, 
    734610, 
    738300, 
    740310, 
    745660, 
    750020, 
    753170, 
    756590, 
    759760, 
    764300, 
    766040, 
    773680, 
    776450, 
    780000, 
    782530, 
    784520, 
    792550, 
    793970, 
    798400, 
    800140, 
    810660, 
    813510, 
    815780, 
    819590, 
    821140, 
    823720, 
    825010, 
    827380, 
    828590, 
    831610, 
    835050, 
    838990, 
    839930, 
    842420, 
    844650, 
    847460, 
    848800, 
    852790, 
    855580, 
    856860, 
    859320, 
    863330, 
    866210, 
    870020, 
    871740, 
    874440, 
    875760, 
    878930, 
    882520, 
    884510, 
    885690, 
    889270, 
    892470, 
    895500, 
    896920, 
    898900, 
    900440, 
    904600, 
    910210, 
    913440, 
    916600, 
    917930, 
    923530, 
    926800, 
    930710, 
    932560, 
    935040, 
    938390, 
    939250, 
    941750, 
    943110, 
    947590, 
    950060, 
    951735, 
    958540, 
    963120, 
    965210, 
    969760
  ], 
  "text": [
    "ARMANDO FOX: Let's look at the orange one first.", 
    "What's wrong with it?", 
    "The orange one certainly won't return a silly fortune, but we're going to", 
    "talk through the other examples as well.", 
    "What's wrong with the orange one?", 
    "That is correct.", 
    "So, this is assuming that Fortune Text is just a plain old instance variable,", 
    "but the difference between Active Record provided accessors and the ones", 
    "that we would create ourselves is that Active Record is actually using the", 
    "database to figure out what the attribute values are.", 
    "So there's nothing syntactically incorrect about this method, but it's", 
    "not going to cause the attributes of this object to change.", 
    "Most people probably figured out that this one would work, right?", 
    "I have an instance of active record base, I'm going to call Fortune Text", 
    "on an active record through the process that I explained.", 
    "We'll know that this is an attribute in the database so I can dereference", 
    "it, so this one would work.", 
    "The more tricky one is, why would this one work, because this one will work?", 
    "The answer is a little bit subtle, but it's something you", 
    "should get used to seeing.", 
    "One can debate if it's good coding style.", 
    "Why is the red one, in fact, why is it equivalent to the green one?", 
    "Here's a hint.", 
    "If you don't see a receiver on the left side of a period, what is the", 
    "receiver otherwise-- yes, sir in the back?", 
    "Yes.", 
    "So what is Fortune Text here?", 
    "Is it just a local variable?", 
    "Well, it could be a local variable, but what else could it be?", 
    "It could be a method call with no arguments, which is actually what it", 
    "is in this case.", 
    "And what is the receiver of that method call?", 
    "Well, because it's not explicit, the implicit receiver is always self, and", 
    "in this context, just like we saw in the green example, the value of self", 
    "is the model instance whose attributes we're trying to modify.", 
    "So as I said, there's a disclaimer.", 
    "You could make a case that this is a confusing coding style because in", 
    "fact, if there was a local variable named Fortune Text, then this wouldn't", 
    "work as expected.", 
    "The reason this works is because within the scope of this function, the", 
    "only possible interpretation that doesn't cause an error is that Fortune", 
    "Text is a method call with no arguments, hence no parents, poetry", 
    "mode, and the implied receiver self is an instance of this active record", 
    "model, and it does in fact have this method, Fortune Text.", 
    "So again, my view is when in doubt, it's better to be clear, right?", 
    "Self.fortune fortune text makes it pretty clear what's going on.", 
    "Here, we sort of had to guess.", 
    "But when you're stumped about something, this is another way to", 
    "think about it.", 
    "Remember that things that look like variable names might", 
    "also be method calls.", 
    "Sometimes that works in your favor and it makes your code better.", 
    "Other times, it could work against you and it could make", 
    "your code more readable.", 
    "So, as with so many things in software, it is a judgment call, but I", 
    "wanted you to see an example of it in real life.", 
    "OK, we've done models.", 
    "Let's take a look at controllers and views.", 
    "Let's get right into our next recipe.", 
    "We've already seen a recipe for how do you add a model, which is you create a", 
    "migration that defines the attributes of the model, how it's going to be", 
    "stored in the database, and you create a file to represent the class of that", 
    "model which inherits from active record base.", 
    "Now so far, the only thing I've shown you is how models can use the built-in", 
    "behaviors of Active Record.", 
    "In practice, your models are going to do all kinds of other stuff, right?", 
    "What makes your app interesting is what the models do.", 
    "So, so far, we haven't put any code into our model.", 
    "We'll get to doing that.", 
    "But let's see what the counterpart is.", 
    "Having added a model, how would we add controllers and views?", 
    "Well, really we're talking about adding a new action to the app, right?", 
    "What a controller's purpose and life is is to mediate the actions of the", 
    "user and provide information back to the user through the views.", 
    "So to add a new action, first we have to make sure that there's a route for", 
    "that action.", 
    "Remember that a route will take an HTTP verb, like get or put or post,", 
    "and it'll take a URI, and it will map those to pieces to some method in some", 
    "controller, to a controller action.", 
    "So we have to make sure that that route exists in the Routes file.", 
    "Now, we said last time that the basic CRUD actions, those routes are already", 
    "set up for you, just by adding one line to your Routes file.", 
    "But again, as you develop apps that have more and more functionality that", 
    "goes outside of the basic CRUD, you're going to have to add your own routes.", 
    "Then we have to have the action in the controller.", 
    "in other words, what is the actual piece of code that gets controlled", 
    "when the user tries to do that action, submits with that URI, and that's", 
    "going to be something controller.rb in the Controllers Directory.", 
    "And finally, remember that we said because HTTP is always request reply,", 
    "at the end of every action, something has to be rendered.", 
    "Even if it's an Error page, it's got be something.", 
    "So we've also got to make sure that there's something for", 
    "the action to render.", 
    "The most common form is that we're going to have a view that lives in a", 
    "subdirectory that's named for the model, and whose file name matches", 
    "whichever controller action it is.", 
    "So let's do an example of this.", 
    "We'll show how to do the action where you can see details about a movie,", 
    "that's the Show action.", 
    "And if you look at the book, it will walk through a similar example but", 
    "using the Index action, which is how do you list all the movies?", 
    "So remember that in the Model View Controller design pattern, the model", 
    "is where the action is.", 
    "The model is where you're going to actually get and manipulate data.", 
    "So you can imagine one of the things that our controller method is going to", 
    "have to do is it's going to have to ask the model to call some method to", 
    "look something up the database.", 
    "We're going to see details about a movie, that's where we're going to", 
    "have to find those details.", 
    "So the controller is going to get the data from the Model and make it", 
    "available to the View.", 
    "Remember what we said last time is that through a nice piece of automagic", 
    "happening between the Controllers and the Views, any instance variables that", 
    "we set up in the Controller action become available or become", 
    "visible to the View.", 
    "So here's the simplest Controller action that I can imagine for showing", 
    "the details of the movie.", 
    "I'm just going to say Find, and I'm going to pass the primary key of the", 
    "movie I want to find.", 
    "Now, how do I know what that ID is?", 
    "In a moment, we'll show how you get to this from the listing of all movies.", 
    "And what we'll see is that it's easy enough for us to create a page when we", 
    "list all of the movies.", 
    "At the moment we create that page, we know the ID of each movie.", 
    "We just got that collection back from the database, so we're going to create", 
    "our URLs to include that information as the ID field.", 
    "So the instance variables are set up in the Controller, they'll become", 
    "available to the View, and all we then have to do in the View do is make a", 
    "little HTML snippet that will display the data and maybe let the user do", 
    "something like go back to the main page or something simple like that.", 
    "And let us take a look at what this looks like.", 
    "Here's our really simple view.", 
    "So in our sort of abbreviated HTML in HML, we're going to have a really", 
    "simple header that says Details About, and we can", 
    "interpolate the movie's title.", 
    "Remember that @movie is the instance variable we set up in", 
    "the Controller, right?", 
    "It's one movie that got pulled out of the database in the Controller action.", 
    "So we can do anything we want to @movie in the View, just as if we were", 
    "manipulating it in regular model code.", 
    "We can print out what its rating is, we can print out what its release date", 
    "is using a function you've probably all seen in Java, C, C++, and many", 
    "other languages, strftime.", 
    "We can print out its description.", 
    "So not really a lot going on here, right?", 
    "And just as a sanity check that this really works,", 
    "let's fire up the server.", 
    "I always fire it up with --debugger because after all my years of", 
    "programming, I'm no longer an optimist.", 
    "I just assume that I'll always need a debugger, and it doesn't really cost", 
    "anything to fire it up.", 
    "Here's the list of all movies, not that there's that many of them.", 
    "Yeah, my version of Rotten Potatoes has more movies than your version, for", 
    "various reasons.", 
    "And the idea is that when I click on one of these, I want to be able to get", 
    "the details for that movie.", 
    "So how did I actually--", 
    "I know, nice.", 
    "So if I hover over these URLs, it's kind of hard to read down here,", 
    "unfortunately, but if I hover over any of these URLs, in fact, if I just", 
    "click on it, you can see that the link that it takes me to", 
    "is /movies/2, right?", 
    "It's easy for me to create that link in the Index View because when I", 
    "generate this page, I know what all those IDs are.", 
    "So all I really have to do is, in my Controller Method, extract the ID", 
    "Parameter from the URL and use it.", 
    "Now how does it know where in the URL that parameter is to be found?", 
    "That's what comes from the Routes file.", 
    "The Routes file says, here's the structure of a URL, here's a wild card", 
    "in it, and whenever you get that URL, parse the wild card and put it into", 
    "this hash-like thing called params, and then the Controller", 
    "Method can get at it.", 
    "So that's what's going on there.", 
    "What else can the user do from the Movies page?", 
    "Well in our simple example, I made it so that when we're looking at details", 
    "of a movie, I have these three other buttons.", 
    "I can edit it, I can delete it, or I can go back to the movie list.", 
    "And again, it's kind of hard to see when I'm hovering over these, the URL", 
    "that took me two was /movies, and it's because again, looking back at what we", 
    "put in our Routes file, the basic CRUD routes that are given to you by Rails,", 
    "one of them is the pluralized name of the model is the route that means,", 
    "list all of the instances of that model.", 
    "So how does that look in our code?", 
    "What did we put into our View to generate that URL back", 
    "to the Movies page?", 
    "Did we actually put /movies?", 
    "No, that would be inelegant.", 
    "What did we actually do?", 
    "We used the fact that those automatic routes that are defined for us, we", 
    "also get helper methods automatically defined for us that return the right", 
    "thing for the route.", 
    "So if we refer to movies path--", 
    "and if you do Rake Routes, you can see the output of all this-- if we refer", 
    "to movies path, we're going to get whatever the appropriate URI is that", 
    "would correspond to get/movies.", 
    "In other words, if the action we want the link to have is get/movies, this", 
    "method will return the right URL for doing that.", 
    "Now you might ask, why would you have to call a method if all it's going to", 
    "do is return this string?", 
    "And again, convention over configuration.", 
    "This is what you would want most of the time, but there are cases when you", 
    "would want to override, for whatever reason, which URI is referred to by", 
    "a-- maybe you have a custom method somewhere in your controller that does", 
    "a much better job of listing the movies, and you don't want to use just", 
    "the /movies index action.", 
    "You want to do something else.", 
    "So, in this case, the Routes file is the one place in the universe that", 
    "remembers those mappings.", 
    "If you change the mappings of URIs and names and things in the Routes file,", 
    "these helper methods will automatically be updated to return the", 
    "right thing, whereas if you go through all your views and you hard code", 
    "strings for what these URLs are, then all of a sudden you've bound yourself", 
    "to that particular set of names for that particular set of actions.", 
    "So I would encourage you to use the helper methods whenever possible.", 
    "So kind of a recap of how we got here is in the Index action, the list of", 
    "all the movies, in that view, which I'll now show you--", 
    "so, in our Index file, the link that lets us get details about each movie", 
    "uses the movie path helper to generate the URL for us.", 
    "The Route subsystem figures out that that corresponds to the route for", 
    "get/movies/ wild card ID, which means that it will arrange to parse the wild", 
    "card part and put it into the params array where the Controller", 
    "Method can get at it.", 
    "The Controller Method will use that to do a database lookup, and because the", 
    "Controller Method sets the @movie instance variable, it'll be available", 
    "to the View, which can then display all the information about the movie.", 
    "That's it.", 
    "That is a basic trip through all the moving parts from the user clicking on", 
    "something, the routing subsystem figuring out which action is going to", 
    "get control, the action queries the database using methods defined in the", 
    "model, it sets up some instance variables, and it causes a View to be", 
    "rendered that presumably is going to make use of those instance variables.", 
    "That's what we've seen so far.", 
    "Like I said, we can let the user return to the Movie List, going back", 
    "to the same Routes table.", 
    "We can see that if we call the Movies Path Helper with no arguments, we'll", 
    "get a link to the Index action, and that's exactly what we did this time.", 
    "And there's a neat little piece of code that I would like to show you,", 
    "which is how Delete works.", 
    "This is, in some sense, like a little preview for the future.", 
    "But if we take a look at the page that was generated with the movie details,", 
    "and you saw that there was a Delete button on it--", 
    "let's pick a different movie, just for fun.", 
    "OK, so what's going on with this Delete button?", 
    "This is a pretty interesting piece of technology that I wanted to take a", 
    "little time out to show you how it works.", 
    "This is the Delete button down here.", 
    "Those of you who know some HTML may recognize-- let's make that a little", 
    "bit bigger--", 
    "this is a form with a single button on it, but there's two things that are", 
    "interesting.", 
    "The form also has a hidden form value that sets the _method argument to", 
    "delete, and this is the thing that Rails is going to intercept and say,", 
    "aha, this is really a Delete action.", 
    "I'm going to internally change the HTTP method that your controller", 
    "thinks it's getting.", 
    "Because remember that the actual web browser only knows how", 
    "to do get and post.", 
    "So the only things you can do for a browser have to be based on", 
    "one of those two.", 
    "For deletion, what we really want is to be able to use the Delete method", 
    "because it's defined in HTTP, it's just not in the damn browsers.", 
    "So Rails arranges is to make it look to the controller as if browsers could", 
    "really do that.", 
    "Now, there's an important philosophical reason", 
    "why we do this, right?", 
    "I believe Dave talked about service-oriented architecture at the", 
    "beginning of the course.", 
    "The trend is towards thinking about your app not as a web app, but as a", 
    "Software as a Service where a browser is just one way of", 
    "interacting with it.", 
    "Other programs could also be interacting with your app", 
    "programmatically, and in those cases, those programs are perfectly well able", 
    "to use the other HTTP verbs like Delete and Put.", 
    "So just because browsers can't use those verbs is no reason to write your", 
    "application in a crippled manner.", 
    "The Rails philosophy is write your application assuming it's going to be", 
    "in an SOA environment--", 
    "so you should be able to handle Get, Post, Delete, and Put--", 
    "and oh yeah, web browsers can't do Delete or Put, but we're going to use", 
    "this built-in mechanism to fake it because that makes your", 
    "app cleaner, right?", 
    "It lets your app design really work like it's software-oriented", 
    "architecture, and it's sort of making up for the fact that browsers are a", 
    "little bit brain dead in that they only handle two out of the possible", 
    "HTTP verbs.", 
    "So I think that's kind of cool.", 
    "The other little bit of goodness--", 
    "which again, this kind of a preview when we talk about JavaScript--", 
    "we have this input which we haven't seen yet.", 
    "This is the actual button that says Delete on it, and it's got this data", 
    "confirm, are you sure?", 
    "What's going on with that?", 
    "If we click the Delete button, we get a nice confirmation dialog.", 
    "What's happening here-- again this is a preview for later in the class--", 
    "is there is a piece of JavaScript that is being triggered to intercept the", 
    "button click and show me the dialog.", 
    "And indeed, if I click Cancel, the movie won't get deleted.", 
    "But if I had a browser without JavaScript, the Delete button would", 
    "just delete the movie.", 
    "In other words, it does something sensible whether or not you have", 
    "JavaScript enabled.", 
    "So hopefully, through the series of examples of even a really simple app,", 
    "hopefully you start to get a feel for what the philosophy is here, right?", 
    "Cleanliness and design is really important.", 
    "With that in mind, let's answer the following question.", 
    "Here are some statements that may be true or false regarding routes, URIs,", 
    "helpers, HTTP methods, and things like that.", 
    "And the question is, which of those statements, or which subset, are true?"
  ]
}