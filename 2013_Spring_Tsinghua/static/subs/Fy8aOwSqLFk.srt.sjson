{
  "start": [
    120, 
    2590, 
    5550, 
    6830, 
    9760, 
    12370, 
    14800, 
    17850, 
    19430, 
    20380, 
    23130, 
    26090, 
    27210, 
    32549, 
    34570, 
    36450, 
    39140, 
    41080, 
    42980, 
    43970, 
    45300, 
    46470, 
    49740, 
    51500, 
    54980, 
    57750, 
    61130, 
    62260, 
    64040, 
    65810, 
    68130, 
    70380, 
    71400, 
    73160, 
    75675, 
    76120, 
    80570, 
    83870, 
    86360, 
    89240, 
    94940, 
    97560, 
    101150, 
    103550, 
    104610, 
    108670, 
    112160, 
    115410, 
    117510, 
    120840, 
    123020, 
    126910, 
    129900, 
    130530, 
    132720, 
    135620, 
    137020, 
    138790, 
    141660, 
    144730, 
    147180, 
    149780, 
    151230, 
    153590, 
    157380, 
    162100, 
    165610, 
    167580, 
    171960, 
    173480, 
    174610, 
    176650, 
    180150, 
    183260, 
    183560, 
    184690, 
    187740, 
    190510, 
    193120, 
    195720, 
    197980, 
    199880, 
    202100, 
    205640, 
    210780, 
    212780, 
    216080, 
    217070, 
    218950, 
    221010, 
    223860, 
    226780, 
    230150, 
    231160, 
    232860, 
    235420, 
    237330, 
    238790, 
    242960, 
    244300, 
    245670, 
    247430, 
    250600, 
    252140, 
    255600, 
    257120, 
    259570, 
    262740, 
    264700, 
    265420, 
    268320, 
    272710, 
    275680, 
    276250, 
    278120, 
    280530, 
    282300, 
    284210, 
    286850, 
    288480, 
    289130, 
    293850, 
    294280, 
    295050, 
    296182, 
    299250, 
    299700, 
    299940, 
    302140, 
    302460, 
    303560, 
    306890, 
    308020, 
    311350, 
    312680, 
    316920, 
    320340, 
    323140, 
    327030, 
    329220, 
    331190, 
    332050, 
    334830, 
    338410, 
    340210, 
    342850, 
    344480, 
    348120, 
    351240, 
    352660, 
    357980, 
    359440, 
    361110, 
    364050, 
    366920, 
    369590, 
    372310, 
    376150, 
    380730, 
    383700, 
    386050, 
    389080, 
    392055, 
    393940, 
    395240, 
    398006, 
    400220, 
    400860, 
    403290, 
    407660, 
    410370, 
    411340, 
    413260, 
    416485, 
    416920, 
    420390, 
    421850, 
    423360, 
    425950, 
    428950, 
    430900, 
    433430, 
    435760, 
    438650
  ], 
  "end": [
    2590, 
    5550, 
    6830, 
    9760, 
    12370, 
    14800, 
    17850, 
    19430, 
    20380, 
    23130, 
    26090, 
    27210, 
    32549, 
    34570, 
    36450, 
    39140, 
    41080, 
    42980, 
    43970, 
    45300, 
    46470, 
    49740, 
    51500, 
    54980, 
    57750, 
    61130, 
    62260, 
    64040, 
    65810, 
    68130, 
    70380, 
    71400, 
    73160, 
    75675, 
    76120, 
    80570, 
    83870, 
    86360, 
    89240, 
    94940, 
    97560, 
    101150, 
    103550, 
    104610, 
    108670, 
    112160, 
    115410, 
    117510, 
    120840, 
    123020, 
    126910, 
    129900, 
    130530, 
    132720, 
    135620, 
    137020, 
    138790, 
    141660, 
    144730, 
    147180, 
    149780, 
    151230, 
    153590, 
    157380, 
    162100, 
    165610, 
    167580, 
    171960, 
    173480, 
    174610, 
    176650, 
    180150, 
    183260, 
    183560, 
    184690, 
    187740, 
    190510, 
    193120, 
    195720, 
    197980, 
    199880, 
    202100, 
    205640, 
    210780, 
    212780, 
    216080, 
    217070, 
    218950, 
    221010, 
    223860, 
    226780, 
    230150, 
    231160, 
    232860, 
    235420, 
    237330, 
    238790, 
    242960, 
    244300, 
    245670, 
    247430, 
    250600, 
    252140, 
    255600, 
    257120, 
    259570, 
    262740, 
    264700, 
    265420, 
    268320, 
    272710, 
    275680, 
    276250, 
    278120, 
    280530, 
    282300, 
    284210, 
    286850, 
    288480, 
    289130, 
    293850, 
    294280, 
    295050, 
    296182, 
    299250, 
    299700, 
    299940, 
    302140, 
    302460, 
    303560, 
    306890, 
    308020, 
    311350, 
    312680, 
    316920, 
    320340, 
    323140, 
    327030, 
    329220, 
    331190, 
    332050, 
    334830, 
    338410, 
    340210, 
    342850, 
    344480, 
    348120, 
    351240, 
    352660, 
    357980, 
    359440, 
    361110, 
    364050, 
    366920, 
    369590, 
    372310, 
    376150, 
    380730, 
    383700, 
    386050, 
    389080, 
    392055, 
    393940, 
    395240, 
    398006, 
    400220, 
    400860, 
    403290, 
    407660, 
    410370, 
    411340, 
    413260, 
    416485, 
    416920, 
    420390, 
    421850, 
    423360, 
    425950, 
    428950, 
    430900, 
    433430, 
    435760, 
    438650, 
    439900
  ], 
  "text": [
    "DAVID PATTERSON: The first one's true.", 
    "Long phases, there's iterations, but they're much", 
    "longer in Spiral.", 
    "Second one is true.", 
    "There's no working code at the end, but they do iterations.", 
    "There's a lot slower there.", 
    "Waterfall and Spiral have architectural design phases.", 
    "They can not incorporate architecture", 
    "in the Agile lifecycle.", 
    "This is one of the criticisms of Agile, is: if you just jump", 
    "in writing code, are you really going to have a good", 
    "architecture?", 
    "And in fact, a guy named Jeff Beck, who was one of the guys", 
    "who signed the Agile Manifesto, was", 
    "asked into this talk.", 
    "Doesn't it mean if you build software that way that you're", 
    "not going to have good architecture?", 
    "And he says isn't it possible?", 
    "Somebody said yeah.", 
    "He said, yes.", 
    "Not only is it possible, it's going to happen.", 
    "What you have to do is refactor your code to put the", 
    "architecture in.", 
    "But he would argue it's not incompatible, but you're going", 
    "to have to work at this when we do the refactoring.", 
    "The thing about not using written requirements is the", 
    "user stories are written.", 
    "As you'll do it yourself, you'll write these user", 
    "stories on three by five cards.", 
    "Use three by five cards to make it easy for the", 
    "nontechnical customer to understand it.", 
    "But there is a written piece.", 
    "You'll use those cards.", 
    "It's just a little bit less formal than", 
    "in the other methods.", 
    "So what I was shooting for was the red one, the third option,", 
    "but the main idea is to seek to understand it.", 
    "Any questions about that?", 
    "You'll see the user stories soon.", 
    "All right, next up, testing and formal methods.", 
    "Testing is a big part of this course.", 
    "The fact that you will write tests before you write code is", 
    "amazing to faculty at other institutions,", 
    "but we're doing it.", 
    "So there's two related ideas, verification and validation.", 
    "They sound like synonyms in a thesaurus.", 
    "But by verification, we mean did you build the thing right.", 
    "That is, did you meet the specifications?", 
    "Validation is, did you build the right thing?", 
    "That is, is it what the customer wants?", 
    "So not surprisingly, hardware focuses on verification, did", 
    "you meet the spec that Intel right, where software is", 
    "validation.", 
    "Even if you met it, is that what the customer wanted?", 
    "So that's verification versus validation.", 
    "And then two of the options here are", 
    "testing and formal methods.", 
    "So in testing, we cannot do exhaustive testing.", 
    "So an example that's there in the margin of the book,", 
    "suppose you could do a test in one nanosecond, which would be", 
    "amazing, and you had one 64-bit variable.", 
    "How long would that take?", 
    "2 to the 64 nanoseconds.", 
    "Well, there's 2 to the 30th nanoseconds in a second.", 
    "So that is 2 to the 32 seconds.", 
    "It turns out, there's about 32 million seconds in a year.", 
    "So that's 2 to the 25.", 
    "So what we're left with, 2 to the 34th", 
    "divided by 2 to the 25.", 
    "That leaves 2 to the 9th.", 
    "500 years, 512 years.", 
    "So take 500 years, if you had one 64-bit variable, and you", 
    "could do a test in a nanosecond, if you tried to do", 
    "exhaustive.", 
    "So you can't do that.", 
    "So what we do is we divide and conquer.", 
    "We do different tests in different phases, and there's", 
    "a lot of names in here about testing because testing is", 
    "such an important part of what we do.", 
    "The base thing is called unit testing.", 
    "That's testing to see if a single", 
    "method does what's expected.", 
    "Sometimes, people use the name module or functional testing", 
    "to test across individual units, like with across", 
    "classes versus within a class.", 
    "Integration testing is to try and see if a bunch of modules", 
    "communicate correctly.", 
    "So it's a more narrow interface.", 
    "And each time you add one of these things, you're assuming", 
    "the one below does that work.", 
    "And finally, at the top is system or acceptance testing,", 
    "does the whole program meet what the", 
    "customer wants it to do.", 
    "So those are the names of testing.", 
    "Other things that happen that you hear about testing is", 
    "coverage, which is the percentage of", 
    "the capacitor tested.", 
    "So when there's branching statements, are all the paths", 
    "exercised by the test?", 
    "That's coverage.", 
    "Regression testing, since you're going to be building", 
    "software over time and iterating it, did the latest", 
    "thing you have break something before?", 
    "So you want to keep doing regression test and trying all", 
    "the tests you've ever done over and again.", 
    "There's even a phrase called continuous integration", 
    "testing, that as you build software in the background", 
    "using the cloud, you'll be running all build", 
    "tests all the time.", 
    "So you immediately find out if you broke something.", 
    "As we said, we're emphasizing test-driven design in Agile", 
    "that you're writing the test before you had the code you", 
    "wish you had.", 
    "So the tests are going to drive the code.", 
    "So it limits the testing, and we'll try an audience", 
    "participation piece.", 
    "This is by its Edsger Dijkstra.", 
    "All right, so with audience participation, that means if", 
    "you know the answer, you can shout it out.", 
    "You don't have to use cards.", 
    "Program testing can be used to show the--", 
    "SPEAKER: presence", 
    "Something with bugs.", 
    "Say that again.", 
    "SPEAKER: presence", 
    "DAVID PATTERSON: All right.", 
    "All right.", 
    "But never to show their--", 
    "all right.", 
    "I heard it.", 
    "Program testing can be showed the presence of bugs but they", 
    "never show their absence.", 
    "So the problem is, you can find bugs there, but you can't", 
    "prove that they're not there.", 
    "And that led to an attempt to do formal methods.", 
    "And basically, you get a formal specification, kind of", 
    "like in the Waterfall model, and then prove that the", 
    "program behavior follows that specification.", 
    "You could do it by hand, which is incredibly tedious.", 
    "It was so tedious, it's hard to do, people quickly", 
    "abandoned it.", 
    "So big advances in automatic theorem proving using", 
    "inference and logic axioms, a specification language, to try", 
    "and prove from scratch.", 
    "That was tried for a while, but a more popular thing today", 
    "is what's called model checking.", 
    "You have limited properties that you exhaustively search", 
    "by doing symbolic execution and look at all possible", 
    "states, and that's another way.", 
    "So these formal methods, as they're called, unfortunately,", 
    "even as fast as computers are today,", 
    "are incredibly expensive.", 
    "So they only get used today if you've got something really", 
    "important, it's not going to change, it's expensive to", 
    "repair, and it's not too big.", 
    "So it is used today in hardware systems that's used", 
    "for network protocol, safety critical software.", 
    "And to give you an idea of how expensive it is, the biggest", 
    "thing that anybody's tried to do is 10,000 lines of code of", 
    "a simple operating system kernel.", 
    "And that cost $500 per line of code.", 
    "Putting that in perspective, NASA software, like flying the", 
    "Curiosity, that's pretty expensive.", 
    "That's $80 per line of code.", 
    "So this is incredibly expensive.", 
    "And it doesn't really work with rapidly changing", 
    "software, right?", 
    "You change the software, you got go through that all again.", 
    "So it's not something we're going to use.", 
    "We're going to use software that changes fast, easy to", 
    "repair, easy to test.", 
    "We're not going to do formal methods anymore, but there's", 
    "plenty of classes you could learn about that.", 
    "All right.", 
    "So time for that cards again, which statement is not true", 
    "about testing?", 
    "With better test coverage, you're more", 
    "likely to catch faults.", 
    "While difficult to achieve, 100% test coverage ensures", 
    "design reliability.", 
    "Each higher level test delegates more detailed", 
    "testing to lower levels, and unit testing works within a", 
    "single class and module across classes.", 
    "Which one is false?"
  ]
}