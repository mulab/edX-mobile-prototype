{
  "start": [
    220, 
    1640, 
    2390, 
    3780, 
    9710, 
    13740, 
    17320, 
    18990, 
    21650, 
    24900, 
    29040, 
    31610, 
    33000, 
    38230, 
    38850, 
    42420, 
    45600, 
    47950, 
    52390, 
    56230, 
    59370, 
    62240, 
    64190, 
    67100, 
    68100, 
    72280, 
    74760, 
    80470, 
    84820, 
    87750, 
    89410, 
    90400, 
    91620, 
    93810, 
    95420, 
    99290, 
    104370, 
    106070, 
    107200, 
    110580, 
    112130, 
    114920, 
    115910
  ], 
  "end": [
    1640, 
    2390, 
    3780, 
    9710, 
    13740, 
    17320, 
    18990, 
    21650, 
    24900, 
    29040, 
    31610, 
    33000, 
    38230, 
    38850, 
    42420, 
    45600, 
    47950, 
    52390, 
    56230, 
    59370, 
    62240, 
    64190, 
    67100, 
    68100, 
    72280, 
    74760, 
    80470, 
    84820, 
    87750, 
    89410, 
    90400, 
    91620, 
    93810, 
    95420, 
    99290, 
    104370, 
    106070, 
    107200, 
    110580, 
    112130, 
    114920, 
    115910, 
    117160
  ], 
  "text": [
    "ARMANDO FOX: Maybe it'll turn out that you guys think this is", 
    "an open-ended question.", 
    "I don't think it's that open ended.", 
    "My perception is if my JavaScript code is in a separate file and what I'm", 
    "binding to my JavaScript code, that's also in this well-defined setup", 
    "function, I can add a fair amount of JavaScript functionality without", 
    "modifying any of my views.", 
    "I can start from an app whose views I don't touch.", 
    "And just through using the secret jQuery powers to pick which element I", 
    "want, bind things to those elements, use DOM manipulation just in my", 
    "JavaScript to modify what happens when the users", 
    "interact with those elements.", 
    "So my view is, I'm able to add stuff without modifying existing", 
    "functionality.", 
    "I see this is as a way to improve open/closed compliance.", 
    "I suppose we could try to make a case for single responsibility.", 
    "But it's tough because, remember, single responsibility really is", 
    "talking about, at the level of a class or a module or something like that,", 
    "can you draw a nice boundary around the things that that module is", 
    "responsible for and split up your application according to that?", 
    "So any nontrivial amount of JavaScript code is probably going to have", 
    "multiple responsibilities.", 
    "Multiple different modules of JavaScript, they're going to have", 
    "different responsibilities.", 
    "So using obtrusive versus unobtrusive JavaScript does not, in itself, I", 
    "think make any difference with respect to responsibilities.", 
    "You could write obtrusive JavaScript and still ask, is my JavaScript well", 
    "factored internally, separately from, is it organized in a way that lets me", 
    "enhance functionality without modifying existing stuff?", 
    "Demeter really doesn't apply here.", 
    "Nobody voted for it.", 
    "So that's just as well.", 
    "It was a weak distractor.", 
    "And dependency inversion or injection--", 
    "I suppose you could argue that, in some sense, the HTML attributes kind", 
    "of represent a point of dependency that JavaScript code sees from the one", 
    "side and the browser sees from the other.", 
    "That isn't the way I saw it.", 
    "But it was late at night when I wrote this question.", 
    "I could imagine making a case for it.", 
    "But I thought the open/closed principle was the most obvious one.", 
    "However, you all didn't.", 
    "So maybe that makes it a bad question."
  ]
}