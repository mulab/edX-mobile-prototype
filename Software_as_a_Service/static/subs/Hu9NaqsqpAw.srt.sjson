{
  "start": [
    420, 
    710, 
    5530, 
    7440, 
    11410, 
    15860, 
    16129, 
    20610, 
    23980, 
    25100, 
    28960, 
    31590, 
    36280, 
    39520, 
    44790, 
    45840, 
    47970, 
    49750, 
    53150, 
    54980, 
    57380, 
    61560, 
    65319, 
    69230, 
    71940, 
    75590, 
    79770, 
    83720, 
    84800, 
    88250, 
    91570, 
    93510, 
    97630, 
    98910, 
    102050, 
    104940, 
    108090, 
    111320, 
    112400, 
    116130, 
    120050, 
    123370, 
    124990, 
    126700, 
    129038, 
    130620, 
    132260, 
    133780, 
    136660, 
    138520, 
    143580, 
    145490, 
    146440, 
    149920, 
    153650, 
    157190, 
    160380, 
    163830, 
    168530, 
    171270, 
    174010, 
    176470, 
    177720, 
    181220, 
    184420, 
    185390, 
    188970, 
    193120, 
    194310, 
    198390, 
    202050, 
    204290, 
    207360, 
    209490, 
    212770, 
    215650, 
    217020, 
    218050, 
    218630, 
    221780, 
    223580, 
    226060, 
    226360, 
    231290, 
    233770, 
    234700, 
    239450, 
    240890, 
    246390, 
    247310, 
    250460, 
    251570, 
    256560, 
    260600, 
    261959, 
    265920, 
    268950, 
    271870, 
    273490, 
    278380, 
    279800, 
    282880, 
    284310, 
    287540, 
    289670, 
    292890, 
    294700, 
    297270, 
    298650, 
    302250, 
    304210, 
    305440, 
    308570, 
    309870, 
    312530, 
    314000, 
    317380, 
    320700, 
    322100, 
    325520, 
    327010, 
    329650, 
    330070, 
    333100, 
    335650, 
    340045, 
    342930, 
    345670, 
    348510, 
    349250, 
    353960, 
    356000, 
    359960, 
    362410, 
    365260, 
    366530, 
    368260, 
    372490, 
    374030, 
    376670, 
    380050, 
    382190, 
    385210, 
    386200, 
    388680, 
    391945, 
    394910, 
    395630, 
    397480, 
    400590, 
    402480, 
    406940, 
    410750, 
    414910, 
    415580, 
    419530, 
    421100, 
    422460, 
    425140, 
    429500, 
    431760, 
    435870, 
    439890, 
    442600, 
    446620, 
    448070, 
    450850, 
    454250, 
    455420, 
    459090, 
    462950, 
    464310, 
    468280, 
    470840, 
    474190, 
    476770, 
    478170, 
    480530, 
    481860, 
    485230, 
    488530, 
    489510, 
    493600, 
    495790, 
    497250, 
    500785, 
    503170, 
    508540, 
    511880, 
    512940, 
    514650, 
    516270, 
    519308, 
    521400, 
    524390, 
    528430, 
    529200, 
    533370, 
    534440, 
    537300, 
    537890, 
    539960, 
    541320, 
    544940, 
    549890, 
    550550, 
    551910, 
    554630, 
    558010, 
    559680, 
    565020, 
    568900, 
    572250, 
    574010, 
    576200, 
    577320, 
    580060, 
    581430, 
    585360, 
    588960, 
    590580, 
    593790, 
    596280, 
    598110, 
    603570, 
    605060, 
    609390, 
    612230, 
    614720, 
    617710, 
    621200, 
    625860, 
    627390, 
    632350, 
    635660, 
    639460, 
    642790, 
    647180, 
    648350, 
    651730, 
    655580, 
    656750, 
    659680, 
    662020, 
    663450, 
    666530, 
    669540, 
    672550, 
    673580, 
    675780, 
    676690, 
    679990, 
    681670, 
    685320, 
    688500, 
    692700, 
    695670, 
    696760, 
    699740, 
    700770, 
    702280, 
    706680, 
    708030, 
    710000, 
    713650, 
    717640, 
    719850, 
    723280, 
    726270, 
    729480, 
    730700, 
    734680, 
    736810, 
    740640, 
    745510, 
    749970, 
    753130, 
    756540, 
    759680, 
    766060, 
    768110, 
    771550, 
    773500, 
    775350, 
    779200, 
    782020, 
    783210, 
    785780, 
    789570, 
    791560, 
    795610, 
    799540, 
    801370, 
    804590, 
    805650, 
    808820, 
    813670, 
    815380, 
    817270, 
    818500, 
    821580, 
    822900, 
    825040, 
    828380, 
    829500, 
    832240, 
    833140, 
    835140, 
    839550, 
    842420, 
    845030, 
    846230, 
    847510, 
    851070, 
    853870, 
    854980, 
    857580, 
    858560, 
    862480, 
    866680, 
    869630, 
    874720, 
    877840, 
    879190, 
    881680, 
    882840, 
    885300, 
    886780, 
    890440, 
    893670, 
    894130, 
    897450, 
    900770, 
    905490, 
    908280, 
    912920, 
    914080, 
    916770, 
    919380, 
    923720, 
    928170, 
    932580, 
    933930, 
    934590, 
    937750, 
    938570, 
    941750, 
    944520, 
    947020, 
    948390, 
    951520, 
    953100, 
    955440, 
    957840, 
    961530, 
    965460, 
    967270, 
    970280, 
    972780, 
    976800, 
    978020, 
    980800, 
    982130, 
    986660, 
    990070, 
    991580, 
    995900, 
    999660, 
    1002510, 
    1005820, 
    1007450, 
    1010040, 
    1011160, 
    1014420, 
    1017040, 
    1020400, 
    1021710, 
    1024260, 
    1027490, 
    1030310, 
    1031910, 
    1034829, 
    1036410, 
    1038160, 
    1039368, 
    1043950, 
    1047050, 
    1049090, 
    1053560, 
    1055850, 
    1057090, 
    1058960, 
    1064970, 
    1068200, 
    1071790, 
    1075720, 
    1077390, 
    1080120, 
    1080960, 
    1082210, 
    1083640, 
    1086220, 
    1090230, 
    1092490, 
    1094250, 
    1097960, 
    1101680, 
    1105200, 
    1106910, 
    1108690, 
    1111950, 
    1115400, 
    1116300, 
    1116980, 
    1117250, 
    1117810, 
    1122130, 
    1123870, 
    1125540, 
    1127990, 
    1130880, 
    1134370, 
    1135900, 
    1139980, 
    1143000, 
    1146580, 
    1151230, 
    1152510, 
    1153300, 
    1156000, 
    1159300, 
    1162320, 
    1165190, 
    1169730, 
    1174810, 
    1176510, 
    1179630, 
    1182620, 
    1185620, 
    1187370, 
    1190430, 
    1191600, 
    1194680
  ], 
  "end": [
    710, 
    5530, 
    7440, 
    11410, 
    15860, 
    16129, 
    20610, 
    23980, 
    25100, 
    28960, 
    31590, 
    36280, 
    39520, 
    44790, 
    45840, 
    47970, 
    49750, 
    53150, 
    54980, 
    57380, 
    61560, 
    65319, 
    69230, 
    71940, 
    75590, 
    79770, 
    83720, 
    84800, 
    88250, 
    91570, 
    93510, 
    97630, 
    98910, 
    102050, 
    104940, 
    108090, 
    111320, 
    112400, 
    116130, 
    120050, 
    123370, 
    124990, 
    126700, 
    129039, 
    130620, 
    132260, 
    133780, 
    136660, 
    138520, 
    143580, 
    145490, 
    146440, 
    149920, 
    153650, 
    157190, 
    160380, 
    163830, 
    168530, 
    171270, 
    174010, 
    176470, 
    177720, 
    181220, 
    184420, 
    185390, 
    188970, 
    193120, 
    194310, 
    198390, 
    202050, 
    204290, 
    207360, 
    209490, 
    212770, 
    215650, 
    217020, 
    218050, 
    218630, 
    221780, 
    223580, 
    226060, 
    226360, 
    231290, 
    233770, 
    234700, 
    239450, 
    240890, 
    246390, 
    247310, 
    250460, 
    251570, 
    256560, 
    260600, 
    261959, 
    265920, 
    268950, 
    271870, 
    273490, 
    278380, 
    279800, 
    282880, 
    284310, 
    287540, 
    289670, 
    292890, 
    294700, 
    297270, 
    298650, 
    302250, 
    304210, 
    305440, 
    308570, 
    309870, 
    312530, 
    314000, 
    317380, 
    320700, 
    322100, 
    325520, 
    327010, 
    329650, 
    330070, 
    333100, 
    335650, 
    340045, 
    342930, 
    345670, 
    348510, 
    349250, 
    353960, 
    356000, 
    359960, 
    362410, 
    365260, 
    366530, 
    368260, 
    372490, 
    374030, 
    376670, 
    380050, 
    382190, 
    385210, 
    386200, 
    388680, 
    391945, 
    394910, 
    395630, 
    397480, 
    400590, 
    402480, 
    406940, 
    410750, 
    414910, 
    415580, 
    419530, 
    421100, 
    422460, 
    425140, 
    429500, 
    431760, 
    435870, 
    439890, 
    442600, 
    446620, 
    448070, 
    450850, 
    454250, 
    455420, 
    459090, 
    462950, 
    464310, 
    468280, 
    470840, 
    474190, 
    476770, 
    478170, 
    480530, 
    481860, 
    485230, 
    488530, 
    489510, 
    493600, 
    495790, 
    497250, 
    500785, 
    503170, 
    508540, 
    511880, 
    512940, 
    514650, 
    516270, 
    519309, 
    521400, 
    524390, 
    528430, 
    529200, 
    533370, 
    534440, 
    537300, 
    537890, 
    539960, 
    541320, 
    544940, 
    549890, 
    550550, 
    551910, 
    554630, 
    558010, 
    559680, 
    565020, 
    568900, 
    572250, 
    574010, 
    576200, 
    577320, 
    580060, 
    581430, 
    585360, 
    588960, 
    590580, 
    593790, 
    596280, 
    598110, 
    603570, 
    605060, 
    609390, 
    612230, 
    614720, 
    617710, 
    621200, 
    625860, 
    627390, 
    632350, 
    635660, 
    639460, 
    642790, 
    647180, 
    648350, 
    651730, 
    655580, 
    656750, 
    659680, 
    662020, 
    663450, 
    666530, 
    669540, 
    672550, 
    673580, 
    675780, 
    676690, 
    679990, 
    681670, 
    685320, 
    688500, 
    692700, 
    695670, 
    696760, 
    699740, 
    700770, 
    702280, 
    706680, 
    708030, 
    710000, 
    713650, 
    717640, 
    719850, 
    723280, 
    726270, 
    729480, 
    730700, 
    734680, 
    736810, 
    740640, 
    745510, 
    749970, 
    753130, 
    756540, 
    759680, 
    766060, 
    768110, 
    771550, 
    773500, 
    775350, 
    779200, 
    782020, 
    783210, 
    785780, 
    789570, 
    791560, 
    795610, 
    799540, 
    801370, 
    804590, 
    805650, 
    808820, 
    813670, 
    815380, 
    817270, 
    818500, 
    821580, 
    822900, 
    825040, 
    828380, 
    829500, 
    832240, 
    833140, 
    835140, 
    839550, 
    842420, 
    845030, 
    846230, 
    847510, 
    851070, 
    853870, 
    854980, 
    857580, 
    858560, 
    862480, 
    866680, 
    869630, 
    874720, 
    877840, 
    879190, 
    881680, 
    882840, 
    885300, 
    886780, 
    890440, 
    893670, 
    894130, 
    897450, 
    900770, 
    905490, 
    908280, 
    912920, 
    914080, 
    916770, 
    919380, 
    923720, 
    928170, 
    932580, 
    933930, 
    934590, 
    937750, 
    938570, 
    941750, 
    944520, 
    947020, 
    948390, 
    951520, 
    953100, 
    955440, 
    957840, 
    961530, 
    965460, 
    967270, 
    970280, 
    972780, 
    976800, 
    978020, 
    980800, 
    982130, 
    986660, 
    990070, 
    991580, 
    995900, 
    999660, 
    1002510, 
    1005820, 
    1007450, 
    1010040, 
    1011160, 
    1014420, 
    1017040, 
    1020400, 
    1021710, 
    1024260, 
    1027490, 
    1030310, 
    1031910, 
    1034829, 
    1036410, 
    1038160, 
    1039369, 
    1043950, 
    1047050, 
    1049090, 
    1053560, 
    1055850, 
    1057090, 
    1058960, 
    1064970, 
    1068200, 
    1071790, 
    1075720, 
    1077390, 
    1080120, 
    1080960, 
    1082210, 
    1083640, 
    1086220, 
    1090230, 
    1092490, 
    1094250, 
    1097960, 
    1101680, 
    1105200, 
    1106910, 
    1108690, 
    1111950, 
    1115400, 
    1116300, 
    1116980, 
    1117250, 
    1117810, 
    1122130, 
    1123870, 
    1125540, 
    1127990, 
    1130880, 
    1134370, 
    1135900, 
    1139980, 
    1143000, 
    1146580, 
    1151230, 
    1152510, 
    1153300, 
    1156000, 
    1159300, 
    1162320, 
    1165190, 
    1169730, 
    1174810, 
    1176510, 
    1179630, 
    1182620, 
    1185620, 
    1187370, 
    1190430, 
    1191600, 
    1194680, 
    1195930
  ], 
  "text": [
    "DAVID PATTERSON: Yes.", 
    "So there's the benefits of the design reviews in terms of the education for", 
    "the people involved.", 
    "And you can learn just if you show up from things you didn't know about.", 
    "But again, in this Agile model, it's unclear how that's going to go.", 
    "ARMANDO FOX: OK.", 
    "So Dave just spent some time talking about some techniques that he said are", 
    "kind of based on common sense, but will help you throughout your entire", 
    "software career.", 
    "Now we're going to talk about things that are very far from common sense,", 
    "but they will help you throughout your entire software career.", 
    "When we did surveys of the course from previous semesters, and we asked how", 
    "useful or how important did these topics turn out to be now that you're", 
    "working in industry, better skills for using version control was", 
    "unanimously--", 
    "among all the various cohorts of students--", 
    "ranked as the most valuable skill.", 
    "Nobody would have wanted to hear less about version control.", 
    "Everybody thought that if anything, we should do more.", 
    "So we're doing a little more.", 
    "And since we're on the topic of teams, we'll focus on how version control can", 
    "help you out in a team setting as distinct from what it can do for you", 
    "when you're working on this stuff by yourself.", 
    "So strictly speaking, version control is kind of an impoverished term.", 
    "Most people like to call it something like source configuration management.", 
    "The idea is that you can snapshot or keep versions of not just your code", 
    "but your configuration files, your database migrations, as we've seen at", 
    "key points in time.", 
    "So let's not worry too much about how this is actually implemented, right?", 
    "The naive implementation would be you keep a full copy of every file.", 
    "There's many optimizations that you could do.", 
    "And in general, most of the systems that have succeeded, do it in a", 
    "non-naive way.", 
    "But there's a lot of uses for version control that aren't fully appreciated.", 
    "Sort of the obvious one is that you have a backup of your work at", 
    "different points in time, and if you introduce a bug, you could roll back", 
    "to an earlier snapshot that hopefully doesn't have the bug and proceed with", 
    "debugging from there.", 
    "But in a team setting, and especially in SaaS, where you're doing a lot of", 
    "deployments, another thing that you can do is you can use it to separate", 
    "deployment from development version of code and make progress on multiple", 
    "tracks at the same time.", 
    "You can document who did what when.", 
    "So if you're working in a team, somebody broke something, you could", 
    "figure out who it is.", 
    "And you can track what changes between different", 
    "revisions of the same project.", 
    "If you kind of look at the history of--", 
    "version control been around since forever, right?", 
    "Probably the first very widely used one was SCCS in Unix,", 
    "which led to RCS.", 
    "That was sort of a--", 
    "here's a nifty little set of tools that allows you to manage a modestly", 
    "sized source code base with a modest number of people working on it.", 
    "And as people realized that as the team grows and the product or the", 
    "project grows in sophistication, you need some additional features, like", 
    "the ability to do branches and things like that, and the ability to", 
    "concurrently edit, so CVS added a lot more capabilities but still was sort", 
    "of based on the underlying ideas of RCS.", 
    "As developers became disconnected, they wanted to be able to work while", 
    "they were disconnected and then merge their changes later.", 
    "Subversion came along.", 
    "If you've used SVN, SVN does a whole bunch of things.", 
    "And most of us were using Subversion until really just two", 
    "or three years ago.", 
    "Git has more or less taken over the world right now for most programmers.", 
    "And Git is an entirely new category, all right?", 
    "Git is dizzying.", 
    "So I say that, I did this not just to get a laugh-- which I got, thank you--", 
    "but also to kind of give you a little warning that we're going to-- the book", 
    "talks about some commonly used Git commands.", 
    "I'm going to share some examples of neat things that you can do with Git,", 
    "but that's like one percent of what you can do.", 
    "And a lot of the Git commands will seem arbitrary, because they're really", 
    "just a special case of a much more powerful general mechanism.", 
    "So keep that in mind, right?", 
    "Don't be scared off by it.", 
    "Git--", 
    "you'll spend your entire lives doing software and you'll never master all", 
    "of the features of Git, but that's OK.", 
    "Just take it a little bit at a time.", 
    "OK.", 
    "So the first scenario that we can look at that version control systems help", 
    "us with in a team setting is merge conflicts.", 
    "So here's the scenario.", 
    "We have two developers of not necessarily equal astuteness working", 
    "on the same project.", 
    "And Homer will clone a copy of the repository from the remote.", 
    "What is a remote?", 
    "From Git's point of view, it's any copy of the repo that's not the one on", 
    "your machine.", 
    "Which means, by the way, that in this picture, with respect to Homer, both", 
    "GitHub could be a remote, and a copy on Marge's machine could also be a", 
    "remote, right?", 
    "People often say GitHub doesn't care which one is the central repository.", 
    "That's true, although it's not terribly useful in a team setting.", 
    "Because if you're working in a small team, it's actually useful to have a", 
    "sense of a central repository.", 
    "So by convention, most people who use Git will locate their central", 
    "repository on a server.", 
    "Could be in the public cloud like GitHub or it could be like an internal", 
    "company or university one.", 
    "And by convention we'll call that one the origin repo.", 
    "So Homer will clone.", 
    "In the meantime, Marge, who already had a copy of a certain file, has made", 
    "some changes to it.", 
    "And now she will commit and push those changes.", 
    "This is stuff that you've all done.", 
    "And as you've noticed, whenever you commit a set of", 
    "changes, you get a commit-ID.", 
    "This isn't the full number of digits.", 
    "It should technically be 40, but I ran out of space.", 
    "It's a long meaningless string.", 
    "And we'll see some ways that you can avoid having to deal", 
    "with commit-IDs directly.", 
    "But the important thing is that this identifies not just that file but the", 
    "entire state of the repository at the moment that Marge did her commit and", 
    "did her push.", 
    "Now Homer tries to make a set of changes to that same file, and those", 
    "changes would conflict with Marge's.", 
    "So Homer is able to commit.", 
    "Why?", 
    "Because commit just talks about what happens on your local repo, right?", 
    "Commit is a way of snapshotting what you have been doing.", 
    "But when he tries to push, it's not going to work, because the remote copy", 
    "that he's trying to push to-- which in this case is on GitHub--", 
    "has some commits that are absent from Homer's history, right?", 
    "They're the commits that Marge did with this commit-ID .", 
    "And she pushed them.", 
    "So before he can proceed, if you wants to actually push his changes, he will", 
    "have to do a pull and merge.", 
    "That means that he'll have to get any commits that are present in the remote", 
    "but not present in his own repository.", 
    "And Git will try to, as much as it can, automatically merge", 
    "those things together.", 
    "Now in some cases, the merge is easy, right?", 
    "If Homer and Marge had been editing different files, then Marge's changes", 
    "wouldn't conflict with Homer's.", 
    "All you have to do is sort of take the union of the sets of changes.", 
    "But in this case, to make it interesting we can stipulate that they", 
    "actually tried to modify the same file.", 
    "Not only that, they tried to modify the same file at approximately the", 
    "same place.", 
    "Because if you have one person modifying the first 10 lines of a", 
    "file, and somebody else modifying the last 10 lines of a file, and the file", 
    "is 1,000 lines long, you probably could just merge those", 
    "changes, too, right?", 
    "You could just take the union of both sets.", 
    "But when they occur too close together, you can't do that, and Git", 
    "gives up on automatically trying to merge it.", 
    "And this is what gets left in Homer's repository, and it's uncommitted, OK?", 
    "Uncommitted means that these change markers, which are actually inserted", 
    "by Git, say here is some content in the file that's in the HEAD", 
    "repository.", 
    "HEAD of the repository is the latest version that I'm working with right", 
    "now, me being Homer.", 
    "On the other hand--", 
    "and here's the dashed line separating the changes--", 
    "here is what that same set of lines looks like in the commit that was most", 
    "recently fetched from the repository, right?", 
    "So in this case, we can see that where Homer had inserted two lines, you", 
    "could essentially change Homer's file into Marge's file by replacing these", 
    "two lines in purple with the one line in orange, right?", 
    "And in a single file, you can actually have multiple different places where a", 
    "merge conflict occurred.", 
    "So at this point, Homer has to manually edit the file.", 
    "This file with the change markers in it has not been committed.", 
    "It's dirty.", 
    "It's in Homer's repo, but it hasn't been persisted yet.", 
    "He will manually change the file so as to fix the shopping list the way that", 
    "he wants it.", 
    "And at this point, he can now commit and push the results.", 
    "And the result is nominally a merge of the two of them.", 
    "Now in his example, he just completely eliminated Marge's changes.", 
    "I don't know that I would suggest doing that with Marge or with your own", 
    "team partners.", 
    "But the point is, whenever there's a merge conflict at least you", 
    "know about it, right?", 
    "And the fact that somebody had to manually resolve the merge conflict", 
    "and then push the merge version gets recorded permanently", 
    "in the commit log.", 
    "So Marge will eventually find out, and she will be able to do a diff between", 
    "the version of the file that's there now and the version", 
    "she thought she committed.", 
    "And as we'll see, there's a command that's actually called git blame that", 
    "tells you who changed which lines of a file last.", 
    "So as we said before, the most common way that Git is used in small teams is", 
    "that there's one copy of the repo that is considered to be", 
    "authoritative, right?", 
    "We're all going to push to GitHub.", 
    "That's going to be the origin repo.", 
    "And it's everybody's responsibility to be pulling from there to make sure", 
    "that they have the latest changes.", 
    "If you read about Git compared to other version control systems that", 
    "came earlier, one of the top 10 things you hear Git is peer-to-peer.", 
    "Git doesn't care.", 
    "There's no central repository that represents the gospel truth.", 
    "And technically that's true.", 
    "There's nothing in the implementation of Git that requires you to have a", 
    "central repo.", 
    "But the truth is, for a small team, it makes sense to", 
    "organize things that way.", 
    "So the model that we use for this course and that most small teams use", 
    "with Git revolves around the team sharing a notion of one copy being", 
    "authoritative.", 
    "And that's usually the origin copy.", 
    "That's the origin remote.", 
    "So when you actually say git pull, what's actually going on?", 
    "It's actually a combination of two things.", 
    "It's really a shortcut for git fetch, which pulls a copy of the remote", 
    "version of the repository down to you, and git merge, which tries to", 
    "reconcile the differences between the two of them and leave you with a", 
    "merged version of the two.", 
    "So when you're trying to merge two repos, what are you", 
    "really trying to do?", 
    "You're trying to make sure that any commit that appears in one of them can", 
    "be applied in both of them.", 
    "And like we saw, in some cases that results in conflicts if people tried", 
    "to edit the same file in different places.", 
    "And in other cases it doesn't, right?", 
    "In a lot of cases you'll do a git pull, and you'll get updates to a", 
    "bunch of files, but none of those are files that you changed.", 
    "And in that case, it's all right.", 
    "So git pull is a combination of two operations, and it's also a shortcut", 
    "for this more general command.", 
    "The more general version of Git tells which remote you want to pull from and", 
    "which branch you want to pull from that remote.", 
    "We're going to talk about branches in the next segment.", 
    "But for now be aware that this is the full form, right?", 
    "So when we say Git is peer-to-peer and doesn't care about a central", 
    "repository, all that means is we could change origin to the name of some", 
    "other remote that we've set up, right?", 
    "When you first install and configure Git, you can set up different remotes", 
    "for a repository, and you could pull or push to any one of those.", 
    "But in the small team setting, because we're using a centralized repository,", 
    "most of the time you'll just be pulling or pushing from the origin.", 
    "And master talks about which branch of that remote repo you want to merge", 
    "into your local copy.", 
    "So far, most of you have probably just been using the master branch, but in a", 
    "moment we'll talk about reasons to use other branches and how to manage them", 
    "using the Git commands.", 
    "If you do a successful merge-- in other words, if you do a git pull, you", 
    "don't see any error messages, there were no conflicts--", 
    "that implies a commit.", 
    "So at the end of that merge, everything that you have locally that", 
    "has been merged in the changes from the remote repo--", 
    "those changes have been committed for you, but they haven't", 
    "been pushed, right?", 
    "So if you also have changes that you need to push, you still", 
    "have to do that step.", 
    "But a successful merge implies a commit, which means you should always", 
    "commit before trying to merge.", 
    "Because if you have uncommitted changes, and merging might screw", 
    "something up, there's a chance that you'll lose or find it difficult to", 
    "reconstruct your files the way they were before you attempted the merge.", 
    "Now Git warns you if you try to do this, and you have to go out of your", 
    "way to override it.", 
    "And there's even some commands that we'll show in a minute to undo when", 
    "you screw up using Git.", 
    "These are very useful commands.", 
    "But as a good rule of thumb, is commit early, commit often, and always commit", 
    "before merging and pulling.", 
    "Small commits are fine, right?", 
    "It's fine to actually have-- if you make a semi-important change to just a", 
    "single file, you could just do git add on that one file and then git commit", 
    "with a message that's only about that file.", 
    "If it becomes important later on to have a lower number of commits", 
    "because, for example, you want the publicly visible change history to be", 
    "a little bit cleaner, there's separate mechanisms you can use to clean it up.", 
    "So what's a commit?", 
    "A commit is-- logically speaking, it's really a snapshot of the entire tree", 
    "that constitutes your copy of the repo.", 
    "And an interesting factoid is that that 40-digit hex hash, which is", 
    "called the commit-ID, is in principle unique in the universe, right-- not", 
    "just for your repo but for any repo anywhere in the universe.", 
    "Module of the collisions of SHA-1, which is the algorithm they use to", 
    "hash the tree content into a 40-digit string.", 
    "Of course, it's kind of a pain in the butt to be referring to a 40-digit", 
    "commit-ID, so here's a small number of the great many ways that you can refer", 
    "to a particular commit that is not the HEAD.", 
    "Remember, the HEAD is the latest committed version that I have right", 
    "now in front of me, right?", 
    "But there's also--", 
    "if you just finished doing a merge, Git will create a label called", 
    "ORIG_HEAD, which points to what it looked like right", 
    "before you merged it.", 
    "So you still have the ability to ask the question, what's the difference", 
    "between this file as it appeared before the merge and this file as it", 
    "appears after the merge?", 
    "You could also do HEAD~ followed by an integer, which means that many commits", 
    "back from the HEAD, so HEAD~3 would mean 3 commits earlier than where the", 
    "HEAD is now.", 
    "You can also apply the twiddle notation to the unique", 
    "prefix of any commit.", 
    "So assuming that there's a single commit in my repo that begins with", 
    "this prefix, this notation would mean two commits before that one.", 
    "This is one of the more useful features.", 
    "And usually you have to put it in quotes to protect it", 
    "from the Unix shell.", 
    "But it basically lets you say what did the master branch look", 
    "like on this date?", 
    "And with the date you can also include a time stamp.", 
    "And almost any time format you can think of that is sensible will be", 
    "parsed correctly.", 
    "So this is particularly useful when you have that nightmare", 
    "saying, wait a minute.", 
    "This worked at 11:30 PM yesterday.", 
    "OK, well, you can ask, what files changed since 11:30 PM yesterday?", 
    "In this notation, again master refers to a branch.", 
    "We haven't talked about branches yet, but we're going to shortly.", 
    "What if you screw something up?", 
    "This happens all the time.", 
    "So, fortunately, there's a number of ways to get out of it.", 
    "Git reset is one of these commands that really ought to be", 
    "four different commands.", 
    "Because depending on which command line options you give it, it does four", 
    "different things.", 
    "But one of the things it can do is when you give it the --hard option, it", 
    "means basically throw away anything after this point, right?", 
    "So if I just did a merge, and I decided that it was screwed up beyond", 
    "all recognition, I could say git reset --hard ORIG_HEAD, which means restore", 
    "the world to what this commit looked like and throw away any", 
    "changes since then.", 
    "Now, if you're using this to recover from a bad merge,", 
    "that's just fine, right?", 
    "Because you want to get rid of the changes that were", 
    "introduced by that bad merge.", 
    "But be careful that if you use this, and you've manually made other changes", 
    "to file since then, you're going to incinerate those changes.", 
    "OK?", 
    "And even if those changes are committed, git reset --HARD will", 
    "essentially roll back the clock as if you hadn't done that.", 
    "Same thing you can say throw away all changes since the last commit that I", 
    "have, commit that I made on HEAD branch.", 
    "I can also say give me the versions of these files as they appeared in this", 
    "other commit-ID.", 
    "So you don't have to roll back your entire repository to an earlier", 
    "commit, You can cherry pick only certain files.", 
    "I've shown the most common or-- well I'll say the safest syntax for this is", 
    "that you give a commit-ID, which could be a prefix of a hex string.", 
    "Or it could be one of those symbolic representations of a commit-ID, a --", 
    "and then a list of files.", 
    "The --", 
    "is there because there's a number of different variants of syntax for the", 
    "checkout command.", 
    "And in some of those variants, it's hard for Git to figure out where the", 
    "list of files begins and the list of options ends.", 
    "So to be safe, if you put --", 
    "anything after the --", 
    "is here's the list of files that I want this to apply to.", 
    "What if I want to compare things?", 
    "I don't necessarily need to undo stuff, but I want to understand what", 
    "changed between different versions.", 
    "Well, there's a diff command, whose output is just the same as Unix diff.", 
    "And I can give it a single commit-ID, which means compare the HEAD with", 
    "whatever that commit is.", 
    "If I omit files, it'll just show me the diffs for all of the files, But I", 
    "can also narrow it down to only the ones that I care about.", 
    "I can also give a pair of commit-IDs and see what did the files look like", 
    "between those two different commits?", 
    "What were the changes that were made going from the earlier one", 
    "to the later one?", 
    "You can ask questions like show me the difference between these set of files", 
    "as they exist right now and as they existed on this branch as of", 
    "this date and time?", 
    "I can also ask who changed various lines of this file and when?", 
    "So for each file that you specify, you'll get a line-by-line listing of", 
    "who was the last person that made changes to that file?", 
    "And you can look up the log message explaining what those changes were", 
    "supposed to have been.", 
    "And of course you could also just look at the log for a", 
    "particular set of files.", 
    "You can look at the logs for a set of files between two commits.", 
    "Basically any permutation of these that you can imagine.", 
    "So I'm trying to give a small number of commands that have a lot", 
    "of common use cases.", 
    "But it's worth taking some time.", 
    "When you run into a Git command you don't recognize, read the man pages.", 
    "They're not the most understandable in the universe, but Git really is like a", 
    "Swiss Army chainsaw.", 
    "If it can be done with version control, Git can do it.", 
    "So have a little patience as you approach it.", 
    "It's an immensely powerful tool.", 
    "So, kind of summarizing.", 
    "Here's how I think of dealing with conflicts and version control.", 
    "And this applies to other systems besides Git, although we're going to", 
    "use Git for all our examples.", 
    "When you do a pull or a clone, ideally in the absence of a conflict, you then", 
    "edit some files, maybe you add some stuff.", 
    "You've committed.", 
    "And you're ready to push those files.", 
    "Ideally, when you try to push, there's no conflict, meaning that the remote", 
    "that you're pushing to doesn't have any commits that you lack.", 
    "But if that isn't the case, if there's commits that are present in the remote", 
    "but absent from your copy, then you have to pull and manually resolve any", 
    "conflicts that might arise, all right?", 
    "And like we said, they don't necessarily have to arise.", 
    "Time passes.", 
    "You walk away from the code.", 
    "Other people continue to work.", 
    "And when you come back, you do another pull.", 
    "Hopefully there's no conflict this time, But again, you can edit the", 
    "files to resolve any conflicts that Git couldn't", 
    "automatically resolve for you.", 
    "In some cases, Git can do an automatic merge and a commit.", 
    "And then you're back to square one or circle one, right?", 
    "So conflicts are not really that bad of a thing.", 
    "They actually happen a lot when you're working in teams.", 
    "But they are a useful flag.", 
    "That if you've got two people working on the same file who you didn't think", 
    "would be working on the same file, this is a good way to be alerted to", 
    "the answer.", 
    "Question?", 
    "Ah.", 
    "Good question.", 
    "So the question was, if you try to do a merge and there's a conflict, and", 
    "the file now has conflict markers.", 
    "You fix up the file, and you commit it.", 
    "How does Git know that you've resolved the conflict?", 
    "It's because you're basically promising that you have.", 
    "So in particular, it does not check for the absence of those conflict", 
    "markers or anything like that, right?", 
    "It basically trusts you that if you had a conflict and now you recommit", 
    "and repush, you consider that file to be fixed.", 
    "So I think the corollary is, when you see a conflict in a file, you should", 
    "do a grep to make sure that you found all of the conflict markers, not just", 
    "the first one at the top of file.", 
    "Good question.", 
    "OK, well, with this in mind, we can now ask.", 
    "And I'm sure you've all seen this message at some point.", 
    "If not, it's because you're not using Git, so bad for you.", 
    "But if you try to push to a remote, and you get that error that says", 
    "non-fast-forward: failed to push some refs, which statement is false?", 
    "So does it mean that some commits present at the remote are not present", 
    "in your local repo?", 
    "Does it mean that you need to do a merge and pull before you can", 
    "complete your push?", 
    "Does it mean that you need to manually fix up merge conflicts", 
    "in one or more files?", 
    "Does it mean that your local repo is out-of-date with", 
    "respect to the remote?", 
    "So one of these is false.", 
    "The other three are true."
  ]
}