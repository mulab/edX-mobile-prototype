{
  "start": [
    220, 
    3070, 
    4770, 
    7530, 
    8700, 
    9580, 
    11400, 
    13990, 
    18110, 
    19620, 
    24400, 
    28760, 
    32430, 
    36060, 
    37970, 
    39980, 
    41220, 
    45220, 
    46880, 
    51160, 
    52710, 
    56550, 
    59690, 
    63960, 
    64640, 
    69350, 
    70510, 
    73460, 
    75830, 
    79940, 
    81260, 
    84200, 
    86230, 
    90000, 
    91750, 
    93750, 
    96110, 
    98780, 
    100620, 
    104180, 
    107990, 
    111730, 
    112620, 
    114060, 
    115840, 
    118680, 
    121640, 
    125230, 
    128630, 
    131730, 
    134290, 
    136560, 
    138490, 
    139960, 
    141200, 
    143850, 
    147970, 
    150370, 
    154610, 
    158040, 
    159380, 
    161320, 
    163640, 
    164810, 
    166350, 
    170210, 
    171320, 
    174720, 
    176280, 
    180480, 
    182210, 
    185680, 
    186600, 
    189020, 
    189990, 
    193220, 
    196120, 
    201500, 
    204860, 
    207740, 
    215030, 
    217690, 
    221780, 
    223350, 
    226200, 
    227150, 
    229310, 
    231090, 
    233280, 
    234300, 
    237540, 
    242930, 
    245380, 
    248342, 
    249830, 
    253380, 
    255510, 
    257079, 
    260450, 
    263840, 
    266220, 
    267880, 
    270090, 
    273990, 
    275605, 
    276950, 
    280380, 
    284710, 
    287900, 
    289640, 
    292760, 
    295540, 
    298870, 
    300420, 
    302400, 
    305050, 
    307420, 
    308880, 
    312140, 
    313870, 
    315890, 
    320630, 
    321440, 
    326640, 
    328070, 
    332290, 
    333930, 
    336740, 
    342070, 
    343620, 
    346700, 
    350080, 
    352700, 
    356620, 
    358280, 
    361730, 
    363840, 
    365980, 
    371330, 
    373550, 
    376880, 
    378870, 
    382180, 
    384910, 
    389640, 
    393730, 
    399530, 
    410700, 
    414940, 
    418775, 
    422350, 
    424510, 
    427180, 
    431910, 
    438020, 
    442970, 
    444850, 
    447560, 
    449700, 
    450550, 
    451490, 
    455190, 
    456020, 
    459100, 
    460420, 
    463660, 
    468870, 
    471320, 
    478700, 
    478938, 
    481380, 
    483970, 
    485700, 
    489960, 
    491930, 
    495380, 
    499190, 
    499870, 
    502990, 
    507020, 
    507990, 
    509400, 
    510700, 
    513890, 
    515090, 
    518549, 
    519539, 
    523679, 
    528030, 
    528940, 
    530370, 
    535210, 
    537010, 
    540160, 
    542880, 
    547220, 
    551140, 
    555230, 
    557300, 
    561610, 
    562690, 
    564660, 
    567580, 
    569420, 
    573420, 
    578590, 
    580760, 
    584720, 
    586450, 
    589270, 
    593520, 
    596360, 
    599170, 
    601810, 
    607030, 
    611150, 
    615070, 
    616870, 
    620240, 
    622460, 
    626620, 
    627750, 
    631220, 
    632450, 
    632720, 
    635750, 
    637110, 
    641290, 
    644330, 
    645260, 
    646130, 
    651680, 
    655500, 
    658060, 
    659310, 
    662890, 
    666560, 
    668490, 
    670840, 
    672600, 
    676810, 
    679670, 
    682270, 
    683830, 
    684410, 
    685220, 
    686050, 
    688350, 
    690520, 
    692050, 
    693470, 
    696280, 
    698600, 
    699150, 
    702120, 
    705470, 
    708750, 
    710050, 
    712570, 
    716810, 
    719970, 
    721610, 
    723520, 
    726230, 
    728310, 
    732120, 
    733630, 
    736630, 
    741150, 
    742910, 
    746210, 
    748530, 
    750320, 
    754270, 
    755080, 
    759530, 
    763080, 
    766460, 
    767980, 
    771490, 
    774670, 
    775840, 
    777910, 
    782290, 
    783930, 
    786920, 
    791440, 
    793890, 
    796730, 
    797620, 
    799020, 
    800420, 
    803570, 
    805950, 
    806930, 
    808140, 
    811030, 
    811910, 
    814120, 
    816230, 
    819550, 
    822950, 
    826830, 
    830790, 
    833780, 
    837130, 
    842270, 
    844340, 
    847270, 
    852390, 
    853910, 
    855400, 
    856970, 
    859380, 
    863420, 
    866770, 
    874340, 
    875380, 
    877510, 
    878310, 
    883580, 
    886250, 
    890560, 
    894840, 
    898170, 
    900380, 
    902000, 
    906370, 
    907980, 
    912290, 
    914750, 
    917080, 
    920640, 
    922250, 
    924670, 
    926360, 
    930120, 
    932040, 
    936920, 
    940080, 
    943830, 
    947670, 
    951180, 
    954910, 
    958170, 
    962590, 
    964150, 
    967460, 
    969470, 
    972860, 
    976340, 
    980520, 
    982090, 
    983850, 
    987100, 
    989270, 
    992700, 
    996520, 
    998210, 
    1001930, 
    1002430, 
    1005030, 
    1006350, 
    1009810, 
    1012050, 
    1014840, 
    1018000, 
    1021890, 
    1025730, 
    1026608, 
    1029569, 
    1031710, 
    1036400, 
    1037280, 
    1042390, 
    1044420, 
    1046910, 
    1048830, 
    1053150, 
    1054260, 
    1058400, 
    1062030, 
    1068340, 
    1071320, 
    1075250, 
    1076680, 
    1080500, 
    1083650, 
    1088070, 
    1089730, 
    1091350, 
    1094140, 
    1096360, 
    1099040, 
    1099940, 
    1104860, 
    1107010, 
    1109450, 
    1112710, 
    1114110, 
    1116940, 
    1118330, 
    1121780, 
    1123910, 
    1125430, 
    1129700, 
    1131870, 
    1133290, 
    1136830, 
    1141490, 
    1142560, 
    1146720, 
    1148360, 
    1153580, 
    1155590, 
    1158800, 
    1161030, 
    1161890, 
    1164410, 
    1169030, 
    1172400, 
    1173830, 
    1175390, 
    1178350, 
    1182140, 
    1184340, 
    1188720, 
    1191640, 
    1194495, 
    1197300, 
    1202510, 
    1205780, 
    1210640, 
    1213020, 
    1217980, 
    1219120, 
    1221460, 
    1223200, 
    1224010, 
    1227160, 
    1230090, 
    1234060, 
    1239310, 
    1243090, 
    1245570, 
    1247710, 
    1251190, 
    1254020, 
    1255560, 
    1259140, 
    1262130, 
    1263470, 
    1266540, 
    1267610, 
    1269990, 
    1271500, 
    1276620, 
    1280650, 
    1281820, 
    1284120, 
    1285670, 
    1286620, 
    1289430, 
    1292380, 
    1293210, 
    1297100, 
    1300630, 
    1301770, 
    1304590, 
    1306980, 
    1308400, 
    1311800, 
    1313600, 
    1317130, 
    1319790, 
    1323300, 
    1326090, 
    1329550, 
    1331370, 
    1337350, 
    1338070, 
    1340020, 
    1342570, 
    1345130, 
    1347790, 
    1351110, 
    1352260, 
    1355280, 
    1358730, 
    1360190, 
    1361930, 
    1363760, 
    1365320, 
    1368520, 
    1372660, 
    1375900, 
    1376520, 
    1378810, 
    1381610, 
    1383230, 
    1386800, 
    1389100, 
    1394520, 
    1395650, 
    1397140, 
    1400020, 
    1405270, 
    1407310, 
    1413010, 
    1415720, 
    1417500, 
    1421660, 
    1423560, 
    1427340, 
    1430800, 
    1433320, 
    1437100, 
    1440240, 
    1444590, 
    1447290, 
    1450850, 
    1454140, 
    1455370, 
    1457300, 
    1459730, 
    1462090, 
    1468623, 
    1473550, 
    1475500, 
    1479950, 
    1483950, 
    1488570, 
    1493830, 
    1498340, 
    1499950, 
    1502780, 
    1505060, 
    1509890, 
    1513220, 
    1515880, 
    1516870, 
    1519340, 
    1521650, 
    1522970, 
    1524720, 
    1528590, 
    1534470, 
    1537530, 
    1543680, 
    1545340, 
    1550030, 
    1553180, 
    1557480, 
    1561640, 
    1562760, 
    1564320, 
    1567370, 
    1571010, 
    1573310, 
    1578210, 
    1581950, 
    1584330, 
    1589480, 
    1591510, 
    1593050, 
    1597100, 
    1600930, 
    1603710, 
    1605330, 
    1608360, 
    1610580, 
    1611790, 
    1613760, 
    1616080, 
    1620690, 
    1621680, 
    1627340, 
    1630290, 
    1632040, 
    1634950, 
    1637870, 
    1638545, 
    1641350, 
    1643060, 
    1645500, 
    1648610, 
    1650130, 
    1652650, 
    1653920, 
    1655510, 
    1658310, 
    1663150, 
    1665900, 
    1667040, 
    1670410, 
    1671860, 
    1674550, 
    1676460, 
    1680840, 
    1683250, 
    1684590, 
    1685880, 
    1687430, 
    1689690, 
    1693220, 
    1694820, 
    1697090, 
    1700410, 
    1703700, 
    1705320, 
    1706320, 
    1708680, 
    1710870, 
    1713080, 
    1714670, 
    1717630, 
    1719460, 
    1723360, 
    1726390, 
    1729570, 
    1730470, 
    1733360, 
    1736180, 
    1737970, 
    1742300, 
    1745050, 
    1749460, 
    1751470, 
    1754570, 
    1758190, 
    1761490, 
    1764440, 
    1770700, 
    1771450, 
    1773840, 
    1777750, 
    1780990, 
    1784300, 
    1789010, 
    1790800, 
    1792100, 
    1795180, 
    1796430, 
    1800960, 
    1804840, 
    1808050, 
    1811920, 
    1813680, 
    1815840, 
    1818700, 
    1821960, 
    1824500, 
    1828110, 
    1830730, 
    1831930, 
    1835570, 
    1838070, 
    1839680, 
    1843310, 
    1845840, 
    1848670, 
    1849720, 
    1853300, 
    1855160, 
    1856400, 
    1859500, 
    1863910, 
    1867140, 
    1869160, 
    1871180, 
    1873810, 
    1877010, 
    1880110, 
    1880990, 
    1883290, 
    1885950, 
    1889860, 
    1892810, 
    1896010, 
    1898290, 
    1901280, 
    1904370, 
    1906830, 
    1910730, 
    1914020, 
    1917880, 
    1919040, 
    1921980, 
    1926190, 
    1927950, 
    1928960, 
    1930310, 
    1931650, 
    1934700, 
    1936420, 
    1936850, 
    1941260, 
    1944540, 
    1946550, 
    1949230, 
    1950130, 
    1951310, 
    1953440, 
    1954590, 
    1957410, 
    1959820, 
    1961730, 
    1964000, 
    1965030, 
    1966800, 
    1970990, 
    1973940, 
    1979550, 
    1982030, 
    1987300, 
    1989990, 
    1991700, 
    1992620, 
    1993560, 
    1995590, 
    1999100, 
    2001810, 
    2004570, 
    2007820, 
    2013820, 
    2016476, 
    2018160, 
    2020730
  ], 
  "end": [
    3070, 
    4770, 
    7530, 
    8700, 
    9580, 
    11400, 
    13990, 
    18110, 
    19620, 
    24400, 
    28760, 
    32430, 
    36060, 
    37970, 
    39980, 
    41220, 
    45220, 
    46880, 
    51160, 
    52710, 
    56550, 
    59690, 
    63960, 
    64640, 
    69350, 
    70510, 
    73460, 
    75830, 
    79940, 
    81260, 
    84200, 
    86230, 
    90000, 
    91750, 
    93750, 
    96110, 
    98780, 
    100620, 
    104180, 
    107990, 
    111730, 
    112620, 
    114060, 
    115840, 
    118680, 
    121640, 
    125230, 
    128630, 
    131730, 
    134290, 
    136560, 
    138490, 
    139960, 
    141200, 
    143850, 
    147970, 
    150370, 
    154610, 
    158040, 
    159380, 
    161320, 
    163640, 
    164810, 
    166350, 
    170210, 
    171320, 
    174720, 
    176280, 
    180480, 
    182210, 
    185680, 
    186600, 
    189020, 
    189990, 
    193220, 
    196120, 
    201500, 
    204860, 
    207740, 
    209810, 
    217690, 
    221780, 
    223350, 
    226200, 
    227150, 
    229310, 
    231090, 
    233280, 
    234300, 
    237540, 
    242930, 
    245380, 
    248342, 
    249830, 
    253380, 
    255510, 
    257079, 
    260450, 
    263840, 
    266220, 
    267880, 
    270090, 
    273990, 
    275605, 
    276950, 
    280380, 
    284710, 
    287900, 
    289640, 
    292760, 
    295540, 
    298870, 
    300420, 
    302400, 
    305050, 
    307420, 
    308880, 
    312140, 
    313870, 
    315890, 
    320630, 
    321440, 
    326640, 
    328070, 
    332290, 
    333930, 
    336740, 
    342070, 
    343620, 
    346700, 
    350080, 
    352700, 
    356620, 
    358280, 
    361730, 
    363840, 
    365980, 
    371330, 
    373550, 
    376880, 
    378870, 
    382180, 
    384910, 
    389640, 
    393730, 
    399530, 
    402990, 
    414940, 
    416190, 
    422350, 
    424510, 
    427180, 
    428805, 
    438020, 
    442970, 
    444850, 
    447560, 
    449700, 
    450550, 
    451490, 
    455190, 
    456020, 
    459100, 
    460420, 
    463660, 
    468870, 
    471320, 
    474290, 
    478938, 
    481380, 
    483970, 
    485700, 
    489960, 
    491930, 
    495380, 
    499190, 
    499870, 
    502990, 
    507020, 
    507990, 
    509400, 
    510700, 
    513890, 
    515090, 
    518549, 
    519539, 
    523679, 
    528030, 
    528940, 
    530370, 
    535210, 
    537010, 
    540160, 
    542880, 
    547220, 
    551140, 
    552390, 
    557300, 
    561610, 
    562690, 
    564660, 
    567580, 
    569420, 
    573420, 
    578590, 
    580760, 
    584720, 
    586450, 
    589270, 
    593520, 
    596360, 
    599170, 
    601810, 
    607030, 
    611150, 
    615070, 
    616870, 
    620240, 
    622460, 
    626620, 
    627750, 
    631220, 
    632450, 
    632720, 
    635750, 
    637110, 
    641290, 
    644330, 
    645260, 
    646130, 
    651680, 
    655500, 
    658060, 
    659310, 
    662890, 
    666560, 
    668490, 
    670840, 
    672600, 
    676810, 
    679670, 
    682270, 
    683830, 
    684410, 
    685220, 
    686050, 
    688350, 
    690520, 
    692050, 
    693470, 
    696280, 
    698600, 
    699150, 
    702120, 
    705470, 
    708750, 
    710050, 
    712570, 
    716810, 
    719970, 
    721610, 
    723520, 
    726230, 
    728310, 
    732120, 
    733630, 
    736630, 
    741150, 
    742910, 
    746210, 
    748530, 
    750320, 
    754270, 
    755080, 
    759530, 
    763080, 
    766460, 
    767980, 
    771490, 
    774670, 
    775840, 
    777910, 
    782290, 
    783930, 
    786920, 
    791440, 
    793890, 
    796730, 
    797620, 
    799020, 
    800420, 
    803570, 
    805950, 
    806930, 
    808140, 
    811030, 
    811910, 
    814120, 
    816230, 
    819550, 
    822950, 
    826830, 
    830790, 
    833780, 
    837130, 
    838380, 
    844340, 
    847270, 
    852390, 
    853910, 
    855400, 
    856970, 
    859380, 
    863420, 
    866770, 
    868060, 
    875380, 
    877510, 
    878310, 
    883580, 
    886250, 
    890560, 
    894840, 
    898170, 
    900380, 
    902000, 
    906370, 
    907980, 
    912290, 
    914750, 
    917080, 
    920640, 
    922250, 
    924670, 
    926360, 
    930120, 
    932040, 
    936920, 
    940080, 
    943830, 
    947670, 
    951180, 
    954910, 
    958170, 
    962590, 
    964150, 
    967460, 
    969470, 
    972860, 
    976340, 
    980520, 
    982090, 
    983850, 
    987100, 
    989270, 
    992700, 
    996520, 
    998210, 
    1001930, 
    1002430, 
    1005030, 
    1006350, 
    1009810, 
    1012050, 
    1014840, 
    1018000, 
    1021890, 
    1025730, 
    1026609, 
    1029569, 
    1031710, 
    1036400, 
    1037280, 
    1042390, 
    1044420, 
    1046910, 
    1048830, 
    1053150, 
    1054260, 
    1058400, 
    1062030, 
    1068340, 
    1071320, 
    1075250, 
    1076680, 
    1080500, 
    1083650, 
    1088070, 
    1089730, 
    1091350, 
    1094140, 
    1096360, 
    1099040, 
    1099940, 
    1104860, 
    1107010, 
    1109450, 
    1112710, 
    1114110, 
    1116940, 
    1118330, 
    1121780, 
    1123910, 
    1125430, 
    1129700, 
    1131870, 
    1133290, 
    1134540, 
    1141490, 
    1142560, 
    1146720, 
    1148360, 
    1153580, 
    1155590, 
    1158800, 
    1161030, 
    1161890, 
    1164410, 
    1169030, 
    1172400, 
    1173830, 
    1175390, 
    1178350, 
    1182140, 
    1184340, 
    1188720, 
    1191640, 
    1194495, 
    1197300, 
    1202510, 
    1205780, 
    1210640, 
    1213020, 
    1217980, 
    1219120, 
    1221460, 
    1223200, 
    1224010, 
    1227160, 
    1230090, 
    1234060, 
    1239310, 
    1243090, 
    1245570, 
    1247710, 
    1251190, 
    1254020, 
    1255560, 
    1259140, 
    1262130, 
    1263470, 
    1266540, 
    1267610, 
    1269990, 
    1271500, 
    1276620, 
    1280650, 
    1281820, 
    1284120, 
    1285670, 
    1286620, 
    1289430, 
    1292380, 
    1293210, 
    1297100, 
    1300630, 
    1301770, 
    1304590, 
    1306980, 
    1308400, 
    1311800, 
    1313600, 
    1317130, 
    1319790, 
    1323300, 
    1326090, 
    1329550, 
    1331370, 
    1337350, 
    1338070, 
    1340020, 
    1342570, 
    1345130, 
    1347790, 
    1351110, 
    1352260, 
    1355280, 
    1358730, 
    1360190, 
    1361930, 
    1363760, 
    1365320, 
    1368520, 
    1372660, 
    1375900, 
    1376520, 
    1378810, 
    1381610, 
    1383230, 
    1386800, 
    1389100, 
    1394520, 
    1395650, 
    1397140, 
    1400020, 
    1405270, 
    1407310, 
    1413010, 
    1415720, 
    1417500, 
    1421660, 
    1423560, 
    1427340, 
    1430800, 
    1433320, 
    1437100, 
    1440240, 
    1444590, 
    1447290, 
    1450850, 
    1454140, 
    1455370, 
    1457300, 
    1459730, 
    1462090, 
    1468623, 
    1470920, 
    1475500, 
    1479950, 
    1483950, 
    1488570, 
    1493830, 
    1498340, 
    1499950, 
    1502780, 
    1505060, 
    1509890, 
    1513220, 
    1515880, 
    1516870, 
    1519340, 
    1521650, 
    1522970, 
    1524720, 
    1528590, 
    1534470, 
    1537530, 
    1543680, 
    1545340, 
    1550030, 
    1553180, 
    1557480, 
    1561640, 
    1562760, 
    1564320, 
    1567370, 
    1571010, 
    1573310, 
    1578210, 
    1581950, 
    1584330, 
    1589480, 
    1591510, 
    1593050, 
    1597100, 
    1600930, 
    1603710, 
    1605330, 
    1608360, 
    1610580, 
    1611790, 
    1613760, 
    1616080, 
    1620690, 
    1621680, 
    1627340, 
    1630290, 
    1632040, 
    1634950, 
    1637870, 
    1638545, 
    1641350, 
    1643060, 
    1645500, 
    1648610, 
    1650130, 
    1652650, 
    1653920, 
    1655510, 
    1658310, 
    1663150, 
    1665900, 
    1667040, 
    1670410, 
    1671860, 
    1674550, 
    1676460, 
    1680840, 
    1683250, 
    1684590, 
    1685880, 
    1687430, 
    1689690, 
    1693220, 
    1694820, 
    1697090, 
    1700410, 
    1703700, 
    1705320, 
    1706320, 
    1708680, 
    1710870, 
    1713080, 
    1714670, 
    1717630, 
    1719460, 
    1723360, 
    1726390, 
    1729570, 
    1730470, 
    1733360, 
    1736180, 
    1737970, 
    1742300, 
    1745050, 
    1749460, 
    1751470, 
    1754570, 
    1758190, 
    1761490, 
    1764440, 
    1770700, 
    1771450, 
    1773840, 
    1777750, 
    1780990, 
    1784300, 
    1789010, 
    1790800, 
    1792100, 
    1795180, 
    1796430, 
    1800960, 
    1804840, 
    1808050, 
    1811920, 
    1813680, 
    1815840, 
    1818700, 
    1821960, 
    1824500, 
    1828110, 
    1830730, 
    1831930, 
    1835570, 
    1838070, 
    1839680, 
    1843310, 
    1845840, 
    1848670, 
    1849720, 
    1853300, 
    1855160, 
    1856400, 
    1859500, 
    1863910, 
    1867140, 
    1869160, 
    1871180, 
    1873810, 
    1877010, 
    1880110, 
    1880990, 
    1883290, 
    1885950, 
    1889860, 
    1892810, 
    1896010, 
    1898290, 
    1901280, 
    1904370, 
    1906830, 
    1910730, 
    1914020, 
    1917880, 
    1919040, 
    1921980, 
    1926190, 
    1927950, 
    1928960, 
    1930310, 
    1931650, 
    1934700, 
    1936420, 
    1936850, 
    1938100, 
    1944540, 
    1946550, 
    1949230, 
    1950130, 
    1951310, 
    1953440, 
    1954590, 
    1957410, 
    1959820, 
    1961730, 
    1964000, 
    1965030, 
    1966800, 
    1970990, 
    1973940, 
    1979550, 
    1982030, 
    1987300, 
    1989990, 
    1991700, 
    1992620, 
    1993560, 
    1995590, 
    1999100, 
    2001810, 
    2004570, 
    2007820, 
    2013820, 
    2016476, 
    2018160, 
    2020730, 
    2022660
  ], 
  "text": [
    "ARMANDO FOX: First of all, which two can we rule out immediately?", 
    "1 and 3, the orange and the red.", 
    "Why can we rule out both the orange and the red ones, for the same reason", 
    "in both cases?", 
    "Here's a hint--", 
    "there's no parentheses, OK?", 
    "Remember, in JavaScript functions are first-class objects.", 
    "So Square(3).area, the .area just refers to a function.", 
    "It's not a function call.", 
    "So there's no way that either the orange or the red will evaluate to 9.", 
    "If anything, they would evaluate to area itself, which is a function.", 
    "So that rules both of those out on syntactic grounds alone.", 
    "That leaves green or blue as the one correct answer.", 
    "So why is it not green?", 
    "What did I forget to include?", 
    "Here's another way to put it--", 
    "when this area function is called, what's going to be the value of this", 
    "inside the function?", 
    "You would have liked it to be a new object constructed by calling Square,", 
    "but that's not what it is.", 
    "Because I didn't include new, right?", 
    "So this is an illustration of the standard pitfall.", 
    "If I had called (new Square(3)).area with the parens then that would have", 
    "been what I wanted.", 
    "Because calling new Square(3) will create a new object whose prototype", 
    "will be square.", 
    "Then, I'm going to dereference the area function.", 
    "I'm going to call the area function of that object.", 
    "And inside the area function, this will be bound to whoever received the", 
    "call, which is the new object, right?", 
    "That's what happens when you call a constructor-like function, capital", 
    "Square using the new keyword.", 
    "But because I left out the new keyword, the result of evaluating", 
    "Square(3) will be undefined.", 
    "So the call will actually fail, right?", 
    "I'm going to try to call area on an undefined object.", 
    "Because notice that square doesn't return anything, right?", 
    "Again, this is this weird quirk.", 
    "It's OK for it not to return anything as long as we call it with new.", 
    "Because then, the implied return value is the value of this.", 
    "But if we call it without new, then the return value is whatever the", 
    "return statement says.", 
    "And we don't have return statement, right?", 
    "All we did is leave it blank.", 
    "So the last question is why will this work?", 
    "Well, we already saw that Square is just a function.", 
    "Functions are first-class objects, so we can copy it to another variable.", 
    "We can call that constructor-like function with new.", 
    "So, you could argue I violated my convention, because I'm calling a", 
    "function that isn't starting with a capital letter.", 
    "But syntactically, this is the same thing, right?", 
    "I'm calling new with the same function.", 
    "And then I'm dereferencing area on it.", 
    "And that will work.", 
    "So it's kind of a roundabout way to do it.", 
    "But I want to make sure that people keep these two pitfalls in mind, Yes,", 
    "there's a question?", 
    "If you returned area, as the result of calling square?", 
    "Well then, the result of evaluating this part of it", 
    "would be the area function.", 
    "And then you would be trying to call area on a function.", 
    "So that wouldn't work either.", 
    "But you're heading in the right direction, right?", 
    "That's the way to think about new languages.", 
    "Just kind of apply the logical rule, and see what happens.", 
    "Enough esoteric stuff.", 
    "Let's start actually figuring out how we can use this to do some", 
    "semi-interesting things.", 
    "And I'm going to diverge a little bit from the sort of linear treatment", 
    "that's in the two book sections.", 
    "Instead, I'm going to sort of combine the content of two sections in the", 
    "context of an example.", 
    "And we're just going to walk through the code, and see what the", 
    "different things do.", 
    "And we're actually going to go through a very simple example.", 
    "And just as a preview, here is that example.", 
    "Here's my sort of JavaScript enabled version of Rotten Potatoes.", 
    "First, we're going to understand this very silly little behavior.", 
    "Very silly, very silly, OK?", 
    "And then, we're going to understand this behavior.", 
    "Ooh, showing and hiding stuff.", 
    "So as far as we're going to get today, is that these two behaviors are", 
    "entirely on the browser.", 
    "Nothing about doing the showing and hiding requires", 
    "communication with the server.", 
    "That's what we will do next time when we talk about Ajax.", 
    "So technically, today we're not talking about Ajax.", 
    "We're just talking about client-side JavaScript--", 
    "just the basics.", 
    "So, what's going on here?", 
    "We have to get a couple of additional concepts under our conceptual belts", 
    "before we can explain the example.", 
    "And the first one is to take a closer look at this idea of the DOM, or the", 
    "Document Object Model.", 
    "I mentioned briefly, in the introduction the JavaScript, that the", 
    "DOM is a language-independent hierarchical", 
    "representation of a document.", 
    "So we can be a little bit more precise about what it looks like.", 
    "Here is a hypothetical snippet of HTML.", 
    "You can see it's a p or paragraph element.", 
    "And inside, there's some text.", 
    "And there's a span element embedded in it.", 
    "So what would this look like, in terms of a DOM representation?", 
    "There'd be a node in the DOM representing the p", 
    "element overall, right?", 
    "So that's this.", 
    "Among the properties of the element are a list of its attributes.", 
    "So the p element has an ID attribute whose value is notice.", 
    "That would be represented in the DOM.", 
    "And I'm using JavaScript notation, sort of, to represent it.", 
    "But remember, that the DOM itself is not tied any language, right?", 
    "This is just how it would appear when we examine the JavaScript version of", 
    "that object.", 
    "Now, the node is going to have children.", 
    "One of the children is going to be the text.", 
    "So basically, we have to break this up into pieces, right?", 
    "There is a piece of text.", 
    "Then there's another element embedded inside this element.", 
    "And then there's another piece of text.", 
    "So there's 3 children.", 
    "And the middle child, the span element itself, doesn't have any other", 
    "elements embedded in it.", 
    "But it does have some text, which is the value of the text object that the", 
    "node encapsulates.", 
    "So that's a really simple piece of what a chunk of a small", 
    "DOM would look like.", 
    "Now, remember when we said when the browser is the embedding in which", 
    "JavaScript is placed, the browser defines how JavaScript gets to access", 
    "the document object model.", 
    "For the most part, what we're going to do is bypass that interface, and", 
    "mostly use jQuery, which builds on top of that interface.", 
    "For two reasons-- first of all, because a lot of browsers have", 
    "incompatibilities, subtle ones, in the way that they implement the JavaScript", 
    "API to the DOM.", 
    "But when we use jQuery, it does a very nice job of really putting a", 
    "homogeneous API on top of all of them, right?", 
    "Remember when we talked about facade?", 
    "This is a facade and an adapter on top of the browser's own API.", 
    "And jQuery's API is way more powerful.", 
    "It lets you do a lot of things far beyond what the browser's built in", 
    "JSAPI lets you do.", 
    "And the other reason we're going to use the jQuery API is because even if", 
    "you could use the browser's API to identify which elements you want to", 
    "work on, if you take those elements and wrap them in the jQuery API cloak,", 
    "then they gain magical jQuery powers, which are extremely nice to work with.", 
    "So, by way of example, I will point out that we can do this stuff.", 
    "Let's just try a simple get Element on a browser window.", 
    "So I've just turned down the Show ID and Class Details just so that we can", 
    "see what it is we're going to do.", 
    "So the ID of this entire table is movies.", 
    "We've got my silly little alert that I showed before.", 
    "We've got a div, whose ID is main.", 
    "We can use some of these.", 
    "OK, so what do we get back?", 
    "Here is a table, and we can see that in the context of the overall DOM,", 
    "sure enough, that's our movies table.", 
    "How did I get that?", 
    "I used get Element by ID.", 
    "What did I call it on?", 
    "Document.", 
    "Document is part of what the global object gives you when JavaScript is", 
    "embedded in the browser.", 
    "So document is an object representing the document that", 
    "I'm currently viewing.", 
    "And one of the functions that's provided by the browser's JavaScript", 
    "API is this very simple one, which is, given the HTML ID attribute of an", 
    "element, return that element.", 
    "So these are the kinds of functions that jQuery is built on top of.", 
    "The much nicer way to do the same thing with jQuery would have been--", 
    "OK, so two things to notice that were different--", 
    "first of all, what did I actually pass?", 
    "I actually passed a CSS selector.", 
    "Remember, that in CSS, pound something means the element whose unique ID", 
    "attribute is that string.", 
    "So rather than get element by ID, where I just passed a string for the", 
    "ID, we will see that with jQuery I could pretty much pass any CSS", 
    "selector in here.", 
    "And jQuery will do the right thing, which is very studly.", 
    "I also get back, not a single element, but I get back what looks like an", 
    "innumerable array.", 
    "And it sort of is an innumerable array.", 
    "We will come back to that momentarily.", 
    "But, generally speaking, whenever I select stuff, I might get back more", 
    "than one matching thing.", 
    "In the case of an ID, of course, I won't assuming that the HTML document", 
    "is well formed.", 
    "But for example, if I did something like--", 
    "I can ask jQuery for all of the h1 elements, irrespective of any other", 
    "attributes.", 
    "And there's actually two of them, right?", 
    "And in fact, if I hover and scroll, I can see both of them.", 
    "Yes, Firebug is your friend.", 
    "We can also, once we've got an element, we can ask questions like", 
    "what is its inner HTML or its inner text?", 
    "And a thing to realize is that whenever we modify an element in the", 
    "DOM, it usually has the side effect of causing the browser to possibly redraw", 
    "that element.", 
    "OK, so I modified the text.", 
    "And remember, I said when you do selection, you might match on multiple", 
    "DOM elements.", 
    "In this case, I did and I set both of them.", 
    "I could pull them out individually and manipulate them individually.", 
    "But I'm just going to do some simple examples for now.", 
    "So basically, I took an entire set of elements that had been returned by", 
    "jQuery, and for the entire set I did the same transformation, which is I", 
    "changed what the text is.", 
    "OK, so let's talk a little bit about jQuery, rather than just mentioning it", 
    "in context here.", 
    "It's a very cool framework for manipulating the DOM.", 
    "It adds a lot beyond what the browser gives you as a built-in API, not just", 
    "in terms of selecting elements and inspecting them, but doing things like", 
    "neat animations and stuff like that.", 
    "One of the things that's a little hard to get used to, the first time you see", 
    "it, is that in the true spirit of being unobtrusive, jQuery only adds", 
    "one item to the browser's Global JavaScript Namespace, which is the", 
    "jQuery function, which is also aliased as $. $ is a legal name for a", 
    "JavaScript function.", 
    "If you've used other libraries like prototype, which also tries to define", 
    "$, there is some pain involved.", 
    "And jQuery actually has a way to tell it don't we redefine $, because", 
    "somebody else wants it.", 
    "But if you're only using jQuery, then you shouldn't have to worry about it.", 
    "STUDENT: [INAUDIBLE].", 
    "ARMANDO FOX: What?", 
    "Sorry, why do they have $?", 
    "You mean why did they alias it at all or--", 
    "They aliased it using a single character because it resembles--", 
    "so some browsers implemented a macro for get Element by ID", 
    "that used the $ sign.", 
    "So it's reminiscent of that.", 
    "But it's also so commonly used that it's worth having a very short alias.", 
    "But the one reason that it's tricky is that it's polymorphic, meaning that", 
    "depending on how you call this function, there's four different", 
    "things that it can do.", 
    "One thing that it can do, which we just saw, is if you pass a string that", 
    "looks like it could be a CSS selector, it means return all of the DOM", 
    "elements that would match the CSS selector.", 
    "But we'll see other uses of it in a moment.", 
    "OK, so what else can we do?", 
    "So that's going to return an element whose ID is movies.", 
    "We already saw that that was that whole table.", 
    "We can fade it out.", 
    "Ooh, yeah.", 
    "This is not me.", 
    "This is just jQuery.", 
    "I get no credit.", 
    "And by the way, the element is still there, right?", 
    "The element hasn't actually been deleted from the tree?", 
    "Whoops, sorry.", 
    "I stole its thunder.", 
    "Let me scroll down, so you can see the cool fade in.", 
    "OK, so that's jQuery, right?", 
    "That's not me.", 
    "That's an example of the kind of stuff that jQuery has built in that you used", 
    "to have to labor over a steaming pot of JavaScript to", 
    "get in your own stuff.", 
    "That's the more drastic version.", 
    "You can hide it, or show it.", 
    "You can ask what HTML is inside that element.", 
    "And you can see that I get, in my console, the return", 
    "value that is the actual--", 
    "see, it's in quotes, so it's a string.", 
    "This is the HTML that's entirely within that node.", 
    "So it's got other tags embedded in it.", 
    "I can also ask for something resembling a reasonable text", 
    "representation of what's in it.", 
    "In that case, I get sort of a crappily formatted table, right?", 
    "So again, these are part of it are jQuery's wrappers around things the", 
    "browser provides.", 
    "And then a lot more of it is jQuery's additional functionality going beyond", 
    "what the browser provides.", 
    "OK, so what else can we do?", 
    "So we can select some elements by passing pretty much any CSS3", 
    "expression.", 
    "Even in browsers that don't have good CSS support, jQuery does.", 
    "We mentioned that even though it makes use of the underlying getElementById,", 
    "that's provided by the browser, getElementById expects a", 
    "string of the ID.", 
    "But because you can call $ with any CSS expression,", 
    "if what we want is the Id, then we have to say the element whose Id is by", 
    "giving a # sign.", 
    "We can also select elements by their class.", 
    "Remember, that in CSS the . is used to indicate CSS class", 
    "attached to an element.", 
    "And we can also just reference the elements by the type of tag they are.", 
    "So we only have one table in our example, so $ 'table' would return the", 
    "representation of that one table.", 
    "Remember, that the thing that's returned, superficially looks like a", 
    "JavaScript array.", 
    "But it actually really isn't one.", 
    "There's a few things that you can do to it.", 
    "And in particular, there is, in each method that is defined on it as an", 
    "iterator, so that you can walk through its elements, and do", 
    "something to each element.", 
    "But it's not a real array.", 
    "And duck typing doesn't apply as thoroughly in JavaScript", 
    "as it does in Ruby.", 
    "So just because it looks like an array, don't expect it to", 
    "quack like an array.", 
    "So what can you do with some elements once you've selected them?", 
    "One interesting thing you can do is you can use find, which is basically", 
    "using this element as the tree, find other elements inside of it.", 
    "So for example, if I already had my table element, and inside of the table", 
    "I wanted to find elements matching a specific criterion, but only", 
    "restricted to being nested within that table, I could say", 
    "something like the following.", 
    "So my table of movies, I have that.", 
    "And sure enough, yes, looks good.", 
    "And one of the things I can say is within this table find TD elements.", 
    "Remember TD is a table column.", 
    "Not surprisingly, there is a whole lot of them.", 
    "They're in different rows.", 
    "What I might want to say, which is a little more complicated, and this is", 
    "getting into why knowing CSS is really helpful for starting to work with", 
    "jQuery, is I only want the second row of each table.", 
    "Well, what would that mean?", 
    "Pretty neat, right?", 
    "So I'm basically navigating the DOM by doing this.", 
    "I said--", 
    "within the table, find any td element that also matches the additional", 
    "criterion that it is the child of something.", 
    "So td's are the children of tr's, right-- table rows, table columns?", 
    "So this has the effect of selecting only the second column in every row.", 
    "And then, just as an example, I grabbed the first one of those and I", 
    "said-- what's the text that's inside of it?", 
    "So you can kind of see where I'm going with this, right?", 
    "I'm heading towards how do we implement this feature?", 
    "Because what am I really doing with this feature?", 
    "I'm saying whenever the box is checked, I'm only including movies", 
    "where, in the second column, I have G or PG.", 
    "That's the desired functionality, right?", 
    "So I've now pretty much shown you almost all of the ingredients you", 
    "would need to code this function.", 
    "But before we walk through the code, there is actually one more ingredient", 
    "you need that I haven't shown you yet.", 
    "And that is a way to detect when somebody has clicked the button.", 
    "So what's going on there?", 
    "So one of the glue elements between JavaScript the language and JavaScript", 
    "as implemented in a browser is, not only does the browser have to give", 
    "JavaScript access to the DOM, so that it can inspect and maybe modify what's", 
    "going on with the page content, but it also needs to give JavaScript access", 
    "to when the user does stuff, so that you can respond to it.", 
    "And in the DOM, this is called establishing handlers.", 
    "A handler is a function that waits for something to happen, with respect to a", 
    "certain DOM element, and can cause a JavaScript function to be called when", 
    "that event ever occurs.", 
    "There's a zillion recognized handlers, but there is probably half a dozen", 
    "that you'll use very commonly.", 
    "I've included a link to one of my favorite cheat sheets, here.", 
    "Because not every handler type applies to every element.", 
    "For example, there is the notion of clicking on something, right?", 
    "You can click on almost anything.", 
    "But not everything is scrollable.", 
    "So there's an event for scrolling, but it only applies to the kinds of", 
    "elements that might ever have scroll bars.", 
    "There's an event for key presses, but it only applies to elements that can", 
    "detect when a key has been pressed when the element has focus.", 
    "And there's also pseudo-events.", 
    "So for example, when I click on the checkbox, there's two ways to think", 
    "about that.", 
    "One way to think about it is, it is the act of the user", 
    "clicking that matters.", 
    "But usually, with a checkbox that's not really what you care about.", 
    "You care about whether the value changed, right?", 
    "And that's different, because since you've all been using browsers since", 
    "you were born, as you know when you're navigating a form, you can also use", 
    "the keyboard to do things like check boxes, and you do radio buttons.", 
    "So as a programmer, what you often care about is not did the user click", 
    "the mouse there?", 
    "What you care about is did that control change state?", 
    "Regardless of how the change may have occurred.", 
    "So there are some handlers that are specifically about a UI event, like", 
    "the mouse click.", 
    "But there's also handlers that are about logical state changes, like did", 
    "the string value of the text box change?", 
    "Or did the state of a checkbox change from being checked", 
    "to not being checked?", 
    "As with selecting elements, the browser provides some very low level", 
    "support for saying--", 
    "given this element on this form, tell me interesting things about its state.", 
    "And jQuery provides, on top of that, a much nicer to program against", 
    "interface that lets you deal with the logical state of what's going on.", 
    "One thing I should point out, and this will come up when we talk about our", 
    "Ajax example later, what happens if you attach a handler to something that", 
    "already has a behavior?", 
    "So for example, normally when you click on a link, even in the absence", 
    "of JavaScript, that's supposed to take you to wherever the link points.", 
    "What happens if, using JavaScript, you override that, and you attach your own", 
    "clicking handler to a link?", 
    "What's going to happen?", 
    "Just so you know, what happens is your handler gets priority.", 
    "This is why there are some annoying sites that try to prevent you from", 
    "navigating away from them, or copying a picture, or whatever.", 
    "That's what's going on.", 
    "JavaScript can override the browser's default behavior, but your handler can", 
    "return either true or false.", 
    "And if your handler returns false, then nothing else happens.", 
    "In your handler returns true, then there other actions", 
    "are allowed to follow.", 
    "So if the element had a default behavior, like in the case of a link,", 
    "that's what would happen next.", 
    "If the element didn't have a default behavior, then often the default", 
    "action is to see whether the containing element", 
    "has a default behavior.", 
    "So if I clicked on an image, the image doesn't have any click of behavior,", 
    "but the image is inside an href.", 
    "And it has click behavior.", 
    "That would be an example.", 
    "So in our case, putting this together with the other pieces, what", 
    "is it that we want?", 
    "Well, we want to have a handler that detects a state", 
    "change on this checkbox.", 
    "And if the checkbox is checked, then we want to hide any table rows they", 
    "don't have a G or a PG in them.", 
    "If the box is unchecked, we want to just show all the rows.", 
    "Now that we know how all the ingredients work, it's actually easy", 
    "to write the code.", 
    "So let's just walk through it.", 
    "First, let's walk through the functions that actually do the work.", 
    "OK, here's the function that's going to do most of the work.", 
    "And don't worry about the context for now.", 
    "We'll see all of the code in due time.", 
    "I just want to walk through it in an order that's easier to understand.", 
    "So filter_adult is the function that we're going to arrange to have called", 
    "whenever the checkbox changes state.", 
    "So the first thing we have to do is see which state the checkbox is in.", 
    "OK, so what is this?", 
    "Remember, that this is kind of a special variable in JavaScript.", 
    "It refers to whoever received the function call.", 
    "When browsers allow you to attach JavaScript to define event handlers,", 
    "this is the DOM element that received the event.", 
    "My question is, why is this inside $ parentheses?", 
    "Why am I passing this to $ parentheses?", 
    "This by itself would have already had the value of element in the DOM that", 
    "received the event.", 
    "So why call $ parens on it?", 
    "Anybody?", 
    "Bueller?", 
    "Yes, because I need for it to have jQuery secret powers.", 
    "jQuery secret powers make the DOM much more pleasant to manipulate.", 
    "So when you're using jQuery, in an event handler, you will almost never", 
    "use this \"naked.\" You will almost always wrap it with the $ call.", 
    "And here is one of the jQuery secret powers at work.", 
    "Somebody who loves Ruby must have created this, right?", 
    "If this is checked--", 
    "they even made the string checked look like a Ruby symbol, although", 
    "JavaScript doesn't have symbols the way Ruby has.", 
    "But the intent is the same, right?", 
    "In fact, if you go into the jQuery documentation, there's a bunch of", 
    "arguments that you can pass to is to ask questions about the", 
    "state of form elements.", 
    "And the values that you can pass have to do with what kind of form", 
    "elements they are.", 
    "So for a checkbox, a logical thing to ask is whether", 
    "it's checked or unchecked.", 
    "So if the checkbox is checked, then I've constructed a CSS selector that", 
    "says, within the thing whose id is movies, it's going to", 
    "have a tbody child.", 
    "And inside of that is tr.", 
    "And here's the iterator, OK?", 
    "So what is each?", 
    "It's not like in Ruby, where each is sort of ubiquitous all over the place.", 
    "This is an each that jQuery defines to walk through the", 
    "collections of elements.", 
    "Because remember, whenever we call $ paren to return some elements of the", 
    "DOM, in general, we will get a collection of things back, not just a", 
    "single element.", 
    "So I'm going to step through each element in the collection.", 
    "And how does each work in JavaScript?", 
    "You pass it a function, right?", 
    "So this is the first example we've seen of a lot of work is done by", 
    "passing functions around.", 
    "In this case, we're going to pass a function called hide_if_adult_row.", 
    "And in a moment, we're going to see how that function works.", 
    "But the preview is it constructs the expression that I just constructed to", 
    "pull out that second column from every row in the table.", 
    "And it just checks if that second row in the table is G or PG.", 
    "So we'll encapsulate it in a minute.", 
    "So otherwise, if the checkbox is not checked, then I'll grab all of the", 
    "rows of the table, right?", 
    "So this will match all of the table rows.", 
    "And I'll just call show to show all of them.", 
    "So what's going on with the hide_if_adult_row function?", 
    "Here is that helper.", 
    "This is a big table summarizing, in the book, some of the most common", 
    "constructs in JavaScript.", 
    "And this is how you do regular expressions.", 
    "Test is the cheap fast form of regular expression, which only tells you if", 
    "the regular expression matched.", 
    "It doesn't capture paren groups.", 
    "There's another version of it that does, but for our", 
    "purposes this was enough.", 
    "So I have a regular expression matching G or PG.", 
    "And if that regular expression matches, what am I finding here?", 
    "This is the example that I gave before, right--", 
    "find.", 
    "So what is this?", 
    "This is the element that received the request.", 
    "And what's the element that received the request?", 
    "It's a table row, because I'm inside the body of an iterator that's going", 
    "to execute once for every row in that table.", 
    "So, within that table row, I'm going to find the second child that is a", 
    "table column.", 
    "And I'm going to pull the text out of it.", 
    "This is exactly what I typed into that Firebug window before, right?", 
    "I showed manually that this will give you back a string representation of", 
    "the second column of each row of that table.", 
    "So all I'm doing here is testing if the contents of that column don't", 
    "match the regular expression, then I hide the column.", 
    "So this is sort of the helper function.", 
    "And you could see also why I called it hide_if_adult_row.", 
    "So we've got almost all the pieces, right?", 
    "We've got a function that is going to check.", 
    "Whenever the checkbox changes state, it's going to check whether it's", 
    "changing to a checked state, or an unchecked state.", 
    "We've got a helper function that can selectively hide any rows, where the", 
    "second column does not match the simple regular expression.", 
    "The only thing we haven't done is set it up so that this function actually", 
    "gets called when the checkbox is checked.", 
    "In the parlance of JavaScript, we have not yet bound the event handler", 
    "function, filter_adult to the element that that function is", 
    "going to use, right?", 
    "So how do we do that?", 
    "There's my checkbox.", 
    "So the question is where my checkbox came from.", 
    "Because I will confess that if you look at the code in my actual app, if", 
    "you look at my HAML templates, you won't find the checkbox.", 
    "So where did the checkbox come from?", 
    "If you remember one of the points that I made is the sort of karmically good", 
    "way to add JavaScript functionality to your app, is to do it in a way that", 
    "someone using a browser without JavaScript won't get screwed.", 
    "So imagine that, in fact, in my Haml template for the Rotten Potatoes", 
    "homepage, I actually had this checkbox whose only function in life is to do", 
    "what we just saw with JavaScript.", 
    "That means if your browser had no JavaScript, you'd see the checkbox,", 
    "you'd check it, and nothing would happen.", 
    "So one of the ways that JavaScript designers avoid doing that is, rather", 
    "than having the element be part of the template, they create JavaScript code", 
    "that adds the element after the page has already been loaded.", 
    "Why would you do that?", 
    "Because then if the browser doesn't have JavaScript, that code will never", 
    "get run, and the element will never be created.", 
    "Does that make sense to everybody?", 
    "So I'm actually doing a double trick here, right?", 
    "One trick is I'm defining a setup function.", 
    "And in my setup function, here's yet another use of calling the", 
    "multi-purpose $ function in jQuery.", 
    "I'm creating this element out of raw HTML.", 
    "Now, we've seen three ways to call this thing, right?", 
    "The third way is if we pass a glob of HTML to it, it will construct a DOM", 
    "element data structure to represent that HTML.", 
    "And having constructed it, I'm going to insert it before the movies table.", 
    "And whenever it changes, I'm going to call that filter_adult function that", 
    "we just saw.", 
    "So a lot going on here, right?", 
    "Let's actually deconstruct each thing that's going on, one at a time.", 
    "The first thing is I've noticed that I can construct a DOM element, and then", 
    "stick it somewhere inside the DOM, right?", 
    "In particular, I'll insert it before the element whose ID is movies.", 
    "The return value of all these jQuery calls is the receiver.", 
    "JQuery does this on purpose, so you can chain function calls.", 
    "So when I take this $ element, and I insert before the movies element, the", 
    "return value from that is that same element-- the", 
    "one that I just inserted.", 
    "That's done on purpose, so that I can immediately say: And, on that newly", 
    "created element, which is my checkbox, I'm going to bind a change handler", 
    "that whenever it changes, I'm going to call this filter adult_function, which", 
    "is the function that we just walked through.", 
    "So how does the setup function get called?", 
    "That's the last critical piece.", 
    "OK, clear brains.", 
    "Let's walk through the whole thing one more time.", 
    "Because you totally have it.", 
    "When the Rotton Potatoes JS gets loaded, this is just a", 
    "data structure, right?", 
    "This RP equals, this is just an enormous object that has a setup slot,", 
    "a filter_adult slot, and these other helpers, which we're going to talk", 
    "about when we do our Ajax example.", 
    "But this is the single thing I'm adding to the global name space.", 
    "I'm calling it RP for obvious reasons, but this doesn't cause", 
    "anything to be executed.", 
    "It just defines an object that has these properties.", 
    "This causes something to be executed.", 
    "And this is the fourth way that you call $.", 
    "You call it by passing a function, which will be called when the whole", 
    "document has been loaded.", 
    "If you did JavaScript program back in the old days, there was something", 
    "called Document Ready.", 
    "That's what this is, right?", 
    "And the reason that this is important, the thing that jQuery takes care for", 
    "you is for historical reasons, when browsers start loading a page, if", 
    "there's JavaScript associated with it, they start executing the JavaScript as", 
    "soon as they can.", 
    "Which means that the JavaScript might start executing before the entire rest", 
    "of the page has loaded.", 
    "That's bad because if the JavaScript makes reference to an element that", 
    "hasn't been loaded yet, it'll barf.", 
    "So jQuery makes sure that when you pass the name of a function to $, that", 
    "it will call that function after the DOM is ready.", 
    "Page has been loaded.", 
    "DOM is ready to roll.", 
    "Now, we're going to call the setup:function.", 
    "What does the setup function do?", 
    "Well, the part that we're interested in here is the setup function creates", 
    "our new checkbox.", 
    "It sticks it before the movies table.", 
    "And it binds a change handler to it that we will call filter_adult", 
    "whenever the state of that checkbox is changed.", 
    "And there is the filter_adult function, which we", 
    "already just walked through.", 
    "If the checkbox is checked, it hides a few rows.", 
    "Otherwise, every row is shown--", 
    "all of that to do this.", 
    "Now, let's jump forward a little bit.", 
    "What would have been a much more elegant way?", 
    "Where's our hide_if_adult row thing?", 
    "So in this case, I actually walked through the table.", 
    "And I looked at the text content of every table cell.", 
    "And I used a regular expression match to determine whether to", 
    "hide that row or not.", 
    "Now, that works, but it's kind of hackey.", 
    "It's basically like a glorified page scraping.", 
    "It relies on the layout of the table, right?", 
    "Like if I ever change my code, if I insert a column that means something", 
    "else, anything like that, then all of a sudden this will break.", 
    "So what might have been a nicer way, in retrospect, to help the client-side", 
    "code to do its job here?", 
    "What would have been a way to do this that would not have required me to", 
    "basically scrape and parse the table inside of this function?", 
    "What might I have done, for example, in the server-side code?", 
    "Because remember, the server certainly knows, at the time that it's", 
    "generating the HAML output, it knows the properties of every movie, right?", 
    "Yes?", 
    "Yes, exactly right.", 
    "When you're generating the HTML code on the server, make sure that all of", 
    "the movies that are adult, whatever our definition of that is on the", 
    "server, they get a special CSS class just for them.", 
    "And then I could've used $ and just dot dot CSS class, and return all the", 
    "rows that have that class, right?", 
    "So that's nice for a bunch of reasons.", 
    "First of all, the client-side code doesn't have to parse the table to", 
    "figure out what's going on, right?", 
    "The code is no longer dependent on the details of the table structure.", 
    "Second, it allows us to control on the server what we mean by adult.", 
    "If we later decide that the definition of adult changes, and we wanted to", 
    "include PG 13, then a server-side change would just make sure that the", 
    "tag gets added to all the right movies.", 
    "And again, the client wouldn't have to be aware of it.", 
    "So one of the things to keep in mind, when you're designing JavaScript", 
    "enhancements to your pages, is where can the server help?", 
    "What's the work that the server can reasonably do, that is sort of no", 
    "extra skin off of its back, but it makes your code a lot easier, right?", 
    "So I sort of deliberately set up the example, so that I could show a lot of", 
    "different moving parts.", 
    "But in real life, if I was doing this, I would generate as much information", 
    "as I can on the server, so that on the client-side,", 
    "everything is already annotated.", 
    "This is kind of the moral equivalent of when you're generating a view, you", 
    "want to actually have all of your controller variables set up in your", 
    "controller method so that the view is just dereferencing variables.", 
    "This is the same thing here.", 
    "You want to have your content already tagged, ID'd, and so forth, so that", 
    "your JavaScript code just has to say give me all the", 
    "elements with that tag.", 
    "Give me all the elements with that class, as opposed to your JavaScript", 
    "code having to actually inspect what the data is.", 
    "Even though it's a simple example, we got to see a lot of different moving", 
    "parts, which I'll now summarize.", 
    "So what have we seen how to do?", 
    "You can select elements with $ paren.", 
    "Or even if you can get those elements in some other way, you want to wrap", 
    "them with $ paren to give them the secret jQuery powers.", 
    "You can inspect them.", 
    "You can look at what is the text inside the element?", 
    "You can ask questions, like what state are they in?", 
    "And different state selectors apply to different kinds of elements.", 
    "We didn't see an example of this, so far, but you can also ask for their", 
    "attributes, like source, ID, and so on.", 
    "You can add or remove CSS classes to them.", 
    "So for example, the way you could change the visual appearance of an", 
    "element, based on some condition, is in your CSS file.", 
    "You predefine a style that looks like what you want.", 
    "And then you add that CSS style from your JavaScript code.", 
    "Or you can do hide and show, like we did in our simple example.", 
    "And lastly, you need a setup function that binds the handlers you want on", 
    "each element, right?", 
    "I chose to put that function in a global data structure.", 
    "And then I just passed the name of the setup function to $ paren, which is", 
    "essentially calling document.ready.", 
    "And that's it.", 
    "That's how everything works.", 
    "So this was sort of a simple example.", 
    "But you've seen every ingredient that is necessary to do something", 
    "interesting on the client-side in JavaScript.", 
    "Yes?", 
    "STUDENT: [INAUDIBLE]?", 
    "ARMANDO FOX: OK, so to recap there are four things you can do with $.", 
    "And there's a table in the book that summarizes them too.", 
    "And by the way, if you want a good book on jQuery, this is one of the", 
    "better ones that I've found.", 
    "I have no connection to the authors.", 
    "I just think it's a good book.", 
    "It's a little conversation-y.", 
    "And it's light on JavaScript.", 
    "It's more about let's build flashy cool things.", 
    "But it does have a lot of examples of jQuery.", 
    "So if you're the kind of person who learns well by example,", 
    "I'd recommend it.", 
    "So the four ways to call $--", 
    "if you pass something that looks like a CSS selector, you'll get back all", 
    "the matching DOM elements against that selector.", 
    "If you pass it a string, you'll get a DOM data structure representing the", 
    "conversion of that HTML string.", 
    "If you pass it a function, then that function will be added to the list of", 
    "functions called when the document is ready to be rendered.", 
    "And I forget what the fourth one is.", 
    "Does anybody remember the fourth one?", 
    "It's in a table in the book.", 
    "That's why I make tables.", 
    "But those are the three most common ones.", 
    "OK, so that was an unorthodox walk through.", 
    "And at this point, we'll take a quick break.", 
    "And Dave is going to tell you some interesting career things and recent", 
    "survey results from your predecessors who took this class in the past.", 
    "And what we're probably going to do a good chunk of next time is we're going", 
    "to do a similar walk through to this.", 
    "But we're going to do it for an actual Ajax example, where there is stuff", 
    "going back and forth to the server, too."
  ]
}