{
  "start": [
    0, 
    3090, 
    6210, 
    9150, 
    10310, 
    12830, 
    16170, 
    17070, 
    20090, 
    21060, 
    24330, 
    25300, 
    27220, 
    29610, 
    33570, 
    36270, 
    38760, 
    40780, 
    43940, 
    46670, 
    50820, 
    55250, 
    56900, 
    60410, 
    63030, 
    65160, 
    68080, 
    69370, 
    71310, 
    75110, 
    77310, 
    80115, 
    82250, 
    86200, 
    87570, 
    91520, 
    93620, 
    96610, 
    98680, 
    100030, 
    102760, 
    105010, 
    108770, 
    112540, 
    114560, 
    118480, 
    121160, 
    125530
  ], 
  "end": [
    3090, 
    6210, 
    9150, 
    10310, 
    12830, 
    16170, 
    17070, 
    20090, 
    21060, 
    24330, 
    25300, 
    27220, 
    29610, 
    33570, 
    36270, 
    38760, 
    40780, 
    43940, 
    46670, 
    50820, 
    55250, 
    56900, 
    60410, 
    63030, 
    65160, 
    68080, 
    69370, 
    71310, 
    75110, 
    77310, 
    80115, 
    82250, 
    86200, 
    87570, 
    91520, 
    93620, 
    96610, 
    98680, 
    100030, 
    102760, 
    105010, 
    108770, 
    112540, 
    114560, 
    118480, 
    121160, 
    125530, 
    126780
  ], 
  "text": [
    "ARMANDO FOX: So, well, let's go through these.", 
    "Usually results in more concise code, fewer total lines.", 
    "Actually, we just did an example where the code by every measure improved,", 
    "but it got bigger.", 
    "So, conciseness is in the eye of the beholder.", 
    "Minimum total number lines of code in your app is not really a measure of", 
    "conciseness.", 
    "It's whether a given task is being done with clarity in the smallest", 
    "amount of space.", 
    "And in this case, getting to clarity resulted in adding more code.", 
    "Simple as that.", 
    "So, that's not true.", 
    "Should not cause existing test to fail.", 
    "Well, even in our simple example, at one point, we changed the calling API.", 
    "When we encapsulated that thing in a class--", 
    "soon as you have a class, you have to call and initialization it.", 
    "We didn't have to do that in the original version of the code.", 
    "So, if we had had tests that tested the original version of the code, they", 
    "would have immediately failed for structural reasons alone.", 
    "So in fact, it's not a problem if refactoring temporarily causes", 
    "existing tests to fail, but as long as you know why it failed, did it fail", 
    "because you actually broke something?", 
    "Or did it fail because you've changed the structure of the code in a way", 
    "that makes it incompatible with the assumptions of the test.", 
    "The first kind of failure should be an alarm.", 
    "Because it means that in refactoring, your knowledge about what could be", 
    "refactored was incorrect.", 
    "Something fails for a logical reason.", 
    "But if it's a structural reason, you change the name of a method, you move", 
    "something out into a helper, and you have to call it differently than it", 
    "used to be called, those are structural reasons that might cause", 
    "tests to fail, and you've got to fix the test.", 
    "So, that means, by the way that blue, in case you weren't following that", 
    "explanation, is the correct answer.", 
    "That often you have to change or expand your test suite in order to go", 
    "along with the refactoring that you've done.", 
    "And in terms of explicit versus implicit customer requirements, the", 
    "customer doesn't care if the code is readable for the most part.", 
    "They care if it works.", 
    "You're the one who suffers if the code's not readable or the poor schmoe", 
    "who has to come after you and fix it all up.", 
    "So, you could maybe argue that it's an implicit customer requirement at best.", 
    "But rarely will the customer say, and by the way, your code needs to have a", 
    "Flog score below some number.", 
    "So, with that, we will temporarily leave off of our refactoring.", 
    "We'll revisit some of these ideas when we talk about design patterns.", 
    "But for now, it's time to talk about teams, a topic about which my", 
    "colleague is much more qualified."
  ]
}