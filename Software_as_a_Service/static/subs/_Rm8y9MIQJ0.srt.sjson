{
  "start": [
    890, 
    3520, 
    6870, 
    10210, 
    13020, 
    13890, 
    14800, 
    17080, 
    19010, 
    23040, 
    26050, 
    29950, 
    34020, 
    37950, 
    39430, 
    40800, 
    44380, 
    45640, 
    50830, 
    54690, 
    55890, 
    58350, 
    60170, 
    61010, 
    64110, 
    67700, 
    69360, 
    72820, 
    73380, 
    77130, 
    80830, 
    83800, 
    84910, 
    89800, 
    91940, 
    96610, 
    101670, 
    103080, 
    104060, 
    106830, 
    109760, 
    111200, 
    114000, 
    116650, 
    120630, 
    123480, 
    126830, 
    133890, 
    137890, 
    141320, 
    144590, 
    148850, 
    150990, 
    156610, 
    158570, 
    161090, 
    164010, 
    166350, 
    167470, 
    172830, 
    175350, 
    176890, 
    180790, 
    181460, 
    184490, 
    187670, 
    191480, 
    194690, 
    198490, 
    200760, 
    202080, 
    205680, 
    206460, 
    210150, 
    215080, 
    218730, 
    222710, 
    223580, 
    224970, 
    229680, 
    234160, 
    237160, 
    239760, 
    241240, 
    243050, 
    245300, 
    247620, 
    249020, 
    250570, 
    253570, 
    255160, 
    258399, 
    262310, 
    265980, 
    267110, 
    271400, 
    273000, 
    276210, 
    277790, 
    280570, 
    283420, 
    284900, 
    288380, 
    289920, 
    293550, 
    294520, 
    298480, 
    302000, 
    304370, 
    307970, 
    309340, 
    314350, 
    317480, 
    318580, 
    321230, 
    324760, 
    326930, 
    330800, 
    333470, 
    339120, 
    342810, 
    343770, 
    347810, 
    349190, 
    350480, 
    354290, 
    356530, 
    357320, 
    360390, 
    363770, 
    365230, 
    368560, 
    374060, 
    376510, 
    381970, 
    384670, 
    387370, 
    388880, 
    392110, 
    395580, 
    398750, 
    403630, 
    406450, 
    409720, 
    410540, 
    414390, 
    418790, 
    423070, 
    426020, 
    430890, 
    431960, 
    434670, 
    435830, 
    439510, 
    443110, 
    446890, 
    448490, 
    451690, 
    452490, 
    456430, 
    461040, 
    465040, 
    468250, 
    471680, 
    476690, 
    481830, 
    483410, 
    488100, 
    491260, 
    494910, 
    498930, 
    499570, 
    503080, 
    506550, 
    509720, 
    511770, 
    513558, 
    514919, 
    516830, 
    520980, 
    525940, 
    529350, 
    530270, 
    535930, 
    539150, 
    540370, 
    546750, 
    548200, 
    553270, 
    556330, 
    558310, 
    561490, 
    564240, 
    566250, 
    568240, 
    569800, 
    573520, 
    575270, 
    577810, 
    582090, 
    586180, 
    589120, 
    592940, 
    595130, 
    598470, 
    598900, 
    600180, 
    602670, 
    605910, 
    608900, 
    612080, 
    612780, 
    615650, 
    618600, 
    621960, 
    622800, 
    627470, 
    630830, 
    634160, 
    636910, 
    637610, 
    640610, 
    641330, 
    643770, 
    647180, 
    650950, 
    652830, 
    655810, 
    658290, 
    660380, 
    665390, 
    670190, 
    674800, 
    676260, 
    679630, 
    683030, 
    687720, 
    689410, 
    693240, 
    696690, 
    697920, 
    702100, 
    704690, 
    706640, 
    708880, 
    709940, 
    711590, 
    712590, 
    715310, 
    716310, 
    720195, 
    724730, 
    727870, 
    729880, 
    734200, 
    738460, 
    741850, 
    745040, 
    746760, 
    752800, 
    755550, 
    756690, 
    758190, 
    760850, 
    762100, 
    765100, 
    769690, 
    772810, 
    775690, 
    781720, 
    785350, 
    789910, 
    794210, 
    795220, 
    797870, 
    800530, 
    804260, 
    805790, 
    808640, 
    809600, 
    811400, 
    815890, 
    818230, 
    820460, 
    824340, 
    825710, 
    829630, 
    833440, 
    838060, 
    839250, 
    841610, 
    842500, 
    847080, 
    848810, 
    852350, 
    855180, 
    857590, 
    860910, 
    863210, 
    865540, 
    870600, 
    874200, 
    876110, 
    879490, 
    881050, 
    884110, 
    888020, 
    892320, 
    893810, 
    895400, 
    899710, 
    903490, 
    907170, 
    909680, 
    912890, 
    913740, 
    918120, 
    920610, 
    921660, 
    925530, 
    929400
  ], 
  "end": [
    3520, 
    6870, 
    10210, 
    13020, 
    13890, 
    14800, 
    17080, 
    19010, 
    23040, 
    26050, 
    29950, 
    34020, 
    37950, 
    39430, 
    40800, 
    44380, 
    45640, 
    50830, 
    54690, 
    55890, 
    58350, 
    60170, 
    61010, 
    64110, 
    67700, 
    69360, 
    72820, 
    73380, 
    77130, 
    80830, 
    83800, 
    84910, 
    89800, 
    91940, 
    96610, 
    101670, 
    103080, 
    104060, 
    106830, 
    109760, 
    111200, 
    114000, 
    116650, 
    120630, 
    123480, 
    126830, 
    130199, 
    137890, 
    141320, 
    144590, 
    148850, 
    150990, 
    156610, 
    158570, 
    161090, 
    164010, 
    166350, 
    167470, 
    172830, 
    175350, 
    176890, 
    180790, 
    181460, 
    184490, 
    187670, 
    191480, 
    194690, 
    198490, 
    200760, 
    202080, 
    205680, 
    206460, 
    210150, 
    215080, 
    218730, 
    222710, 
    223580, 
    224970, 
    229680, 
    234160, 
    237160, 
    239760, 
    241240, 
    243050, 
    245300, 
    247620, 
    249020, 
    250570, 
    253570, 
    255160, 
    258399, 
    262310, 
    265980, 
    267110, 
    271400, 
    273000, 
    276210, 
    277790, 
    280570, 
    283420, 
    284900, 
    288380, 
    289920, 
    293550, 
    294520, 
    298480, 
    302000, 
    304370, 
    307970, 
    309340, 
    314350, 
    317480, 
    318580, 
    321230, 
    324760, 
    326930, 
    330800, 
    333470, 
    339120, 
    342810, 
    343770, 
    347810, 
    349190, 
    350480, 
    354290, 
    356530, 
    357320, 
    360390, 
    363770, 
    365230, 
    368560, 
    374060, 
    376510, 
    381970, 
    384670, 
    387370, 
    388880, 
    392110, 
    395580, 
    398750, 
    403630, 
    406450, 
    409720, 
    410540, 
    414390, 
    418790, 
    423070, 
    426020, 
    430890, 
    431960, 
    434670, 
    435830, 
    439510, 
    443110, 
    446890, 
    448490, 
    451690, 
    452490, 
    456430, 
    461040, 
    465040, 
    468250, 
    471680, 
    476690, 
    481830, 
    483410, 
    488100, 
    491260, 
    494910, 
    498930, 
    499570, 
    503080, 
    506550, 
    509720, 
    511770, 
    513559, 
    514919, 
    516830, 
    520980, 
    525940, 
    529350, 
    530270, 
    535930, 
    539150, 
    540370, 
    546750, 
    548200, 
    553270, 
    556330, 
    558310, 
    561490, 
    564240, 
    566250, 
    568240, 
    569800, 
    573520, 
    575270, 
    577810, 
    582090, 
    586180, 
    589120, 
    592940, 
    595130, 
    598470, 
    598900, 
    600180, 
    602670, 
    605910, 
    608900, 
    612080, 
    612780, 
    615650, 
    618600, 
    621960, 
    622800, 
    627470, 
    630830, 
    634160, 
    636910, 
    637610, 
    640610, 
    641330, 
    643770, 
    647180, 
    650950, 
    652830, 
    655810, 
    658290, 
    660380, 
    665390, 
    670190, 
    674800, 
    676260, 
    679630, 
    683030, 
    687720, 
    689410, 
    693240, 
    696690, 
    697920, 
    702100, 
    704690, 
    706640, 
    708880, 
    709940, 
    711590, 
    712590, 
    715310, 
    716310, 
    720195, 
    724730, 
    727870, 
    729880, 
    734200, 
    738460, 
    741850, 
    745040, 
    746760, 
    752800, 
    755550, 
    756690, 
    758190, 
    760850, 
    762100, 
    765100, 
    769690, 
    772810, 
    775690, 
    781720, 
    785350, 
    789910, 
    794210, 
    795220, 
    797870, 
    800530, 
    804260, 
    805790, 
    808640, 
    809600, 
    811400, 
    815890, 
    818230, 
    820460, 
    824340, 
    825710, 
    829630, 
    833440, 
    838060, 
    839250, 
    841610, 
    842500, 
    847080, 
    848810, 
    852350, 
    855180, 
    857590, 
    860910, 
    863210, 
    865540, 
    870600, 
    874200, 
    876110, 
    879490, 
    881050, 
    884110, 
    888020, 
    892320, 
    893810, 
    895400, 
    899710, 
    903490, 
    907170, 
    909680, 
    912890, 
    913740, 
    918120, 
    920610, 
    921660, 
    925530, 
    929400, 
    930970
  ], 
  "text": [
    "ARMANDO FOX: I came prepared with a picture to answer this question.", 
    "Here's the original picture from when we set up this association.", 
    "And remember that the query of interest in this case is given a", 
    "movie, find all the moviegoers.", 
    "OK, so let's start.", 
    "Given a movie, right?", 
    "Well, that means that we have a movie in hand.", 
    "We know its ID.", 
    "The first step, because it's a through association, is we've got to find all", 
    "of the-- remember, the strategy here is going to be find all the reviews", 
    "associated with this movie, and then for each one of those reviews, we", 
    "could see which moviegoer owns that review, right?", 
    "So in terms of the first step, find all reviews whose movie ID matches", 
    "some value.", 
    "That's where you want an index.", 
    "Because without an index on movie ID, your only choice is to go through the", 
    "entire reviews table.", 
    "If you selected reviews movie ID, which is green, then you're correct.", 
    "Why doesn't it matter whether there's an index on moviegoer ID for the", 
    "purposes of this query?", 
    "OK, so once you have the review in hand, you sort of have the moviegoer", 
    "ID, so you don't need an index on it.", 
    "Very good.", 
    "OK and then the last step is, what about, OK.", 
    "So I have the moviegoer ID but what I really need is to get into the", 
    "moviegoers table to go grab it.", 
    "Do I need to do any indexing work to make that happy?", 
    "I don't, right?", 
    "Because the primary key is already a random access into the table.", 
    "If I have a moviegoer ID, all I've got to do is use that as my index into the", 
    "moviegoers table, and databases are already set up so that those are", 
    "random access.", 
    "And primary keys are unique, so it'll be super, super fast.", 
    "So I think a couple of these were red herrings.", 
    "Like I gave moviegoers dot review ID isn't even a column in this case.", 
    "And I think, I'm not even sure that movies review ID is a column in this", 
    "case, either.", 
    "Onward.", 
    "So as we all know, the world is full of evil forces.", 
    "Sometimes the evil forces want to get your customer's data and", 
    "do nefarious things.", 
    "Other times, they just want to use your application as a way to", 
    "distribute their favorite new piece of malware.", 
    "But either way, again, although there are some kinds of attacks that really", 
    "target the infrastructure, and as a developer, there isn't much you can do", 
    "about them, there's other kinds of attacks that you as a developer can do", 
    "quite a bit to at least thwart the low-hanging fruit version.", 
    "This is only a short sublist of evil things other people might want to do", 
    "to the app, and we certainly don't have time to cover all of them even in", 
    "lecture, but we'll talk a little bit about the three that are in red.", 
    "Eavesdropping, SQL injection attacks, and cross-site request forgery.", 
    "And kind of how do we manage them.", 
    "So as background, let's quickly do a high level overview with some slight", 
    "simplifications of how SSL works.", 
    "I'm sure everybody's at least heard of it by acronym.", 
    "And there's a lot of misconceptions, especially among nontechnical people", 
    "about what it does and does not buy you.", 
    "The idea is really simple.", 
    "We will use SSL to encrypt all HTTP traffic so that eavesdroppers won't be", 
    "able to see anything going between the client and the server.", 
    "They'll see garbage, basically.", 
    "The problem with SSL is that what you're talking about is creating a", 
    "secure channel.", 
    "And it's sort of an axiom of security that if two people want to create a", 
    "secure channel, they have to first share a secret in some manner.", 
    "So the question arises, well, how do you communicate the secret?", 
    "Because communicating the secret over an insecure channel obviously is not", 
    "helpful if you're going to then use the secret to create a secure channel.", 
    "And on the web, it's particularly important because you want to do this", 
    "between two parties who have never met.", 
    "Like a particular user and a site that they want to visit under protected", 
    "conditions.", 
    "So the solution to this is sufficiently subtle that it resulted", 
    "in the Turing Award for the R, S, and A in RSA.", 
    "That's Ron Rivest, Adi Shamir, and Len Adleman, who came up with what most", 
    "people credit as the first practical computer implementation of public key", 
    "cryptography.", 
    "So what is that?", 
    "The idea behind public key crypto and how it powers SSL is that each", 
    "principle, a principle is a thing that wants to be able to prove its identity", 
    "in such a way as to create a secure channel.", 
    "The principal has a key that consists of two matched parts.", 
    "This is the essence of public key crypto.", 
    "It's got a public part and a private part.", 
    "Doesn't actually matter which is which, as long as you're consistent.", 
    "And once you've decided which part is the private part, you", 
    "keep that part private.", 
    "That sounded great.", 
    "But the important property is that given one of the two parts, you", 
    "basically have zero information about the other.", 
    "You can't deduce the one from the other.", 
    "And the other key principal is that when you use one of those parts to", 
    "encrypt part of a message, you need the other part to decrypt it, right?", 
    "So it's not symmetric.", 
    "In symmetric key crypto, the idea is we both know the same key, and the", 
    "process of encryption is reversible.", 
    "So you use the key to encode, I use the same key and the same", 
    "procedure to decode.", 
    "Public key crypto is different, because having used one part of the", 
    "key to encode, you have to use the other part to decode.", 
    "That's the only thing that will work.", 
    "So you can see how this can be used to help set up secure channels in the", 
    "following way.", 
    "If I have Bob's public key, and by the way, Bob's public key is public.", 
    "It's all over the internet.", 
    "Bob wants people to know it, because this way if I get a message and I try", 
    "decrypting it with Bob's public key and I get success, I can reasonably", 
    "assume that Bob must've created it.", 
    "Or someone in possession of Bob's private key must have created it, and", 
    "therein lies part of the problem, right?", 
    "Assuming that Bob does a good job of keeping his private key truly private,", 
    "I can assume that a message decryptable with his public key was", 
    "created by him, right?", 
    "This is the basis of things like digital signatures.", 
    "Conversely, if I want to create a message that only Bob could read, I", 
    "can use Bob's public key to encrypt it.", 
    "And then whoever else gets it will be foiled, because without Bob's private", 
    "key, they can't decrypt the message.", 
    "So given how public key crypto works, what does SSL do?", 
    "I am Bob.com, and I want my server to make you feel good about your data", 
    "being secure.", 
    "So I first go to a certificate authority, and I prove that I'm Bob,", 
    "and I'm the owner of Bob.com.", 
    "And I do this by conventional means.", 
    "I present IDs, maybe I have articles of incorporation for my business.", 
    "My DNS record showing that it's really registered to me,", 
    "stuff like that, right?", 
    "So it's kind of a-- this process is not too different from how you would", 
    "prove your identity for other transactions that are", 
    "like notarizing things.", 
    "The certificate authority has a private key that it uses to", 
    "essentially create a statement, a certificate that says yes, Bob.com is", 
    "a domain that is owned by Bob.", 
    "And because the private key of the CA is used to create this, you already", 
    "see the corollary that's coming, the CA's public key could be used to", 
    "decrypt it and say aha, only the certificate authority could have", 
    "created this certificate.", 
    "And therefore the certificate authority says that it believes that", 
    "yes, this really and truly is Bob.com, owned by Bob.", 
    "Bob takes that certificate and installs it on his server, so when", 
    "your browser visits his server, your browser retrieves the certificate.", 
    "And because the public keys of the certificate authority are built into", 
    "the browser, it can decrypt the message and check if the cert matches", 
    "the host name", 
    "and, therefore, if Bob.com is a legitimate site.", 
    "Once that's done, because using public key crypto is actually computationally", 
    "quite expensive, the next step is to actually, now that we both agreed,", 
    "there's a process called Diffie-Hellman key exchange, where we", 
    "can use, we can bootstrap a secure channel building on the trust in steps", 
    "1 through 5.", 
    "And then we can use much less expensive symmetric key crypto for the", 
    "rest of our session.", 
    "So the public key part is really just using this initial set of steps, where", 
    "I get some assurance about the fact that the site that I'm visiting really", 
    "is who it claims to be in the form of somebody signed a certificate saying", 
    "that it is.", 
    "And once I do that, that information can be used to bootstrap my way into a", 
    "secure channel.", 
    "And beyond that point, under reasonable assumptions, nobody who is", 
    "eavesdropping on our traffic will be able to make any sense out of it.", 
    "And by the way, Rails has a really nice macro, force_ssl that you can use", 
    "either at the level of a controller, or at the level of individual actions.", 
    "And essentially, the way it works, you already know how before filters work.", 
    "Basically, force_ssl adds a before filter that says for the following", 
    "actions, you can only do the controller action if the connection is", 
    "an SSL-protected connection.", 
    "And if it isn't, then it will do a redirect to HTTPS of the same thing.", 
    "In development, this doesn't really make any difference because getting", 
    "SSL to actually work on your local server is somewhat complicated.", 
    "In production, it means that you need to have SSL enabled in your production", 
    "environment.", 
    "Which again, if you're using platform as a service, you're all done.", 
    "If you're deploying your own Apache, there's like an 87 step process to", 
    "make sure that you have the right libraries installed, and the config", 
    "file is right, and where does the certificate live?", 
    "And is the certificate chained good?", 
    "And you don't want to go there.", 
    "But with Heroku, you don't have to worry about it.", 
    "So given SSL is available, and you can sort of trivially turn it on, it's", 
    "important to understand what you get and what you don't get from using it.", 
    "It does assure the browser that Bob.com is legit.", 
    "Well, sort of.", 
    "It assumes that if the certificate was signed by a reputable CA, then the", 
    "reputable CA must have demanded to see some credentials from Bob before", 
    "creating that certificate.", 
    "Now, this can go awry if the CA doesn't give 100% scrutiny to", 
    "protecting its own private keys.", 
    "For example, if I got a hold of the private keys of VeriSign, or more to", 
    "the point, of DigiNotar, until recently a", 
    "Dutch certificate authority.", 
    "If I got a hold of its private keys, I could create fake certificates that", 
    "would look like they were signed by them, and I could vouch for the fact", 
    "that actually, I am Google.com.", 
    "You should type in your Gmail password, right?", 
    "And your browser would never know.", 
    "This actually happened to DigiNotar like last year at around the time that", 
    "we were offering this course last year.", 
    "And the bottom line is they went out of business.", 
    "So, you know, the CIA, the FBI, Mossad, and somebody else all had", 
    "their websites successfully impersonated because the certificate", 
    "authority that had signed certs for them had their keys compromised.", 
    "And people were able to create certs falsely vouching for the authenticity", 
    "of these rogue sites.", 
    "It prevents eavesdroppers from reading traffic that is sent over the secure", 
    "connection.", 
    "That's pretty good.", 
    "It creates additional work for the server, because something on the", 
    "server has to manage the key exchange and the encryption.", 
    "However, it doesn't assure the server of who the user is, right?", 
    "The user knows who the server is, but the server has no idea", 
    "who the user is.", 
    "So there's no notion of user authentication here.", 
    "It doesn't say about what happens to the data after it reaches the server.", 
    "So a lot of sites say our site is protected by SSL.", 
    "Well, that's great.", 
    "It means that your bytes will reach the site un-eavesdropped.", 
    "But if the site then decides to store your password in plain text on an", 
    "unprotected database, you know, not clear.", 
    "It doesn't say anything about what other attacks the server might be", 
    "vulnerable to.", 
    "So the fact that your data made it all the way there doesn't mean", 
    "your data is safe.", 
    "There's many other ways people could try to compromise it.", 
    "And if the server turns out to be evil, or if the server has been", 
    "compromised and is serving malware, it does nothing to protect you from that.", 
    "So SSL is great.", 
    "You should use it when the transmission of information between", 
    "the browser and the server might be sensitive.", 
    "But be aware that that's really the only thing it protects, right?", 
    "It's the transmission of information, and it protects the user from", 
    "fraudulent servers in as much as the certification authority that signed", 
    "the certs has done a good job of keeping its keys truly private.", 
    "What about SQL injection?", 
    "I actually found a cartoon on SQL injection, if you can imagine, on", 
    "XKCD, which I really like.", 
    "So here's the SQL injection problem is I have a field in my view where people", 
    "are supposed to fill in their names.", 
    "In my app, this is the wrong way to do it, OK?", 
    "I'm doing a query that ostensibly tries to just find a record that", 
    "matches that name.", 
    "And an evil user comes and fills in the following string as their name.", 
    "So this is what the SQL Query is going to look like.", 
    "There's the semicolon that ends the query.", 
    "Here's the beginning of the next query, which will destroy the", 
    "moviegoers table.", 
    "By the way, if this works, you're guilty of more", 
    "than just SQL injection.", 
    "You shouldn't have dropped table privileges on your", 
    "default database user.", 
    "Again, use platform as a service, and these problems will not bug you.", 
    "So the simple solution, we've seen this syntax before, where you have", 
    "placeholders with question marks anywhere that a query is going to have", 
    "stuff interpolated into it.", 
    "There's machinery in Rails that will sanitize and quote any of these", 
    "parameters to be substituted so that SQL injection will be thwarted.", 
    "Some people call this doing a prepared query, because you're taking various", 
    "steps to prepare the pieces that get put together, so that it doesn't do", 
    "something other than what you intended.", 
    "So basically, if you see untrustworthy strings interpolated directly into a", 
    "query, that's a red flag, and you should be using parameter", 
    "substitution instead.", 
    "What is an untrusted string?", 
    "It's one that might have been touched by a user at any time.", 
    "Cross-site request forgery.", 
    "This one is a little more subtle, but it's become much more pervasive.", 
    "The idea is a legitimate user logs into her legitimate bank account.", 
    "Now her browser has a cookie corresponding to that session.", 
    "Then she goes to a site that she doesn't realize is evil.", 
    "The evil site contains an embedded resource of some kind that will try to", 
    "access the bank account, which means that when the browser goes to do this", 
    "embedded fetch, the cookie is going to be part of that request.", 
    "And now the evil site harvests some personal info, because it's able to", 
    "issue a request.", 
    "And by the way, image source.", 
    "What can you possibly do to harvest information from there?", 
    "I use this as an example of one of the many ways that one web page can", 
    "contain a reference to another.", 
    "But of course, as we all know by now, the much more subtle way is", 
    "JavaScript.", 
    "You could try to write JavaScript code that does this.", 
    "And you'll see that JavaScript and CSRF are frequently best", 
    "friends at the party.", 
    "Fortunately, there's ways to get around this.", 
    "The weak way that people used to do is there's a field in the HTTP header", 
    "that says who the referrer is.", 
    "In other words, what generated this HTTP request?", 
    "And in our example, if the referrer field showed that there's a request", 
    "coming into bank.com but the referrer is from blog.evil.com, then something", 
    "is clearly amiss.", 
    "But of course, with JavaScript and Ajax, you could forge", 
    "the referrer field.", 
    "So a stronger way to do it is every request that might be subject to this", 
    "kind of attack includes a nonce.", 
    "A nonce is a string that you promise never to use again.", 
    "And Rails has support for doing this.", 
    "If you look in your application layout, one of the things that is put", 
    "in there automatically is this cryptic looking macro.", 
    "csrf_meta_tags.", 
    "csrf stands for cross-site request forgery.", 
    "And it will cause some tags to be put into any request that involves form", 
    "submission, so that there is a secret token included with every form that's", 
    "different whenever the form is served.", 
    "And then the action that receives the form can check whether the received", 
    "token is the same one that was served.", 
    "If not, it's probably a cross-site request forgery.", 
    "And if you look at the top of your application controller, you'll see", 
    "another macro, protect from forgery, which turns on the ability to check", 
    "what the meta tags look like.", 
    "So it's two parts, right?", 
    "One part is making sure there's stuff in all of your views that inserts a", 
    "unique string whenever there's a form request that could get submitted.", 
    "And the other part is logic in the controllers that uses the form", 
    "submission to make sure that the two pieces match up.", 
    "You have to enable them both, but the logic for them is nicely partitioned", 
    "out for you.", 
    "So, given what we just saw, if a site has a valid SSL search, which of the--", 
    "and let's say you trust the certificate authority, which", 
    "of these are true?", 
    "The site is probably not masquerading as an impostor.", 
    "It'll be harder to mount CSRF and SQL injection against it, and your data is", 
    "secure once it reaches the site."
  ]
}