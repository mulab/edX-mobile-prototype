{
  "start": [
    0, 
    2710, 
    3890, 
    6600, 
    8050, 
    10950, 
    14130, 
    14950, 
    18210, 
    19360, 
    23620, 
    26620, 
    27320, 
    30670, 
    34000, 
    37610, 
    40300, 
    43550, 
    45250, 
    48380, 
    51340, 
    52470, 
    56050, 
    58360, 
    62370, 
    67520, 
    68280, 
    70640, 
    72310, 
    74770, 
    77300, 
    79550, 
    82020, 
    83100, 
    84170, 
    86190, 
    89930, 
    92140, 
    94650, 
    97770, 
    98910, 
    101540, 
    104540, 
    105860, 
    108250, 
    113150, 
    117550, 
    119170, 
    122410, 
    124450, 
    125200, 
    127310, 
    129380, 
    134520, 
    137830, 
    139480, 
    143770, 
    145110, 
    148350, 
    150440, 
    152780, 
    155500, 
    159250, 
    164330, 
    167780, 
    169080, 
    173220, 
    175200, 
    179180, 
    180410, 
    182280, 
    185830, 
    187040, 
    191630, 
    195020, 
    198890, 
    203920, 
    206680, 
    210640, 
    214360, 
    215420, 
    217540, 
    219600, 
    223150, 
    225280, 
    226780, 
    230840, 
    234530, 
    235780, 
    239420, 
    242180, 
    244770, 
    249560, 
    251430, 
    256630, 
    259790, 
    261750, 
    264670, 
    269040, 
    273160, 
    274560, 
    276110, 
    279580, 
    281690, 
    285090, 
    286340, 
    289620, 
    292670, 
    294430, 
    295540, 
    299540, 
    301950, 
    306520, 
    308270, 
    309880, 
    312980, 
    315330, 
    317280, 
    320220, 
    321290, 
    324610, 
    328260, 
    332170, 
    333530, 
    338710, 
    340730, 
    341550, 
    344590, 
    346120, 
    350040, 
    351670, 
    355570, 
    357300, 
    360700, 
    363510, 
    366830, 
    369950, 
    372720, 
    373760, 
    374800, 
    378420, 
    380820, 
    383800, 
    385060, 
    388400, 
    390480, 
    394180, 
    397245, 
    400430, 
    402060, 
    405270, 
    409000, 
    410410, 
    413490, 
    415320, 
    418880, 
    420800, 
    422360, 
    426360, 
    431410, 
    434360, 
    435770, 
    439310, 
    444530, 
    446710, 
    449370, 
    451980, 
    456090, 
    458990, 
    463980, 
    465030, 
    466640, 
    470150, 
    473110, 
    475040, 
    476090, 
    479340, 
    482620, 
    486100, 
    492090, 
    496040, 
    497180, 
    500000, 
    504280, 
    509910, 
    512659, 
    515419, 
    518808, 
    521570, 
    525690, 
    528460, 
    532280, 
    535720, 
    540790, 
    541340, 
    546070, 
    547110, 
    550130, 
    553510, 
    555880, 
    557050, 
    559760, 
    562160, 
    564210, 
    568080, 
    572640, 
    575860, 
    577950, 
    579400, 
    580950, 
    584280, 
    585550, 
    588710, 
    589890, 
    593500, 
    596670, 
    598930, 
    601120, 
    602770, 
    606620, 
    608360, 
    611480, 
    615320, 
    619050, 
    622090, 
    625670, 
    626690, 
    629960, 
    630990, 
    634270, 
    635800, 
    639180, 
    642320, 
    644470, 
    647380, 
    650935, 
    653510, 
    656660, 
    658050, 
    661010, 
    664310, 
    668010, 
    669490, 
    671930, 
    673950, 
    675330, 
    677160, 
    678990, 
    681420, 
    685590, 
    687730, 
    690830, 
    693320, 
    696680, 
    698090, 
    700100, 
    702480, 
    702890, 
    707520, 
    709530, 
    712230, 
    715620, 
    718900, 
    721540, 
    724090, 
    726500, 
    729340, 
    732340, 
    735190, 
    736730, 
    740640, 
    741950, 
    745850, 
    748600, 
    753770, 
    755300, 
    759020, 
    763090, 
    765050, 
    768300, 
    768770, 
    772260, 
    776220, 
    779120, 
    780580, 
    784100
  ], 
  "end": [
    2710, 
    3890, 
    6600, 
    8050, 
    10950, 
    14130, 
    14950, 
    18210, 
    19360, 
    23620, 
    26620, 
    27320, 
    30670, 
    34000, 
    37610, 
    40300, 
    43550, 
    45250, 
    48380, 
    51340, 
    52470, 
    56050, 
    58360, 
    62370, 
    67520, 
    68280, 
    70640, 
    72310, 
    74770, 
    77300, 
    79550, 
    82020, 
    83100, 
    84170, 
    86190, 
    89930, 
    92140, 
    94650, 
    97770, 
    98910, 
    101540, 
    104540, 
    105860, 
    108250, 
    113150, 
    117550, 
    119170, 
    122410, 
    124450, 
    125200, 
    127310, 
    129380, 
    134520, 
    137830, 
    139480, 
    143770, 
    145110, 
    148350, 
    150440, 
    152780, 
    155500, 
    159250, 
    164330, 
    167780, 
    169080, 
    173220, 
    175200, 
    179180, 
    180410, 
    182280, 
    185830, 
    187040, 
    191630, 
    195020, 
    198890, 
    203920, 
    206680, 
    210640, 
    214360, 
    215420, 
    217540, 
    219600, 
    223150, 
    225280, 
    226780, 
    230840, 
    234530, 
    235780, 
    239420, 
    242180, 
    244770, 
    249560, 
    251430, 
    256630, 
    259790, 
    261750, 
    264670, 
    269040, 
    273160, 
    274560, 
    276110, 
    279580, 
    281690, 
    285090, 
    286340, 
    289620, 
    292670, 
    294430, 
    295540, 
    299540, 
    301950, 
    306520, 
    308270, 
    309880, 
    312980, 
    315330, 
    317280, 
    320220, 
    321290, 
    324610, 
    328260, 
    332170, 
    333530, 
    338710, 
    340730, 
    341550, 
    344590, 
    346120, 
    350040, 
    351670, 
    355570, 
    357300, 
    360700, 
    363510, 
    366830, 
    369950, 
    372720, 
    373760, 
    374800, 
    378420, 
    380820, 
    383800, 
    385060, 
    388400, 
    390480, 
    394180, 
    397245, 
    400430, 
    402060, 
    405270, 
    409000, 
    410410, 
    413490, 
    415320, 
    418880, 
    420800, 
    422360, 
    426360, 
    431410, 
    434360, 
    435770, 
    439310, 
    444530, 
    446710, 
    449370, 
    451980, 
    456090, 
    458990, 
    463980, 
    465030, 
    466640, 
    470150, 
    473110, 
    475040, 
    476090, 
    479340, 
    482620, 
    486100, 
    492090, 
    496040, 
    497180, 
    500000, 
    504280, 
    509910, 
    512659, 
    515419, 
    518809, 
    521570, 
    525690, 
    528460, 
    532280, 
    535720, 
    540790, 
    541340, 
    546070, 
    547110, 
    550130, 
    553510, 
    555880, 
    557050, 
    559760, 
    562160, 
    564210, 
    568080, 
    572640, 
    575860, 
    577950, 
    579400, 
    580950, 
    584280, 
    585550, 
    588710, 
    589890, 
    593500, 
    596670, 
    598930, 
    601120, 
    602770, 
    606620, 
    608360, 
    611480, 
    615320, 
    619050, 
    622090, 
    625670, 
    626690, 
    629960, 
    630990, 
    634270, 
    635800, 
    639180, 
    642320, 
    644470, 
    647380, 
    650935, 
    653510, 
    656660, 
    658050, 
    661010, 
    664310, 
    668010, 
    669490, 
    671930, 
    673950, 
    675330, 
    677160, 
    678990, 
    681420, 
    685590, 
    687730, 
    690830, 
    693320, 
    696680, 
    698090, 
    700100, 
    702480, 
    702890, 
    707520, 
    709530, 
    712230, 
    715620, 
    718900, 
    721540, 
    724090, 
    726500, 
    729340, 
    732340, 
    735190, 
    736730, 
    740640, 
    741950, 
    745850, 
    748600, 
    753770, 
    755300, 
    759020, 
    763090, 
    765050, 
    768300, 
    768770, 
    772260, 
    776220, 
    779120, 
    780580, 
    784100, 
    788010
  ], 
  "text": [
    "ARMANDO FOX: So let's talk through the answers here.", 
    "Which is not true?", 
    "Means that three of them are true, so we should be able to", 
    "do this pretty easily.", 
    "JavaScript code can certainly Inspect DOM element attributes.", 
    "We just finished explaining that to see what the user typed.", 
    "The second one--", 
    "JavaScript code can prevent the Submit button from submitting the form.", 
    "In fact you can.", 
    "You can just override the default clicking action for form submission.", 
    "You can override the Form Submit action, which is actually the more", 
    "powerful one, right?", 
    "The form submit action is triggered whether the user uses the Submit", 
    "button, or whether they try to submit the form using keyboard shortcuts.", 
    "But either way, you can always return False from one of those handlers, and", 
    "thereby suppress the default browser behavior.", 
    "So, yeah, JavaScript can actually prevent the Submit button from", 
    "submitting the form.", 
    "In fact I once took one of those online tests where you can get points", 
    "taken off of your driving record if you get a ticket, you can go to online", 
    "traffic school.", 
    "And they had this requirement that you had to spend a minimum of 10 minutes", 
    "reading each page before taking the quiz.", 
    "But foolishly, the implementation of that was a JavaScript timer that would", 
    "wait 10 minutes, and then undisable the Submit button, rather than doing", 
    "it on the server.", 
    "So if you just turned off JavaScript you could blaze through,", 
    "it was a lot faster.", 
    "So remember that when you're on a site that's troubling you.", 
    "Some validations may be impractical to perform on the client.", 
    "I think that's sort of common sense.", 
    "And the server doesn't have to repeat the validations performed by", 
    "JavaScript.", 
    "Absolutely false.", 
    "You cannot trust anybody.", 
    "JavaScript when it's available is a convenience, but you have to assume", 
    "that it might not have worked, you have to assume that some users don't", 
    "have it, and you have to assume that there are plenty of evil users out", 
    "there who would willingly bypass it, and try to feed crap to your", 
    "application.", 
    "So blue was the correct answer on this one.", 
    "So let me try to kind of step up a level.", 
    "JavaScript is--", 
    "I think every topic in this course has this property.", 
    "We tried to create a week's worth of lecture content, and about 20 to 30", 
    "page book chapter that tries to hit the most important 10% of that topic,", 
    "and give you an overview of the landscape.", 
    "These are all huge topics.", 
    "You could fill dumpsters with books about JavaScript,", 
    "there's so many of them.", 
    "Most of them are terrible, but there's a couple that we recommended on the", 
    "website that I think are actually pretty good.", 
    "So in any one of these concepts we can expand into an entire half semester's", 
    "worth of stuff, but the goal is to give you the big picture and make sure", 
    "you know what you don't know.", 
    "With that in mind, what's really important is what's the evolution of", 
    "JavaScript going to in the future?", 
    "What are the kinds of things that you should be thinking about when using", 
    "JavaScript in a project as an option.", 
    "How do you know when it's appropriate to use, and not to use?", 
    "Those are really the things we want y'all to be able to take away from it.", 
    "So let's pop up a level, and talk about some of those.", 
    "The JavaScript usage that the simple examples we did have focused on is you", 
    "have a primarily server-side app, but you want to enhance the user interface", 
    "in various ways using AJAX.", 
    "And that was really the heaviest use case for JavaScript initially, but", 
    "other use cases are now emerging.", 
    "One of them is people are writing entire server-side apps in JavaScript.", 
    "Instead of, for example--", 
    "Ruby, or Python, or PHP.", 
    "And one of the frameworks that has become very popular for doing this is", 
    "called Node.", 
    "It's a fully JavaScript server-side library for creating arbitrarily", 
    "complex server-side apps, model view controller if you want.", 
    "But anything that's sort of network event-driven request/reply kind of", 
    "app, because JavaScript as a language is single threaded, when you're", 
    "writing in this model everything has to be asynchronous.", 
    "So for example you can't say Open the File, Read the File.", 
    "You have to say Open the File, and here's a function to call whenever the", 
    "Open succeeds.", 
    "Because in the meantime, pretty much anything else can happen.", 
    "And the only way you can get concurrency--", 
    "the only way you can get multiple threads running at the same time--", 
    "because JavaScript doesn't have multiple threads-- is", 
    "everybody has to yield.", 
    "So one JavaScript thread will call File Open, and because File Open might", 
    "Block, you've have to just pass a function that says when the Blocking", 
    "is over call me.", 
    "Now it's true that Node provides some ways to make that programming model", 
    "less painful, and it's true that potentially--", 
    "if you're good programmer and you know how to use the model--", 
    "you can create code that has a smaller memory footprint per user served, than", 
    "a lot of server-side frameworks do.", 
    "One of the big advances in programming models, and in cloud computing is the", 
    "fact that you can use blocking programming models to represent things", 
    "that are naturally blocking, and cloud computing makes it", 
    "pretty cheap to do so.", 
    "If we've taken CS 162 we all know that when we're in a server-side app", 
    "written in something like Ruby when the app appears to be waiting for a", 
    "connection, there's actually other apps that are", 
    "executing at the same time.", 
    "In fact many copies of our own server could be executing at the same time.", 
    "That's how we get concurrency.", 
    "And that programming model is way easier to think about from a", 
    "programmer's point of view.", 
    "Do this, wait til something happens, then do this, then do this.", 
    "As opposed to having a linear ordering of things that you know the order in", 
    "which they're supposed to happen, but you have to express them", 
    "asynchronously.", 
    "So there's a sort of open ended debate about which way is -- quote unquote --", 
    "\"the better way\" to do things.", 
    "Should you be willing to sacrifice your efficiency of memory usage, and", 
    "use traditional frameworks that are blocking--", 
    "like Rails, or Python, or whatever--", 
    "or should you really try to program closer to the metal?", 
    "And use these frameworks like Node where you've got to manage the", 
    "concurrency yourself?", 
    "I come down on the side of use the model that is friendlier to", 
    "programmers.", 
    "Buying more performance in terms of more servers is probably going to be", 
    "cheaper than buying programmers who can program to this framework without", 
    "getting confused, and time spent debugging is time spent not making", 
    "money from your customers.", 
    "So I would say my personal opinion is you need a good reason to get away", 
    "from these much easier to use-- if somewhat less", 
    "efficient program model--", 
    "Moore's Law has been very good to us for three decades.", 
    "Let us not waste Moore's bounty.", 
    "Let us use Moore's bounty to allow ourselves to write code in a way that", 
    "makes it more fun for programmers.", 
    "We spend a lot of time worrying about I should have better performance.", 
    "You should have a program that works.", 
    "Having a program that doesn't work, that's very low performance.", 
    "The non-working state of a program has terrible performance.", 
    "So my view is that you should err on the side of things that are more", 
    "likely to make your code correct, easy to maintain, easy to understand, and", 
    "yes that comes with a penalty in terms of memory usage, and I'm", 
    "happy to pay it.", 
    "Same reason I pay taxes.", 
    "To have the excellent roads we have in California.", 
    "Yeah I thought I'd get a comment on that.", 
    "On the other hand, the same thing has sort of been happening on the client", 
    "where the equation's a little bit different.", 
    "Because in the client if you want to do anything nontrivial in the browser,", 
    "JavaScript is pretty much your only choice.", 
    "JavaScript is language that is blessed as the browser language.", 
    "So as long as people are going to try to write more complicated apps, or you", 
    "think of something like Google Maps, or Google Docs, those are full blown", 
    "apps that have their own internal structure.", 
    "They're not some sort of decorations around a user interface.", 
    "So frameworks like Backbone, which support doing something very much like", 
    "model view controller.", 
    "Frameworks like AngularJS, which is another take on doing model view", 
    "controller entirely in the client.", 
    "And doing all of your communication to the server using AJAX, and having the", 
    "server just return data structures.", 
    "So this is another style of doing the app.", 
    "You serve an initial HTML page, which is just kind of a pretty static", 
    "layout, and within the layout you've got a lot of Ajax calls that are going", 
    "to call the server, get data structures back, and use them to draw", 
    "the contents.", 
    "So a lot of apps are increasingly being done this way, and when Davis", 
    "Frank comes on a week from Monday to do a guest lecture on JavaScript, he's", 
    "going to talk about this style of programming which is", 
    "becoming pretty prevalent.", 
    "There's also a pretty interesting framework that Yahoo open sourced a", 
    "few months ago called the Mojito, named after a drink that has come to", 
    "be associated with my native country.", 
    "But the idea behind Mojito is that can do your HTML rendering either on the", 
    "server, or on the client.", 
    "You can kind of move it back and forth.", 
    "And because it's driven by using JavaScript, you can sort of decide", 
    "well maybe this functionality should just be moved back to the server, and", 
    "you don't have to rewrite that code.", 
    "So it's interesting experiment.", 
    "I haven't actually tried using it, so I don't want to say much about it.", 
    "But if you're building applications where there might be a technical", 
    "reason to decide on the fly which parts go to the client, and which", 
    "parts go to the server, Mojito is designed to help you do just that.", 
    "Speaking of performance, because increasingly the browser is replacing", 
    "the client OS--", 
    "most people get so many things through a browser now--", 
    "that it's been encrusted with CSS to make layout better.", 
    "With JavaScript, and Ajax to make the UI more desktop like, and interactive.", 
    "And you can ask what's the performance cost of doing all this?", 
    "And we actually have people right here at Berkeley doing some pretty", 
    "interesting research on where the time goes when your browser is rendering", 
    "complicated pages.", 
    "This is based on I think Firefox measurements, but Ras Bodik, and the", 
    "CS department, and some of the his students have been working on how to", 
    "speed up the performance of apps that run in browsers, because browsers are", 
    "becoming so important as the way that mobile apps are delivered.", 
    "So you could see that there's 21% of the time is spent parsing the HTML", 
    "from the server.", 
    "29% figuring out which selectors in the CSS sensor are going to apply to", 
    "which elements.", 
    "Layout is actually pretty fast.", 
    "And then rendering, and JavaScript is highly variable.", 
    "JavaScript depends on which interpreter you have and a million", 
    "other things.", 
    "But basically browsers are starting to compete on the speed with which they", 
    "can do layout, rendering, and JavaScript.", 
    "Because that's what makes the apps feel rich.", 
    "So in Professor Ras Bodik's group they've been working on parallelizing", 
    "the parsing steps, and the CSS selector steps, which collectively", 
    "take up almost 50% of the time.", 
    "And they're looking at ways to use GPUs--", 
    "Graphics Processing Units--", 
    "To speed up the rendering step.", 
    "So there's a lot of research being put behind how can we make CSS and", 
    "JavaScript faster?", 
    "That's possibly an argument in favor of doing more of your programming in", 
    "that style.", 
    "Having said that, there's a big pitfall with assuming that if your app", 
    "feels slow, that the right thing to do is to move stuff into JavaScript.", 
    "Because now it's happening in the browser.", 
    "So it won't cost that round trip to the server.", 
    "That'll make it faster.", 
    "As often as not, that turns out to be wrong, and we'll start talking about", 
    "bottlenecks, and performance shortly.", 
    "But there's a lot of reasons that this could go wrong.", 
    "One reason is you start taking this approach, and your API between", 
    "JavaScript and the server is the server is doing expensive operations.", 
    "It's like I'm not sure what I'm going to render, so I'm going to return the", 
    "entire list of movies for every call, even though any given call might only", 
    "care about a subset of them.", 
    "So you haven't really thought through the interface between the client and", 
    "the server.", 
    "I've actually seen course projects where adding JavaScript made things", 
    "worse for this reason.", 
    "Because before, you were doing a large number of cheap operations.", 
    "Now you're doing a medium size numbers of much more expensive operations, and", 
    "you have to render it on the client.", 
    "Also depending on which JavaScript interpreter you have--", 
    "not everybody has the latest laptop with the latest version of Chrome-- a", 
    "lot of people are using machines that are 8 or 10 years old, they haven't", 
    "upgraded their OSs in years, and who knows how fast the JavaScript", 
    "interpreters are.", 
    "Recent JavaScript interpreters are quite good, because now there's a lot", 
    "of competition around it, but you want to make sure-- if you've got a large", 
    "user base-- it's important that the people who are using older browsers", 
    "get a decent experience.", 
    "In fact, Twitter ran into this exact problem.", 
    "They had moved a lot of their app from being heavily,", 
    "heavily server centric--", 
    "They used to call it the monorail, because it was a big", 
    "monolithic Rails app.", 
    "And as they started breaking out the pieces, they moved more and more", 
    "functionality into the web page, where you just kind of load a Skeleton Page,", 
    "and then AJAX would be used to do everything else.", 
    "To get the feeds, and basically back fill all the content.", 
    "And what they found was that a huge number of their users were waiting", 
    "much longer to load the initial page than they were in the old version.", 
    "And it was because of this reason.", 
    "For users with fast JavaScript, no problem.", 
    "For ones with older browsers, they were actually getting a worse", 
    "experience.", 
    "So now they're going back to doing the variety of smaller services, and", 
    "re-architecting Twitter as a service-oriented architecture.", 
    "If you watch this SaaS TV channel that I think we advertised at the beginning", 
    "of the course, there's actually a 10 minute interview with Raffi Krikorian", 
    "the CTO, and he talks about this.", 
    "Also testing and debugging is more complicated because now you have to", 
    "handle client-side errors, as well a server-side errors.", 
    "And when a client-side error occurs you don't always have as much", 
    "information as you would have had for that same error on the server.", 
    "There may not be a lot you can tell the user that's useful.", 
    "Having said that, the tools for doing testing, and debugging on the client", 
    "side have gotten a lot better.", 
    "If you're going to do any JavaScript whatsoever, at least have Firebug, or", 
    "you'll be in a great deal of pain.", 
    "And when Davis Frank comes in a couple weeks, he's also going to talk about", 
    "how to do TDD in JavaScript using Jasmine.", 
    "So those risks are offsetting the pitfall of adding JavaScript to make", 
    "your app more responsive.", 
    "So let's closeout JavaScript with a retrospective back to solid.", 
    "Remember we had these five principles that help organize your code in a way", 
    "that minimizes the cost of change.", 
    "And the question is when you're using unobtrusive versus traditional", 
    "JavaScript.", 
    "Remember unobtrusive is you're keeping your JavaScript in separate files,", 
    "you're doing the binding between JavaScript and HTML in a separate", 
    "setup function, so that it's not called when browsers don't have", 
    "JavaScript built in.", 
    "So when you use that approach versus the old way which is the JavaScript is", 
    "all mixed into the HTML pages, which solid principle are you helping with?"
  ]
}