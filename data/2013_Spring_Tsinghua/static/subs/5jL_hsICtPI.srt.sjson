{
  "start": [
    520, 
    3790, 
    8100, 
    9820, 
    12390, 
    13640, 
    17410, 
    19280, 
    22530, 
    25850, 
    27140, 
    27880, 
    29470, 
    33660, 
    37770, 
    38640, 
    40580, 
    43080, 
    45640, 
    48470, 
    50110, 
    54700, 
    55950, 
    60430, 
    63940, 
    67170, 
    69770, 
    74220, 
    77500, 
    81780, 
    84480, 
    87280, 
    91170, 
    94355, 
    97510, 
    100660, 
    102960, 
    107100, 
    110040, 
    113060, 
    115910, 
    118810, 
    121940, 
    124380, 
    127500, 
    130470, 
    131390, 
    133350, 
    135730, 
    138380, 
    141300, 
    143080, 
    146230, 
    148290, 
    151790, 
    153950, 
    156530, 
    158580, 
    161600, 
    163210, 
    166500, 
    167870, 
    170730, 
    175700, 
    179910, 
    182540, 
    184380, 
    187120, 
    190490, 
    194700, 
    197940, 
    199540, 
    202180, 
    205030, 
    206160, 
    208890, 
    210330, 
    213680, 
    214770, 
    217800, 
    220190, 
    223200, 
    224150, 
    227170, 
    229640, 
    231210, 
    235100, 
    237780, 
    240770, 
    245290, 
    247200, 
    248490, 
    253640, 
    257300, 
    259920, 
    260640, 
    263090, 
    264560, 
    265560, 
    268010, 
    272660, 
    273430, 
    276020, 
    277040, 
    279680, 
    282100, 
    285960, 
    289120, 
    291880, 
    294640, 
    297870, 
    300300, 
    301380, 
    305290, 
    308530, 
    309100, 
    310490, 
    315270, 
    318470, 
    323410, 
    326270, 
    327820, 
    329470, 
    333290, 
    338070, 
    342220, 
    347160, 
    349750, 
    351280, 
    351920, 
    356170, 
    359650, 
    362610, 
    365970, 
    367230, 
    371940, 
    376210, 
    378770, 
    381680, 
    385550, 
    388730, 
    390940, 
    393810, 
    398670, 
    400850, 
    405680, 
    406700, 
    409060, 
    412410, 
    416690, 
    420560, 
    423990, 
    425880, 
    429120, 
    432160, 
    433720, 
    435430, 
    438270, 
    441350, 
    444350, 
    448410, 
    450270, 
    451980, 
    456010, 
    458860, 
    463550, 
    465050, 
    466610, 
    469540, 
    471680, 
    475250, 
    476270, 
    479430, 
    481040, 
    482720, 
    483080, 
    486040, 
    488400, 
    492410, 
    495470, 
    496860, 
    501140, 
    503800, 
    506870, 
    508080, 
    509790, 
    513740, 
    516580, 
    519320, 
    522880, 
    526310, 
    530320, 
    534210, 
    538490, 
    540570, 
    544300, 
    549220, 
    552520, 
    553890, 
    557330, 
    560842, 
    564510
  ], 
  "end": [
    3790, 
    8100, 
    9820, 
    12390, 
    13640, 
    17410, 
    19280, 
    22530, 
    25850, 
    27140, 
    27880, 
    29470, 
    33660, 
    37770, 
    38640, 
    40580, 
    43080, 
    45640, 
    48470, 
    50110, 
    54700, 
    55950, 
    60430, 
    63940, 
    67170, 
    69770, 
    74220, 
    77500, 
    81780, 
    84480, 
    87280, 
    91170, 
    94355, 
    97510, 
    100660, 
    102960, 
    107100, 
    110040, 
    113060, 
    115910, 
    118810, 
    121940, 
    124380, 
    127500, 
    130470, 
    131390, 
    133350, 
    135730, 
    138380, 
    141300, 
    143080, 
    146230, 
    148290, 
    151790, 
    153950, 
    156530, 
    158580, 
    161600, 
    163210, 
    166500, 
    167870, 
    170730, 
    175700, 
    179910, 
    182540, 
    184380, 
    187120, 
    190490, 
    194700, 
    197940, 
    199540, 
    202180, 
    205030, 
    206160, 
    208890, 
    210330, 
    213680, 
    214770, 
    217800, 
    220190, 
    223200, 
    224150, 
    227170, 
    229640, 
    231210, 
    232460, 
    237780, 
    240770, 
    245290, 
    247200, 
    248490, 
    253640, 
    257300, 
    259920, 
    260640, 
    263090, 
    264560, 
    265560, 
    268010, 
    272660, 
    273430, 
    276020, 
    277040, 
    279680, 
    282100, 
    285960, 
    289120, 
    291880, 
    294640, 
    297870, 
    300300, 
    301380, 
    305290, 
    308530, 
    309100, 
    310490, 
    315270, 
    318470, 
    323410, 
    326270, 
    327820, 
    329470, 
    333290, 
    338070, 
    342220, 
    347160, 
    349750, 
    351280, 
    351920, 
    356170, 
    359650, 
    362610, 
    365970, 
    367230, 
    371940, 
    376210, 
    378770, 
    381680, 
    385550, 
    388730, 
    390940, 
    393810, 
    398670, 
    400850, 
    405680, 
    406700, 
    409060, 
    412410, 
    416690, 
    420560, 
    423990, 
    425880, 
    429120, 
    432160, 
    433720, 
    435430, 
    438270, 
    441350, 
    444350, 
    448410, 
    450270, 
    451980, 
    456010, 
    458860, 
    463550, 
    465050, 
    466610, 
    469540, 
    471680, 
    475250, 
    476270, 
    479430, 
    481040, 
    482720, 
    483080, 
    486040, 
    488400, 
    492410, 
    495470, 
    496860, 
    501140, 
    503800, 
    506870, 
    508080, 
    509790, 
    513740, 
    516580, 
    519320, 
    522880, 
    526310, 
    530320, 
    534210, 
    538490, 
    540570, 
    544300, 
    549220, 
    552520, 
    553890, 
    557330, 
    560842, 
    564510, 
    566750
  ], 
  "text": [
    "We could start by ruling a couple of these out.", 
    "Which two can I rule out for the exact same reason?", 
    "The two that begin with Firefox, right?", 
    "Because Firefox is a browser and browsers are browsers.", 
    "They are not part of the presentation tier.", 
    "They're just the thing that the user uses so that they can check Facebook", 
    "instead of listening in lecture.", 
    "We can also rule out this one, although this was a near miss.", 
    "Microsoft IIS is indeed a presentation tier product that", 
    "also does more things.", 
    "Rack+Rails--", 
    "that's the same as choice B in the orange.", 
    "But we fail on choice C because we're looking for a persistence tier.", 
    "And in fact, one of the properties of the presentation tier is it's pretty", 
    "much stateless.", 
    "It pretty much doesn't store any state.", 
    "In fact, as we'll see, that's one of the reasons that you can make many", 
    "copies of it and it line up in multiple columns.", 
    "Which in fact leaves A as the only correct answer, or", 
    "I should say orange.", 
    "The Apache web server is probably the most popular widely used presentation", 
    "tier server out there.", 
    "Rack is the application server that supports Rails applications and also", 
    "other applications written in Ruby that don't use Rails, as it turns out.", 
    "And relational databases are by far the most common persistence tier,", 
    "including the one that we're generally going to use.", 
    "So that was just calisthenics to get your brains going.", 
    "Because now we can talk about Model-View-Controller.", 
    "So the Model-View-Controller is one example of something that we're going", 
    "to see over and over again in this class, which is a pattern.", 
    "And a lot of people have had a similar problem and if someone can figure out", 
    "how to generalize a solution or a family of solutions that solves many", 
    "instances of that problem, you'd want that to be written up somewhere to", 
    "say: look, if your problem looks like this, here's a proven way, a proven", 
    "structure, a proven architecture, that is a good solution to your problem.", 
    "It's better than the alternatives for whatever reasons.", 
    "Model-View-Controller is a very successful example of a software", 
    "architectural pattern which is a way of organizing a large piece of", 
    "software, especially in this case, one that's user facing.", 
    "So what we're doing now is diving one level down.", 
    "We're not going to study presentation servers in too much detail.", 
    "Relational databases are an arcane area all their own.", 
    "But this is where we're going to be spending most of our time.", 
    "So the apps that we're going to write, their code is going to reside in the", 
    "application logic tier and is generally going to be structured", 
    "according to this", 
    "Model-View-Controller structural pattern.", 
    "So let's see what that is.", 
    "So the idea behind the Model-View-Controller design pattern", 
    "is that you want to separate the concerns of, how do", 
    "you organize data--", 
    "and that's the model-- but what are the things that you do your data and", 
    "what kind of data is it.", 
    "There is a human being somewhere who is interacting with that data.", 
    "And they're doing so through views.", 
    "And views is not just that they can see the data.", 
    "It's also the way that they can interact with the data.", 
    "So if you think of a web browser, the view is the page they are seeing that", 
    "also has stuff on it, has affordances.", 
    "It's got things that you can do to the page that hopefully will cause the", 
    "server to react.", 
    "And the controller is the mediation between those two things.", 
    "So the idea is as a user, I see a view, I interact with that view in", 
    "some way, there's a controller that will detect what I've done, and it", 
    "will cause the right things to happen in the model so", 
    "that I can get a response.", 
    "Depending on how you've seen this diagram drawn-- sometimes this arrow", 
    "from a model to the view is drawn kind of as a dotted line.", 
    "That's because generally speaking, although data that's associated with", 
    "the models is going to show up in the views, usually there isn't direct", 
    "communication between the model and the views.", 
    "It's supposed to be mediated through the controller.", 
    "And we'll see many reasons as we go along of why that's", 
    "a good design choice.", 
    "But the arrow is here sort of to suggest--", 
    "and it's a dotted arrow--", 
    "that what you're seeing in the view ultimately is based on stuff coming", 
    "from the models.", 
    "So the things that your application does and the data that it does them", 
    "to, that is the purview of the model.", 
    "Now you might look at a web browser and think about how you interact with", 
    "it and say, well yeah.", 
    "Why wouldn't you organize your apps this way?", 
    "There are in fact some other patterns that you could use to", 
    "organize your apps.", 
    "Sorry about that.", 
    "So let's understand how Model-View-Controller works then we", 
    "can see what some alternatives are, when you might use them.", 
    "So in the model view controller pattern each type of thing in your", 
    "app, I guess-- for lack of a better name--", 
    "is a model.", 
    "So we can imagine in Rotten Potatoes-- which is the app that we're going to", 
    "be using as a test bed for a lot of these explanations--", 
    "a couple of different kinds of entities that it might manipulate", 
    "might be movies.", 
    "So Rotten Potatoes is going to be an app for reviewing movies.", 
    "It's like Rotten Tomatoes if you've ever used it.", 
    "Only it's much simpler.", 
    "And by the time you're done with it, it will arguably be cooler.", 
    "But the movies are obviously a thing that you might have in this app.", 
    "Moviegoers--", 
    "you might have profiles of people who rate movies and write", 
    "reviews about them.", 
    "So that would mean that reviews are also kind of entity.", 
    "And sort of the distinguishing architectural feature of", 
    "Model-View-Controller is that each type of thing, each entity, has its", 
    "own model, its own controller, and its own set of views.", 
    "Now that's not to say, that those never interact with each other.", 
    "It might be perfectly reasonable to say, well, moviegoers are going to", 
    "write reviews, and we'd like to associate a review with the movie-goer", 
    "who wrote it, and for that matter, with the movie that", 
    "the review is about.", 
    "So there's mechanisms that we'll see that are supported by databases and", 
    "made even nicer by Rails, that allow you to set up these kinds of", 
    "relationships.", 
    "They're called Associations.", 
    "But generally speaking, for each model there's going to be a controller and a", 
    "set of views that go along with it.", 
    "So in terms of going back to our previous analogy about using the", 
    "browser, that means that depending on what action you're", 
    "asking the app to perform--", 
    "what URL you're requesting--", 
    "the request might go to the Movies Controller if it's a page about", 
    "movies, the Reviews Controller to see some reviews, and so on.", 
    "And in the next section, we'll talk about how we map from URIs to the", 
    "entities that those URIs are associated with in the controllers.", 
    "So why wouldn't you organize your app this way?", 
    "Are there other alternatives?", 
    "Sure.", 
    "There's simpler applications where if really all you have is you have a", 
    "handful of pages and each page does a very limited number of things, it", 
    "might make more sense to say, well, we'll just have a controller per page.", 
    "And there's a bunch of models but any given page might actually mix up data", 
    "from those different models.", 
    "So this is an organization called Page Controller, where instead of having a", 
    "model, a view, and a controller for each entity, you've got a", 
    "controller per page.", 
    "Yet another design pattern is the Front Controller.", 
    "J2EE servlet sort of use this pattern where there's kind of one entry point", 
    "to the entire app, but there's a bunch of different views they can be", 
    "rendered within that container.", 
    "And the application is able to interact with a large number models.", 
    "This was the JSP or Java Server page programming model for a long time.", 
    "And even a third example, template view--", 
    "which, if you've done PHP programming, PHP could be said to be an example of", 
    "template view.", 
    "I'll give another example actually when we talk about Rails.", 
    "But the main differentiation between Template View and", 
    "Model-View-Controller is again, in MVC, the app is built around", 
    "collections of models with their corresponding views and controllers.", 
    "In pure Template View, the app is really built around the idea of,", 
    "there's views that have interpolation--", 
    "stuff that you're going to stick into the view based on data from the app--", 
    "and there isn't really the notion of a separate controller.", 
    "The idea of the controller is generic.", 
    "It's sort of built into the framework.", 
    "And what's different is you've got a bunch of different views that can make", 
    "use of data that comes from something like a database.", 
    "There, that's the moral of the story.", 
    "If you're building a SaaS app with Rails, what it's designed to do is", 
    "help you build applications that are structured around", 
    "Model-View-Controller.", 
    "In a sense, it's easier to do that then to stray outside of that.", 
    "If you stray outside of MVC framework too much, you'll find yourself", 
    "fighting Rails, because the abstractions that it provides are", 
    "based on the assumption that this is how you are going to", 
    "structure your app.", 
    "However, depending on what kind of app you're writing, MVC may not be", 
    "appropriate or it may be overkill.", 
    "So for example, I've got a couple of simple apps that I maintain that", 
    "actually don't use Rails.", 
    "They are written in Ruby but they actually use Sinatra.", 
    "And, really, they look a lot more like this.", 
    "They look like Page Controller apps.", 
    "Why?", 
    "Because they're so simple and they do such a limited number of things, that", 
    "the MVC pattern seemed like it would be overkill.", 
    "So one of the issues that you face in any system architecture, whether it's", 
    "software or hardware, is there's more than one way to", 
    "organize a large system.", 
    "And I would feel bad if you left this class thinking that", 
    "Model-View-Controller is the way that web apps are designed.", 
    "It is a way that web apps are designed, and in many cases it's a", 
    "really, really good way.", 
    "But I would hate for you to think that it's the only way.", 
    "So, more or less, any time that we tell you, here is a great way to do", 
    "stuff, we will also make an effort to tell you, but here are some", 
    "alternatives and times when you might want to use those alternatives.", 
    "This is an example of one of those choice points.", 
    "So, given that, we can now ask this question.", 
    "Which of these statements is not true regarding Model-View-Controller now", 
    "that you've had an extensive introduction to it?", 
    "That in SaaS apps on the web, controller actions and view contents", 
    "are transmitted with HTTP?", 
    "That Model-View-Controller apps always have both a \"client\" part, like the", 
    "browser, and a \"cloud\" part, like the thing that runs on Rails in our case?", 
    "That Model-View-Controller is just one of several possible ways to structure", 
    "an application?", 
    "If you were listening in the last 10 seconds, that should be an easy one.", 
    "And that peer-to-peer applications, such as file quote/unquote \"sharing\"", 
    "applications could be structured as Model-View-Controller?", 
    "So one of these statements is not true."
  ]
}