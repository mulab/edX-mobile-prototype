{
  "start": [
    1440, 
    3900, 
    7800, 
    11200, 
    14180, 
    18010, 
    20500, 
    23060, 
    26430, 
    29190, 
    33670, 
    37280, 
    38750, 
    42080, 
    43960, 
    48430, 
    49780, 
    53620, 
    57300, 
    60690, 
    62590, 
    64780, 
    66760, 
    68800, 
    70130, 
    72400, 
    75460, 
    77450, 
    79630, 
    81430, 
    84700, 
    87090, 
    90580, 
    94070, 
    96850, 
    101760, 
    103150, 
    104400, 
    106590, 
    109070, 
    112020, 
    113720, 
    114960, 
    117010, 
    120350, 
    125560, 
    128788, 
    131008, 
    132730, 
    134730, 
    138290, 
    141550, 
    145050, 
    148510, 
    151500, 
    153800, 
    156160, 
    160230, 
    163760, 
    166150, 
    169830, 
    173770, 
    177300, 
    180990, 
    182190, 
    185840, 
    189080, 
    190440, 
    192010, 
    194910, 
    197930, 
    201195, 
    202100, 
    203890, 
    207040, 
    210350, 
    211520, 
    214150, 
    216920, 
    217930, 
    219940, 
    220960, 
    224000, 
    224960, 
    227350, 
    230700, 
    233880, 
    236640, 
    238220, 
    240160, 
    243880, 
    246720, 
    248260, 
    251170, 
    253370, 
    254870, 
    257820, 
    259360, 
    263170, 
    264630, 
    268710, 
    273440, 
    277920, 
    280580, 
    281500, 
    284530, 
    285900, 
    288680, 
    292940, 
    294200, 
    297170, 
    299550, 
    300920, 
    305880, 
    309290, 
    311380, 
    314540, 
    317190, 
    319240, 
    321840, 
    324210, 
    327870, 
    331170, 
    332780, 
    338820, 
    342280, 
    343700, 
    348670, 
    350630, 
    353420, 
    358060, 
    362330, 
    363910, 
    366470, 
    368720, 
    373080, 
    376430, 
    380530, 
    384570, 
    386880
  ], 
  "end": [
    3900, 
    7800, 
    11200, 
    14180, 
    18010, 
    20500, 
    23060, 
    26430, 
    29190, 
    33670, 
    37280, 
    38750, 
    42080, 
    43960, 
    48430, 
    49780, 
    53620, 
    57300, 
    60690, 
    62590, 
    64780, 
    66760, 
    68800, 
    70130, 
    72400, 
    75460, 
    77450, 
    79630, 
    81430, 
    84700, 
    87090, 
    90580, 
    94070, 
    96850, 
    101760, 
    103150, 
    104400, 
    106590, 
    109070, 
    112020, 
    113720, 
    114960, 
    117010, 
    120350, 
    125560, 
    128789, 
    131009, 
    132730, 
    134730, 
    138290, 
    141550, 
    145050, 
    148510, 
    151500, 
    153800, 
    156160, 
    160230, 
    163760, 
    166150, 
    169830, 
    173770, 
    177300, 
    180990, 
    182190, 
    185840, 
    189080, 
    190440, 
    192010, 
    194910, 
    197930, 
    201195, 
    202100, 
    203890, 
    207040, 
    210350, 
    211520, 
    214150, 
    216920, 
    217930, 
    219940, 
    220960, 
    224000, 
    224960, 
    227350, 
    230700, 
    233880, 
    236640, 
    238220, 
    240160, 
    243880, 
    246720, 
    248260, 
    251170, 
    253370, 
    254870, 
    257820, 
    259360, 
    263170, 
    264630, 
    268710, 
    273440, 
    277920, 
    280580, 
    281500, 
    284530, 
    285900, 
    288680, 
    292940, 
    294200, 
    297170, 
    299550, 
    300920, 
    305880, 
    309290, 
    311380, 
    314540, 
    317190, 
    319240, 
    321840, 
    324210, 
    327870, 
    331170, 
    332780, 
    338820, 
    342280, 
    343700, 
    348670, 
    350630, 
    353420, 
    358060, 
    362330, 
    363910, 
    366470, 
    368720, 
    373080, 
    376430, 
    380530, 
    384570, 
    386880, 
    388130
  ], 
  "text": [
    "ARMANDO FOX: OK, it's-- whoa, really loud--", 
    "it's 4:10 and that makes it Berkeley time to start.", 
    "And today we're going to start talking about the single most important thing", 
    "that's affected my coding practices in the last three or four years.", 
    "One thing I always promise to students in this class is if I present a", 
    "technique or tool, it's because I personally used it.", 
    "If I have a strong opinion about it, I'll say so, and if I don't have an", 
    "opinion about it, I'll say draw your own conclusion.", 
    "But it's absolutely the case that since I started working with Rails,", 
    "since I took over this course and sort of reformatted it, the single most", 
    "important change to the way that I think about writing code is the way", 
    "that I think about doing tests.", 
    "So the goal of the next few sections is to try to instill this in to you", 
    "all as well.", 
    "So let's start with an overview of what's the right attitude to have", 
    "towards testing.", 
    "Here's two famous computer scientists speaking out on the topic.", 
    "One of them has to say, \"Debugging is twice as hard as writing the code.", 
    "So if you write the code as cleverly as possible, by definition, you're not", 
    "smart enough to debug it.\" You've already used up all of your", 
    "intelligence beans on the writing of the code.", 
    "You have none left over for debugging.", 
    "Anybody identify this very famous computer scientist?", 
    "He is a Turing Award winner.", 
    "Dave, no, does not get to guess.", 
    "He is the co-inventor of a very, very widely used language, possibly the", 
    "most widely used language.", 
    "Anybody?", 
    "Kernighan and/or Ritchie.", 
    "Well, if you mean Kernighan exclusive or Ritchie, then you would be correct.", 
    "It is Brian Kernighan.", 
    "We also have another Turing Award winner who has this to say, \"Testing", 
    "can always never demonstrate the something of errors in software, but", 
    "only their something.\" Anybody want to fill the blanks?", 
    "It can never demonstrate the absence of errors in software, only their--", 
    "and of course-- presence.", 
    "This is who, anybody?", 
    "A co-inventor of another famous language.", 
    "Take the first famous language and add a symbol to it.", 
    "Edsger Dijkstra, very good, co-inventor of C++--", 
    "oh, is that Stroustrup?", 
    "Oh, he's much earlier than that.", 
    "OK, co-inventor of another famous language, ALGOL.", 
    "We could probably edit that out.", 
    "Anyway, this is a less philosophical take.", 
    "Anybody ever been to the Google offices in Mountain View?", 
    "If you've had the pleasure to be there, you would see this in every", 
    "bathroom, among other places.", 
    "Debugging sucks, testing rocks.", 
    "This is the practical version of what these guys are saying.", 
    "Basically, your code is going to have problems, and you can either invest", 
    "time up front to minimize them as you go, or you can invest time after the", 
    "fact, often in a more frustrated manner, to fix them after.", 
    "So we're going to go for the latter approach.", 
    "Test-driven development is exactly that.", 
    "Rather than writing code and then testing it, which I've always found to", 
    "be a pain, it is writing tests first and then bringing the code in", 
    "afterward to help those tests pass.", 
    "And by the way, in case you need further evidence, but of course you", 
    "don't, this is from a couple of years ago that basically--", 
    "the testing infrastructure and process, or the lack of testing", 
    "infrastructure and process, are the major cause of software bugs.", 
    "So not design defects per se, but the inability to catch them early enough", 
    "in the process.", 
    "And in particular, the authors of the article know that completely automated", 
    "testing environments are still rare, with just 12 percent of development", 
    "organizations using them.", 
    "So this is what you guys are going to do.", 
    "The old days of testing are over.", 
    "Before, it was developers write some code, they throw it over the wall to", 
    "QA, there's a bunch of QA people who manually poke at it-- oh,", 
    "looks good to me--", 
    "this is not how we're going to do it.", 
    "We're using the much more modern version, where developers own the", 
    "responsibility for getting their own code to work, which means the testing", 
    "is your responsibility.", 
    "It's part of every iteration in the Agile cycle.", 
    "And the tools and the processes are way more automatic than", 
    "they used to be.", 
    "So yes, there are still QA groups.", 
    "There are still testing groups.", 
    "For example, at Google, there's a huge organization called", 
    "the testability group.", 
    "But their job is not the write tests.", 
    "It's to make sure that the infrastructure available for others to", 
    "write and run their tests is the best in the industry.", 
    "So the roles really have changed, and this is kind of the attitude that", 
    "we're going to go with.", 
    "So software quality--", 
    "what does it say-- it's not the idea that there's a specific group whose", 
    "job it is to make sure that before it goes out the door from development,", 
    "the bugs are out of it.", 
    "There's a process in which everybody has some responsibility for it.", 
    "Some have responsibility for the tools, others for", 
    "testing their own code.", 
    "So let's put this together with the big picture of what", 
    "you've already seen.", 
    "Last week, you got a very whirlwind introduction to", 
    "behavior-driven design.", 
    "And the basic idea there is that you develop these user stories and lo-fi", 
    "UI prototypes to describe features, and ultimately use tools like Cucumber", 
    "to make those stories ultimately into acceptance tests or integration tests.", 
    "TDD, which we're going to start talking about today, is the second", 
    "part of this.", 
    "When you develop a user story, remember that part of what you have to", 
    "develop is the step definitions.", 
    "It's the actual code that makes the steps run.", 
    "And TDD says that when you first write a step definition, it corresponds to", 
    "code that you don't have.", 
    "But the way you're going to write that code is to first write the unit and", 
    "functional test for it, which by definition will fail,", 
    "because there's no code.", 
    "And then you write the code sort of after the fact to pass those tests.", 
    "One of the reasons this works, which we'll see an example of today, is you", 
    "can write tests for the code you wish you had.", 
    "It really makes you think about how the not yet written code is going to", 
    "be used by the other parts of the application, and that ends up making", 
    "your app as a whole more testable.", 
    "So here's how the loop looks, tool-wise.", 
    "Cucumber, you got an introduction to last week.", 
    "RSpec, you're going to be introduced to starting today.", 
    "Cucumber, you already know, describes behavior at a high level using", 
    "features and scenarios.", 
    "And the idea is that you start with a step in Cucumber that's failing, and", 
    "in order to create the code to make that pass, we're going to recursively", 
    "apply the same idea.", 
    "So we're going to start by writing some unit-level tests that tell us", 
    "what the code would do if it existed.", 
    "Having written them, we then write the code to actually make it do what the", 
    "test says, and we keep doing that until our unit tests and the code", 
    "that's evolved from them are sufficient to make that one Cucumber", 
    "step go green.", 
    "And then recurse it, and then we go on to the next Cucumber step.", 
    "So the process is actually very much the same.", 
    "It's like a red green loop embedded inside of another red green loop.", 
    "So let's start stimulating brains.", 
    "Which of these are true regarding BDD and TDD, that requirements drive the", 
    "implementation, that they're used only within Agile development, and that", 
    "they embrace and deal with change?", 
    "Various choices are possible."
  ]
}