{
  "start": [
    860, 
    2450, 
    5740, 
    10290, 
    12870, 
    16470, 
    17270, 
    21540, 
    24770, 
    28850, 
    33670, 
    35650, 
    39090, 
    43730, 
    46740, 
    51560, 
    53560, 
    57350, 
    62200, 
    66070, 
    69240, 
    71290, 
    74800, 
    76910, 
    81890, 
    87160, 
    89190, 
    92370, 
    95790, 
    98820, 
    101590, 
    103870, 
    107300, 
    111580, 
    116150, 
    116930, 
    120600, 
    124360, 
    126630, 
    130080, 
    134480, 
    135590, 
    140810, 
    142770, 
    146890, 
    152850, 
    157730, 
    160370, 
    161350, 
    163880, 
    168970, 
    171340, 
    173520, 
    177400, 
    180310, 
    180830, 
    184670, 
    187670, 
    189450, 
    192410, 
    196030, 
    197210, 
    200320, 
    202880, 
    206350, 
    210450, 
    214800, 
    216490, 
    220250, 
    221990, 
    224760, 
    227240, 
    229970, 
    231580, 
    233730, 
    235970, 
    240900, 
    242590, 
    246790, 
    249280, 
    252490, 
    254480, 
    257329, 
    261540, 
    264770, 
    266420, 
    267540, 
    270680, 
    271850, 
    275330, 
    279550, 
    281190, 
    283740, 
    285740, 
    288950, 
    290250, 
    293020, 
    294900, 
    299760, 
    301320, 
    303530, 
    307130, 
    308280, 
    311830, 
    314090, 
    319220, 
    322070, 
    325310, 
    328330, 
    332110, 
    333440, 
    336680, 
    337780, 
    340020, 
    341260, 
    344660, 
    346290, 
    349800, 
    355180, 
    357630, 
    362430, 
    363970, 
    366180, 
    370060, 
    376300, 
    379200, 
    383960, 
    386000, 
    389660, 
    391600, 
    395030, 
    398640, 
    399370, 
    402330, 
    403560, 
    406460, 
    407790, 
    409820, 
    411110, 
    414950, 
    418330, 
    420890, 
    425500, 
    428210, 
    431050, 
    434840, 
    438130, 
    439300, 
    443060, 
    445690, 
    448050, 
    449990, 
    456070, 
    458000, 
    461730, 
    463990, 
    466290, 
    470700, 
    473000, 
    475350, 
    478790, 
    482690, 
    486530, 
    489130, 
    492130, 
    495610, 
    498470, 
    502680, 
    503630, 
    506250, 
    510230, 
    512909, 
    514049, 
    517070, 
    517970, 
    522610, 
    526010, 
    529990, 
    532420, 
    533930, 
    535480, 
    537930, 
    540980, 
    543150, 
    544440, 
    549330, 
    550080, 
    552940, 
    554860, 
    558280, 
    560030, 
    561290, 
    563390, 
    565290, 
    568960, 
    569890, 
    572280, 
    576100, 
    578890, 
    580080, 
    581650, 
    584730, 
    586440, 
    587950, 
    593340, 
    597170, 
    599780, 
    600910, 
    603830, 
    605420, 
    609870, 
    614030, 
    617380, 
    620260, 
    622510, 
    626170, 
    631680, 
    633830, 
    635650, 
    637630, 
    639340, 
    641280, 
    644360, 
    646260, 
    650960, 
    654880, 
    656970, 
    660360, 
    661110, 
    664600, 
    665640, 
    669400, 
    671650, 
    673550, 
    674880, 
    678910, 
    679670, 
    684470, 
    686380, 
    690390, 
    691510, 
    693110, 
    696020, 
    698210, 
    701670, 
    706810, 
    708020, 
    708950, 
    710340, 
    715500, 
    716670, 
    720080, 
    722890, 
    726070, 
    729870, 
    730720, 
    732510, 
    735950, 
    737150, 
    739840, 
    744430, 
    747050, 
    750460, 
    752610, 
    756010, 
    759480, 
    762310, 
    764520, 
    768860, 
    770700, 
    771900, 
    774620, 
    777400, 
    780990, 
    784110, 
    785750, 
    789210, 
    790740, 
    793900, 
    795810, 
    798300, 
    801670, 
    802840, 
    807000, 
    807660, 
    810990, 
    814330, 
    817480, 
    822680, 
    826320, 
    827910, 
    831920, 
    834280, 
    836040, 
    840680, 
    841340, 
    845680, 
    848590, 
    851460, 
    852080, 
    853840, 
    855130, 
    859700, 
    863230, 
    865490, 
    867170, 
    869770, 
    873700, 
    875170, 
    877710, 
    879150, 
    881870, 
    885650, 
    887160, 
    890000, 
    891440, 
    894990, 
    898890, 
    903610, 
    906360, 
    909930, 
    911220, 
    915190, 
    917990, 
    921890, 
    923670, 
    928110, 
    930710, 
    931910, 
    935500, 
    936630, 
    938430, 
    939560, 
    942610, 
    946360, 
    947100, 
    950860, 
    954080, 
    955540, 
    957240, 
    958460, 
    959590, 
    961130, 
    963320, 
    964590, 
    968300, 
    970890, 
    973900, 
    976510, 
    977830, 
    981960, 
    986290, 
    987700, 
    989780, 
    991170, 
    993370, 
    997100, 
    998540, 
    1002700, 
    1004860, 
    1009830, 
    1013850, 
    1015530, 
    1020490, 
    1023880, 
    1027348, 
    1030358, 
    1036730, 
    1039608, 
    1046118, 
    1047290, 
    1050330, 
    1053330, 
    1057280, 
    1060600, 
    1064020, 
    1065050, 
    1066920, 
    1070170, 
    1070760, 
    1075480, 
    1077670, 
    1080800, 
    1083000, 
    1084940, 
    1089030, 
    1089780, 
    1093710, 
    1094530, 
    1097650, 
    1099710, 
    1103900, 
    1105230, 
    1106620, 
    1108160, 
    1109980, 
    1115320, 
    1116100, 
    1117130, 
    1119730, 
    1123690, 
    1127950, 
    1131650, 
    1135970, 
    1138990, 
    1141140, 
    1142570, 
    1144210, 
    1148060, 
    1150430, 
    1153820, 
    1157180, 
    1160420, 
    1162220, 
    1165830, 
    1168750, 
    1171800, 
    1173600, 
    1176790, 
    1178960, 
    1181360, 
    1183010, 
    1184720, 
    1188770, 
    1192550, 
    1193055, 
    1195810, 
    1199430, 
    1201280, 
    1204280, 
    1206590, 
    1210420, 
    1212040, 
    1213220, 
    1215050, 
    1218040, 
    1221950, 
    1223060, 
    1224030, 
    1225770, 
    1229830, 
    1233740, 
    1235030, 
    1236220, 
    1239100, 
    1241720, 
    1248350, 
    1252280, 
    1253660, 
    1257610, 
    1259490, 
    1263740, 
    1266260, 
    1269310, 
    1271600, 
    1273260, 
    1277230, 
    1280890, 
    1283370, 
    1284460, 
    1285820, 
    1290050, 
    1294670, 
    1298150, 
    1301060, 
    1303020, 
    1305320, 
    1309540, 
    1311360, 
    1315800, 
    1317720, 
    1321460, 
    1325480, 
    1328330, 
    1333250, 
    1338150, 
    1342520, 
    1343170, 
    1345690, 
    1350120, 
    1353330, 
    1356380, 
    1361050, 
    1361970, 
    1364130, 
    1369850, 
    1373400, 
    1375620, 
    1379510, 
    1383040, 
    1386440, 
    1389180, 
    1392700, 
    1393910, 
    1395070, 
    1399050, 
    1400200, 
    1404480, 
    1405850, 
    1407890, 
    1412980, 
    1413670, 
    1420250, 
    1422720, 
    1423620, 
    1425380, 
    1427140, 
    1430410, 
    1434190, 
    1435740, 
    1437020, 
    1439110, 
    1440010, 
    1443090, 
    1444600, 
    1446480, 
    1449240, 
    1450670, 
    1452590, 
    1454670, 
    1457740, 
    1460570, 
    1464690, 
    1467210, 
    1470540, 
    1471930, 
    1476680, 
    1479780, 
    1482490, 
    1485890, 
    1489600, 
    1492250, 
    1495590, 
    1499220, 
    1502740, 
    1505720, 
    1508270, 
    1510760, 
    1515020, 
    1519750, 
    1522850, 
    1524820, 
    1528150, 
    1529770, 
    1532820, 
    1536050, 
    1536970, 
    1540720, 
    1543200, 
    1544200, 
    1547160, 
    1548450, 
    1552020, 
    1554980, 
    1558050, 
    1562000, 
    1565020, 
    1567270, 
    1571290, 
    1576420, 
    1578260, 
    1581920, 
    1584350, 
    1587870, 
    1592960, 
    1596290, 
    1597360, 
    1600690, 
    1604920, 
    1606000, 
    1608990, 
    1611610, 
    1614170, 
    1615700, 
    1618560, 
    1621810, 
    1624580, 
    1628020, 
    1631780, 
    1634670, 
    1637040, 
    1642440, 
    1644270, 
    1646480, 
    1648950, 
    1652180, 
    1656470, 
    1658280, 
    1662570, 
    1664100, 
    1668600, 
    1670210, 
    1672300, 
    1673050, 
    1676690, 
    1678310, 
    1681410, 
    1682720, 
    1685750, 
    1689920, 
    1691300, 
    1693350, 
    1695860, 
    1697370, 
    1699570, 
    1703930, 
    1708050, 
    1711760, 
    1714730, 
    1718960, 
    1723090, 
    1725810, 
    1729440, 
    1730430, 
    1734450, 
    1738640, 
    1741120, 
    1745270, 
    1748410, 
    1750110, 
    1753750, 
    1756400, 
    1758860, 
    1760750, 
    1762060, 
    1766040, 
    1767120, 
    1770620, 
    1773280, 
    1774640, 
    1776990, 
    1778420, 
    1782240, 
    1784540, 
    1789150, 
    1793830, 
    1796240, 
    1798880, 
    1802050, 
    1805790, 
    1809440, 
    1812050, 
    1815480, 
    1816600, 
    1820260, 
    1822990, 
    1826100, 
    1827680, 
    1832000, 
    1833680, 
    1835910, 
    1839620, 
    1843830, 
    1847710, 
    1851690, 
    1852960, 
    1854820, 
    1856370, 
    1861040, 
    1864920, 
    1868000, 
    1873130, 
    1874840, 
    1877330, 
    1880710, 
    1883350, 
    1884540, 
    1889020, 
    1891120, 
    1894140, 
    1895320, 
    1898930, 
    1900900, 
    1905020, 
    1906060, 
    1909840, 
    1912430, 
    1914320
  ], 
  "end": [
    2450, 
    5740, 
    10290, 
    12870, 
    16470, 
    17270, 
    21540, 
    24770, 
    28850, 
    33670, 
    35650, 
    39090, 
    43730, 
    46740, 
    51560, 
    53560, 
    57350, 
    62200, 
    66070, 
    69240, 
    71290, 
    74800, 
    76910, 
    81890, 
    87160, 
    89190, 
    92370, 
    95790, 
    98820, 
    101590, 
    103870, 
    107300, 
    111580, 
    116150, 
    116930, 
    120600, 
    124360, 
    126630, 
    130080, 
    134480, 
    135590, 
    140810, 
    142770, 
    146890, 
    149890, 
    157730, 
    160370, 
    161350, 
    163880, 
    168970, 
    171340, 
    173520, 
    177400, 
    180310, 
    180830, 
    184670, 
    187670, 
    189450, 
    192410, 
    196030, 
    197210, 
    200320, 
    202880, 
    206350, 
    210450, 
    214800, 
    216490, 
    220250, 
    221990, 
    224760, 
    227240, 
    229970, 
    231580, 
    233730, 
    235970, 
    240900, 
    242590, 
    246790, 
    249280, 
    252490, 
    254480, 
    257329, 
    261540, 
    264770, 
    266420, 
    267540, 
    270680, 
    271850, 
    275330, 
    279550, 
    281190, 
    283740, 
    285740, 
    288950, 
    290250, 
    293020, 
    294900, 
    299760, 
    301320, 
    303530, 
    307130, 
    308280, 
    311830, 
    314090, 
    319220, 
    322070, 
    325310, 
    328330, 
    332110, 
    333440, 
    336680, 
    337780, 
    340020, 
    341260, 
    344660, 
    346290, 
    349800, 
    355180, 
    357630, 
    362430, 
    363970, 
    366180, 
    370060, 
    376300, 
    379200, 
    383960, 
    386000, 
    389660, 
    391600, 
    395030, 
    396280, 
    399370, 
    402330, 
    403560, 
    406460, 
    407790, 
    409820, 
    411110, 
    414950, 
    418330, 
    420890, 
    425500, 
    428210, 
    431050, 
    434840, 
    438130, 
    439300, 
    443060, 
    445690, 
    448050, 
    449990, 
    456070, 
    458000, 
    461730, 
    463990, 
    466290, 
    470700, 
    473000, 
    475350, 
    478790, 
    482690, 
    486530, 
    489130, 
    492130, 
    495610, 
    498470, 
    502680, 
    503630, 
    506250, 
    510230, 
    512909, 
    514049, 
    517070, 
    517970, 
    522610, 
    526010, 
    529990, 
    532420, 
    533930, 
    535480, 
    537930, 
    540980, 
    543150, 
    544440, 
    545690, 
    550080, 
    552940, 
    554860, 
    558280, 
    560030, 
    561290, 
    563390, 
    565290, 
    568960, 
    569890, 
    572280, 
    576100, 
    578890, 
    580080, 
    581650, 
    584730, 
    586440, 
    587950, 
    593340, 
    597170, 
    599780, 
    600910, 
    603830, 
    605420, 
    609870, 
    614030, 
    617380, 
    620260, 
    622510, 
    626170, 
    631680, 
    633830, 
    635650, 
    637630, 
    639340, 
    641280, 
    644360, 
    646260, 
    650960, 
    654880, 
    656970, 
    660360, 
    661110, 
    664600, 
    665640, 
    669400, 
    671650, 
    673550, 
    674880, 
    678910, 
    679670, 
    684470, 
    686380, 
    690390, 
    691510, 
    693110, 
    696020, 
    698210, 
    701670, 
    706810, 
    708020, 
    708950, 
    710340, 
    715500, 
    716670, 
    720080, 
    722890, 
    726070, 
    729870, 
    730720, 
    732510, 
    735950, 
    737150, 
    739840, 
    744430, 
    747050, 
    750460, 
    752610, 
    756010, 
    759480, 
    762310, 
    764520, 
    768860, 
    770700, 
    771900, 
    774620, 
    777400, 
    780990, 
    784110, 
    785750, 
    789210, 
    790740, 
    793900, 
    795810, 
    798300, 
    801670, 
    802840, 
    807000, 
    807660, 
    810990, 
    814330, 
    817480, 
    822680, 
    826320, 
    827910, 
    831920, 
    834280, 
    836040, 
    840680, 
    841340, 
    845680, 
    848590, 
    851460, 
    852080, 
    853840, 
    855130, 
    859700, 
    863230, 
    865490, 
    867170, 
    869770, 
    873700, 
    875170, 
    877710, 
    879150, 
    881870, 
    885650, 
    887160, 
    890000, 
    891440, 
    894990, 
    898890, 
    903610, 
    906360, 
    909930, 
    911220, 
    915190, 
    917990, 
    921890, 
    923670, 
    928110, 
    930710, 
    931910, 
    935500, 
    936630, 
    938430, 
    939560, 
    942610, 
    946360, 
    947100, 
    950860, 
    954080, 
    955540, 
    957240, 
    958460, 
    959590, 
    961130, 
    963320, 
    964590, 
    968300, 
    970890, 
    973900, 
    976510, 
    977830, 
    981960, 
    986290, 
    987700, 
    989780, 
    991170, 
    993370, 
    997100, 
    998540, 
    1002700, 
    1004860, 
    1009830, 
    1013850, 
    1015530, 
    1020490, 
    1023880, 
    1027349, 
    1030359, 
    1036730, 
    1039609, 
    1046119, 
    1047290, 
    1050330, 
    1053330, 
    1057280, 
    1060600, 
    1064020, 
    1065050, 
    1066920, 
    1070170, 
    1070760, 
    1075480, 
    1077670, 
    1080800, 
    1083000, 
    1084940, 
    1089030, 
    1089780, 
    1093710, 
    1094530, 
    1097650, 
    1099710, 
    1103900, 
    1105230, 
    1106620, 
    1108160, 
    1109980, 
    1115320, 
    1116100, 
    1117130, 
    1119730, 
    1123690, 
    1127950, 
    1131650, 
    1135970, 
    1138990, 
    1141140, 
    1142570, 
    1144210, 
    1148060, 
    1150430, 
    1153820, 
    1157180, 
    1160420, 
    1162220, 
    1165830, 
    1168750, 
    1171800, 
    1173600, 
    1176790, 
    1178960, 
    1181360, 
    1183010, 
    1184720, 
    1188770, 
    1192550, 
    1193055, 
    1195810, 
    1199430, 
    1201280, 
    1204280, 
    1206590, 
    1210420, 
    1212040, 
    1213220, 
    1215050, 
    1218040, 
    1221950, 
    1223060, 
    1224030, 
    1225770, 
    1229830, 
    1233740, 
    1235030, 
    1236220, 
    1239100, 
    1241720, 
    1248350, 
    1252280, 
    1253660, 
    1257610, 
    1259490, 
    1263740, 
    1266260, 
    1269310, 
    1271600, 
    1273260, 
    1277230, 
    1280890, 
    1283370, 
    1284460, 
    1285820, 
    1290050, 
    1294670, 
    1298150, 
    1301060, 
    1303020, 
    1305320, 
    1309540, 
    1311360, 
    1315800, 
    1317720, 
    1321460, 
    1325480, 
    1328330, 
    1333250, 
    1338150, 
    1342520, 
    1343170, 
    1345690, 
    1350120, 
    1353330, 
    1356380, 
    1361050, 
    1361970, 
    1364130, 
    1369850, 
    1373400, 
    1375620, 
    1379510, 
    1383040, 
    1386440, 
    1389180, 
    1392700, 
    1393910, 
    1395070, 
    1399050, 
    1400200, 
    1404480, 
    1405850, 
    1407890, 
    1412980, 
    1413670, 
    1420250, 
    1422720, 
    1423620, 
    1425380, 
    1427140, 
    1430410, 
    1434190, 
    1435740, 
    1437020, 
    1439110, 
    1440010, 
    1443090, 
    1444600, 
    1446480, 
    1449240, 
    1450670, 
    1452590, 
    1454670, 
    1457740, 
    1460570, 
    1464690, 
    1467210, 
    1470540, 
    1471930, 
    1476680, 
    1479780, 
    1482490, 
    1485890, 
    1489600, 
    1492250, 
    1495590, 
    1499220, 
    1502740, 
    1505720, 
    1508270, 
    1510760, 
    1515020, 
    1519750, 
    1522850, 
    1524820, 
    1528150, 
    1529770, 
    1532820, 
    1536050, 
    1536970, 
    1540720, 
    1543200, 
    1544200, 
    1547160, 
    1548450, 
    1552020, 
    1554980, 
    1558050, 
    1562000, 
    1565020, 
    1567270, 
    1571290, 
    1576420, 
    1578260, 
    1581920, 
    1584350, 
    1587870, 
    1592960, 
    1596290, 
    1597360, 
    1600690, 
    1604920, 
    1606000, 
    1608990, 
    1611610, 
    1614170, 
    1615700, 
    1618560, 
    1621810, 
    1624580, 
    1628020, 
    1631780, 
    1634670, 
    1637040, 
    1642440, 
    1644270, 
    1646480, 
    1648950, 
    1652180, 
    1656470, 
    1658280, 
    1662570, 
    1664100, 
    1668600, 
    1670210, 
    1672300, 
    1673050, 
    1676690, 
    1678310, 
    1681410, 
    1682720, 
    1685750, 
    1689920, 
    1691300, 
    1693350, 
    1695860, 
    1697370, 
    1699570, 
    1703930, 
    1708050, 
    1711760, 
    1714730, 
    1718960, 
    1723090, 
    1725810, 
    1729440, 
    1730430, 
    1734450, 
    1738640, 
    1741120, 
    1745270, 
    1748410, 
    1750110, 
    1753750, 
    1756400, 
    1758860, 
    1760750, 
    1762060, 
    1766040, 
    1767120, 
    1770620, 
    1773280, 
    1774640, 
    1776990, 
    1778420, 
    1782240, 
    1784540, 
    1789150, 
    1793830, 
    1796240, 
    1798880, 
    1802050, 
    1805790, 
    1809440, 
    1812050, 
    1815480, 
    1816600, 
    1820260, 
    1822990, 
    1826100, 
    1827680, 
    1832000, 
    1833680, 
    1835910, 
    1839620, 
    1843830, 
    1847710, 
    1851690, 
    1852960, 
    1854820, 
    1856370, 
    1861040, 
    1864920, 
    1868000, 
    1873130, 
    1874840, 
    1877330, 
    1880710, 
    1883350, 
    1884540, 
    1889020, 
    1891120, 
    1894140, 
    1895320, 
    1898930, 
    1900900, 
    1905020, 
    1906060, 
    1909840, 
    1912430, 
    1914320, 
    1916280
  ], 
  "text": [
    "ARMANDO FOX: So let's continue our discussion of JavaScript.", 
    "What we did last time is we did a walk-through pretty much touching all", 
    "of the moving parts of what happens on the client side when JavaScript gets", 
    "involved in rendering a web page.", 
    "And just as a refresher, here is kind of a walk-through of", 
    "the things we did.", 
    "We showed how you can attach a JavaScript function, called a handler,", 
    "to be triggered, when certain user interface events occur.", 
    "We used a simple example of a check box being checked and unchecked.", 
    "Part of that was realizing that there's really two different kinds of", 
    "events that one can trigger on.", 
    "Some of them are what you would think of as raw UI events.", 
    "Did the user click the mouse on this controller, or in this HTML element?", 
    "And some of them are pseudo events, like the one that we used.", 
    "We were interested in whether the check box was changed state from being", 
    "checked to unchecked, or vice versa.", 
    "So the act of changing state is actually a logical event, and the", 
    "browser provides that for us as one of the events we can listen to, rather", 
    "than having to track the low level UI events ourselves.", 
    "We showed that, once that function is called, we showed how to use", 
    "JavaScript.", 
    "We used and, specifically, we showed how to use jQuery's secret powers", 
    "wrapped around DOM elements.", 
    "To be able to navigate the DOM element corresponding to the movies table, we", 
    "use some kind of hacky code to pick out movies that were rated G or PG,", 
    "and show only those movies.", 
    "In other words, hide all the other rows, again using jQuery.", 
    "And we pointed out, that it would've been nice in that case to, maybe, get", 
    "a little help, a little love from the server, because, certainly, when the", 
    "server is generating that table, it knows, which", 
    "movies are OK for children.", 
    "And wouldn't it have been easier, for example, if the server could attach a", 
    "CSS class to the appropriate table rows, and then we wouldn't have to", 
    "have our JavaScript code scrape and parse the page content, which violates", 
    "a bunch of things, right?", 
    "It is making JavaScript code that is supposed to be there to help the user", 
    "interface, but now is intimately aware of the details of how the information", 
    "is being presented, and what it means.", 
    "If we had pre-tagged the appropriate rows with the CSS class, we could have", 
    "just done find elements by class using jQuery's secret powers, and then we", 
    "could have hidden those rows.", 
    "So we're going to finish that loop today by going through a simple", 
    "example, but that actually goes all the way to the server.", 
    "And this really puts together all of the pieces, including the asynchronous", 
    "part in AJAX, asynchronous JavaScript in XML.", 
    "So, the big thing that made AJAX possible was in about 1998,", 
    "functionality was added to the then-current", 
    "version of Internet Explorer.", 
    "Think it was I.E. 5.5.", 
    "The JSAPI exposed a new method to JavaScript, called XmlHttpRequest.", 
    "And, because that's a mouthful, you'll often hear people", 
    "abbreviate it as XHR .", 
    "The idea was that JavaScript could call this function, and it would", 
    "generate an HTTP request to the server, but it would do so in the", 
    "background.", 
    "In other words, it wouldn't wait for the server's response, and it wouldn't", 
    "force the page to immediately start being redrawn.", 
    "It would just fire and forget.", 
    "And the idea is that when the server eventually responds, from the server's", 
    "point of view, it looks just like a plain old HTTP request of the kind", 
    "that we've been using.", 
    "But, when the server responds, you would designate a JavaScript function", 
    "that would pick up that response, and do something with it.", 
    "So it's a normal HTTP request, except for the presence of an additional", 
    "header that the browser puts in to identify that this HTTP request came", 
    "from an AJAX from a JavaScript function, rather than being issued", 
    "from the top level of the browser.", 
    "And that allows the server side to tell the difference between an AJAX", 
    "and a non-AJAX HTTP request.", 
    "The good news is that, from the Rails point of view, you basically already", 
    "know everything you need to know to handle this.", 
    "The only extra thing you need to learn is not on the Rails side at all, it's", 
    "actually on the JavaScript side.", 
    "And because of jQuery, it's pretty easy to learn.", 
    "So that's what we're going to do in this next section.", 
    "So, just like a regular HTTP request, you have to set up a route for the", 
    "AJAX requests that are going to come in.", 
    "If the AJAX requests are already using existing actions, sometimes you can", 
    "actually write the same controller action.", 
    "And the only difference in the action is what it renders, right?", 
    "And we'll see, that there's a couple of different things that you can", 
    "render in response to an AJAX request.", 
    "In particular, depending on how your client-side JavaScript is structured,", 
    "one thing you could do is you could generate an entire view, but without", 
    "the application layout around it, right?", 
    "Why would you want to do that?", 
    "Because remember that we're working with the browser page that's already", 
    "being displayed.", 
    "So you don't, in general, want to return an entire new browser page,", 
    "because you don't want a page that has HTML element framing", 
    "the entire page content.", 
    "What you're probably going to do is you're going to be replacing little", 
    "bits and pieces of the page in place.", 
    "So, render layout false is one way of telling Rails, go ahead and use an", 
    "existing template.", 
    "But just render the template by itself.", 
    "Don't put the application layout around it.", 
    "And because that's where the HTML tags live that define the document type,", 
    "layout false would omit that part.", 
    "So that's one possibility.", 
    "Another possibility that's probably more commonly used in Rails is you", 
    "render a partial.", 
    "Remember, that partials are like a chunk of the view, that you can", 
    "incorporate into a lot of different views.", 
    "Another great handy use of partials is if you know what kind of element on", 
    "the page you want to replace as a result of your AJAX call.", 
    "You can render a partial that is exactly styled to match that element.", 
    "So, for example, if there's a particular div on my page.", 
    "And what I'm going to do is replace that div with some new content based", 
    "on the server's response.", 
    "I can just set up a partial that includes exactly that div and whatever", 
    "would be inside it.", 
    "And I could return that for my controller action.", 
    "I can render JSON.", 
    "So last time we talked about how in JavaScript the basic", 
    "object type is a hash.", 
    "And there's this very simple notation, called JSON, JavaScript Object", 
    "Notation, that, essentially, lets you serialize JavaScript hashes.", 
    "One of the other things that you can return from a controller method, is", 
    "you can return the JSON-ofied representation of an active record", 
    "model, or of any other object.", 
    "So what happens when you try to do this?", 
    "What will happen is the rendering engine will try to find and call a", 
    "method to JSON on whatever the value of the JSON target is.", 
    "There is built-in functionality in active record that does something", 
    "relatively sane in terms of serializing the attributes of the", 
    "object and its values into JSON format.", 
    "But, if you just override to JSON as an instance method in any of your", 
    "classes, then what's what will get called instead.", 
    "In fact, it's probably educational if we take a quick look at what one of", 
    "these would look like.", 
    "There we go.", 
    "In fact, that's a little better.", 
    "Everybody able to read that?", 
    "So this is the default to JSON behavior that active", 
    "record provides, right?", 
    "It's pretty much what you expect.", 
    "It just tries to take the attributes.", 
    "And since most of the attributes have values that are based on only a small", 
    "subset of types of database columns, like dates, and strings, and numbers,", 
    "it's pretty easy to serialize those into JavaScript.", 
    "In fact, you can also serialize a collection of stuff.", 
    "And then you just get an array of hashes, right?", 
    "So, this is one of the default things that you can do.", 
    "And the reason you would do this, is you have an application that actually", 
    "is going to receive data structures from the server, and use those to make", 
    "specific changes to the page.", 
    "So instead of the server handing you pre-digested content, the server's", 
    "going to hand you some data, and you're going to modify various other", 
    "things on the page based on that.", 
    "You could also do the same thing with XML.", 
    "In fact, originally, the acronym AJAX comes from using XML as what the", 
    "server would return.", 
    "And over time what's happened is increasingly the return value has been", 
    "sent in JSON format rather than XML.", 
    "They're really pretty much duals of each other.", 
    "But the nice thing about JSON is that, if you ingest it in JavaScript, the", 
    "object is already in the right format, right?", 
    "Whereas, XML you'd have to somehow parse.", 
    "So, while it's not uncommon for server-to-server communications to use", 
    "XML as an interchange format, when you've got a web page in JavaScript,", 
    "and you're augmenting it with AJAX interactions to the server, it's more", 
    "common to return JSON format objects for that.", 
    "And in rare cases you can just render a string.", 
    "So, for example, if your JavaScript code and the client is just expecting", 
    "a string of text, and it's just going to put that string inside of an", 
    "existing tag, like a heading, or a bolded paragraph, you could also just", 
    "render raw text.", 
    "Although, that's less commonly used.", 
    "It's deprecated, because it's, essentially, mixing up the", 
    "responsibility for what's being rendered versus how", 
    "it's getting formatted.", 
    "And the last one, which is, maybe, a little counter-intuitive, is you could", 
    "render nothing.", 
    "Does anybody care, that originally in the beginning of the class, I said,", 
    "you always have to have a response to go with every HTTP request.", 
    "And yet here I'm saying that AJAX requests, even though they look just", 
    "like regular HTTP requests, I can render nothing.", 
    "Anybody want to call me on that?", 
    "I'm not wrong, by the way.", 
    "But I'm just asking, why don't you object?", 
    "I need to hear either a violent objection, or somebody saying why", 
    "there's actually no problem with the statement.", 
    "Anybody?", 
    "Sir?", 
    "Excellent.", 
    "So, the point made was render nothing.", 
    "Doesn't mean that you're not going to respond.", 
    "It means that you'll send the HTTP headers for the response, but you just", 
    "won't send any content along with it.", 
    "And that's perfectly legal, right?", 
    "Because it's HTTP that wants the answer.", 
    "It's not the content that's important.", 
    "The HTTP response, including the headers, is enough to tell the browser", 
    "whether it worked.", 
    "So, for example, you might be recording the fact that the user", 
    "clicked a button, or did some interaction with the page.", 
    "The only thing you really need to know is whether the server got the message", 
    "and did something successfully.", 
    "But you don't need to render anything.", 
    "You're not expecting a piece of data that you need to render in return.", 
    "So that's when you use render nothing.", 
    "Very nicely put.", 
    "So, in the old days, before the secret powers of jQuery, the way that you", 
    "would have to handle the AJAX cycle makes very obvious the idea that", 
    "JavaScript has this asynchronous model we talked about, which is that the", 
    "language is single threaded.", 
    "So you can't do anything that would cause blocking, because that would", 
    "freeze the user interface.", 
    "The idea is that you would create a new XHR object.", 
    "You would cause the request to be issued to the server.", 
    "And then you would have to wait for something to happen.", 
    "You would pass it a function that's going to get called any time that", 
    "request object undergoes a state change.", 
    "And there's a bunch of different states that it could be in, so you", 
    "could say that the server was successfully sent the response.", 
    "The server has replied with an initial header.", 
    "The server has sent the first byte of content.", 
    "The server has sent the last byte of content.", 
    "There's a number of different stages you could go through.", 
    "At each stage you could check for an error.", 
    "You could throw an appropriate exception, or display an error message", 
    "if something bad happened.", 
    "And, assuming everything went well, you would eventually get to a loaded", 
    "state, where you can now inspect the HTTP status of the response and you", 
    "can inspect whatever the content was.", 
    "And whatever the content was, that will be up to you to figure out how to", 
    "interpret it, right?", 
    "Presumably, you know if the server is going to return JSON or it's going to", 
    "return HTML mark-up.", 
    "So you would have to know what to expect to do with it.", 
    "Using jQuery this gets a whole lot shorter.", 
    "So this is a jQuery way to do the same thing.", 
    "There is our friend dollar sign again.", 
    "Now, alias to the top little jQuery object that has an AJAX function", 
    "defined on it.", 
    "And, basically, you just pass the AJAX function a hash, whose attributes tell", 
    "it what request you want to do.", 
    "A few of them are required or very commonly appear, so the type is just", 
    "the HTTP verb.", 
    "Remember, that's get, put, post, delete.", 
    "And, by the way, now we're no longer constrained by the fact that the", 
    "browser's UI can only do get and post, right?", 
    "We can actually create full-on HTTP put, delete--", 
    "we can use all the HTTP verbs when we're building the request ourselves.", 
    "What the URL is?", 
    "Time out.", 
    "It's expressed in milliseconds.", 
    "So if the server hasn't responded by that many milliseconds, then you can", 
    "raise an exception.", 
    "In the event that success happens, you pass a function that is going to", 
    "receive what comes back from the server.", 
    "In the event that failure happens, you can specify a function that will", 
    "receive enough information to do something with the error, ideally", 
    "display it to the user.", 
    "Otherwise, you'll silently fail.", 
    "And if you look at the jQuery documentation pages, there's like 15", 
    "other options available.", 
    "But these are probably the most essential ones, right?", 
    "The HTTP method, the URL, how long to wait for an answer, what function to", 
    "call if success, and what function to call if failure.", 
    "So, let's actually do an example of this, and we're going to walk through", 
    "it, like we did with the other code.", 
    "OK, so that's what we did last time.", 
    "What we're going to do this time is walk through this functionality.", 
    "So, when I click on a movie link instead of going to a brand new page,", 
    "I have this handsome little pop up.", 
    "Which was, apparently, its graphic design was done by graffiti vandals.", 
    "You can see my lack of color skills coming through.", 
    "But that's OK.", 
    "The point is to show how this kind of example works, right?", 
    "So, now what's happening in this case, right?", 
    "Before, when we did our simple filtering example, remember we said,", 
    "that once the page is loaded, this functionality doesn't require any", 
    "further communication with the server.", 
    "But here each time we open a new movie, that's a request to the server", 
    "to get the movie's description, right?", 
    "You can take my word for that I have not pre-loaded all of the movie", 
    "descriptions and just have them hidden.", 
    "Although, you might think of doing this that way.", 
    "So let's walk through the code for this, kind of in the same spirit as we", 
    "did last time.", 
    "So, the nice thing about getting movie information is I've already got a", 
    "method that does it.", 
    "If you look in the lower right corner, like down here, in the address bar.", 
    "You can see that when I hover over one of these, this is just the regular", 
    "link that would have been followed, if I didn't have AJAX in place.", 
    "But really, we could follow the same link, and we could just display the", 
    "partial, that we've already got set up for the movie description.", 
    "And that's what I'm going to do in this simple example.", 
    "So, of the different things that you could render, we're going to be", 
    "looking at rendering a partial.", 
    "Let's go get the--", 
    "So, here's the function that is actually called when I bind each of", 
    "those links.", 
    "And, just as we did yesterday, let's leave until the end the question of", 
    "how it is that we associate this function with clicking on one of those", 
    "links, and why that overrides the default behavior of", 
    "clicking on a link.", 
    "Which would have been to send the request to the server.", 
    "So, what's this function going to do?", 
    "It's immediately going to construct and initiate an AJAX request.", 
    "It's going to be a get and the URL--", 
    "remember, we talked about wrapping this.", 
    "What is this in a handler?", 
    "It's whichever element received the event, right?", 
    "So we're going to do is, since we're binding the event to an anchor", 
    "element, an A element.", 
    "Let's take a look at the source for this, right?", 
    "So what are these look like?", 
    "This is what the A elements look like on our page, right?", 
    "So what we're going to do is we are going to override the click", 
    "behavior on a link.", 
    "So that instead of just following the link as the browser normally would,", 
    "it's going to call our function.", 
    "And the nice thing about doing that is, because the DOM element", 
    "representing this link is the thing that receives the call back in the", 
    "context of our callback function, this refers to the entire DOM element.", 
    "And remember from our previous example, that one thing we can do with", 
    "the jQuery enhanced secret powers of a DOM element, is we can ask for an", 
    "attribute, right?", 
    "Conveniently enough, we already have the URL we need, because the server", 
    "generated it as part of the regular RESTful routes.", 
    "Now, if we didn't have this case, right, we could encode the URL as a", 
    "separate field.", 
    "We could hardwire the URL, if we knew what controller method we wanted.", 
    "But the idea is, as long as we can somehow generate the", 
    "appropriate URL for this.", 
    "In our case, we're going to reuse the same behavior that we already have in", 
    "our controller.", 
    "And the only thing we're going to do is we're going to change our", 
    "controller method.", 
    "So, remember, I said, one of the tricks you can often do when you're", 
    "enhancing an app with AJAX, and remember that this idea of enhancing", 
    "is important, right?", 
    "We don't want to have it be the case that, just because we're using AJAX to", 
    "add this feature, all of a sudden browsers without JavaScript will be", 
    "unable to get to this feature.", 
    "So, that's why in this example, we're just going to", 
    "override an existing behavior.", 
    "If you've got AJAX, great.", 
    "You get the flashy new behavior.", 
    "If you don't have it, then you still get the old behavior,", 
    "and it's still usable.", 
    "So, in this case, because the behavior is essentially the same, we're just", 
    "going to make a small change in our existing controller method, right?", 
    "We're not going to set up a new controller action just for the AJAX", 
    "request, because there's really nothing that it would do differently", 
    "than what we're doing now.", 
    "What we were doing before for the regular non-AJAX version, is we'd look", 
    "up the movie, and we would just fall through and render the show template", 
    "with the movie set up.", 
    "In this case, we're just going to intercept it.", 
    "If It's an XHR--", 
    "and this is a what is request?", 
    "Request is a controller method that gives you access to the Rails object", 
    "representing the request.", 
    "And you can ask, whether the request is, or is not coming from an XHR.", 
    "In other words, whether it's AJAXy, right?", 
    "Request that XHR will be true exactly when the controller action was called", 
    "because of an AJAX interaction, instead of because of a regular,", 
    "non-AJAXy round trip.", 
    "So if it's an XHR request, we're going to render the partial.", 
    "And we need to make sure that in the partial--", 
    "so here's our partial, if you try to blow the dust off of this knowledge", 
    "from way back when you first started working with Rotten Potatoes.", 
    "Remember, that when we rendered a collection of partials originally, one", 
    "of the nice convention over configuration behaviors about partials", 
    "is that it will automatically set a local variable based on the collection", 
    "that we're traversing.", 
    "But now that we're not rendering it as part of that collection, now we're", 
    "just rendering it all by itself in response to an AJAX action.", 
    "So, we actually have to set up that local variable explicitly, right?", 
    "Otherwise, if we just rendered a partial and we didn't set up with this", 
    "locals array, then movie would be undefined in the partial, and bad", 
    "things would happen.", 
    "Does everybody understand why we have to set that up?", 
    "Originally, the way we're using the partial was to render the elements of", 
    "a collection.", 
    "And when you use render partial in that way, the partial's local variable", 
    "that matches its name is set up for you automatically.", 
    "It gets set to each element of that collection in turn, but once we're", 
    "using the partial in a different context, we don't get that out of", 
    "behavior, we got to do it ourselves, OK?", 
    "So, but the thing to notice here is we've really only changed one line in", 
    "the controller method, right?", 
    "We've added a line to say, if we're rendering this as the result of an XHR", 
    "request,", 
    "instead of rendering the full template as we would normally do, we'll just", 
    "render the partial and return, right?", 
    "In other words, return means don't do any further rendering.", 
    "OK, so back to JavaScript.", 
    "How did we get to that point?", 
    "We're constructing our AJAX request.", 
    "We've got the HTTP method.", 
    "We've got the URL, which is just the HREF attribute of our whatever link", 
    "the user clicked on.", 
    "So we got that.", 
    "We're going to arbitrarily allow five second timeout.", 
    "And, if success happens, we're going to call show movie info-- which we're", 
    "going to dissect in just a moment --if an error happens, right now we're just", 
    "going to cheese out and return to pop-up a JavaScript that says error.", 
    "But in fact, when you look up the API documentation for how you should", 
    "define the success and error functions, they've actually passed a", 
    "bunch of information that they can use to give more", 
    "descriptions about the error.", 
    "Now, this is one of the pitfalls of JavaScript.", 
    "When the error happens on the browser side, you don't always have a lot of", 
    "information to display that would be very helpful to the user.", 
    "But whatever information you do have, gets passed to you, you get the", 
    "original object that you created, the HTTP status--", 
    "remember that's a three-digit number, that tells you kind of what category", 
    "of things might have gone wrong.", 
    "And a JavaScript exception object that contains at, least, some information", 
    "that you can use, if you want to frighten the user away.", 
    "OK, and, by the way, notice, remember, functions are first", 
    "class objects, right?", 
    "For our success function, we just gave the name of the function.", 
    "And in a minute we're going to see how this function works.", 
    "For our error function, we actually just defined an", 
    "anonymous function in place.", 
    "And all it does is put up this alert.", 
    "In fact, we should be able to verify that it does what we want, because if", 
    "I temporarily suspend the application, and now I go back and try to click on", 
    "one of these.", 
    "Let's see if I--", 
    "OK, so just so you believe me, JavaScript works.", 
    "Let's make sure we understood how that happened.", 
    "I sent off the URL, fire and forget.", 
    "I said the time out should be five seconds.", 
    "And when an error happens, this is the simple function I provided, that all", 
    "it does is put up this uninformative alert, right?", 
    "We could have done a lot more.", 
    "But it's to illustrate the mechanism.", 
    "Now, let us bring the app back up.", 
    "And by the way, the request sat in the network queue, it got delayed, and", 
    "then it got back to the browser.", 
    "And what happened?", 
    "It was dropped on the floor, right?", 
    "After the timeout expires, you've had your shot that XHR is now over.", 
    "And if you want to retry, you have to do the AJAX call all over again.", 
    "OK, back to the code.", 
    "So what about our success function?", 
    "That was a failure function, what does the success function do?", 
    "Well, in our case, I sort of took the easy way out.", 
    "I just created a really simple element that was a quarter as tall and half as", 
    "wide as the screen, and I floated it in the middle of the screen.", 
    "How did I float it in the middle of the screen?", 
    "Well, I probably could have put this in a separate CSS file, but, remember,", 
    "one of the things we said is you could create--", 
    "or one of the things that you can do on a jQuery secret powers is you can", 
    "modify the CSS properties of an element.", 
    "Well, if you look at the CSS properties of my movie info elements,", 
    "let's find--", 
    "So, there's my movie info element.", 
    "It has an absolute position, which means that no matter where else the", 
    "page moves, it's going to always display in the same place.", 
    "Why doesn't it actually display?", 
    "There we go.", 
    "So why couldn't I find--", 
    "Remember, the trick we did last time, we said one way to make sure you don't", 
    "screw up the experience for people with no JavaScript, is don't put", 
    "JavaScript sensitive elements into your templates directly.", 
    "Instead, set them up in the JavaScript initialization, so that, if the person", 
    "doesn't have JavaScript, they won't appear at all.", 
    "That's the sneaky trick we did this time, OK?", 
    "So, part of our setup function creates a div called movie info and", 
    "immediately hides it, right?", 
    "It gives it the CSS display attribute of hidden, and it appends it to the", 
    "end of the HTML body.", 
    "So, if we had no JavaScript, this wouldn't appear at all.", 
    "If we have JavaScript then, once the page is fully loaded, this new movie", 
    "info element gets created, gets immediately hidden, so the user", 
    "doesn't see it, and it gets stuck in right at the end of the HTML body so", 
    "that, when our success function is called, all we have to do is give this", 
    "thing a position, set the inner HTML to whatever came back from the server,", 
    "and show it.", 
    "Look at how many things jQuery's buying us here by the way, OK?", 
    "It's buying us the secret powers of being able to just set the CSS of an", 
    "element and to set the internal HTML an element.", 
    "It's also giving us the secret power, like I mentioned last time that,", 
    "pretty much all of the jQuery calls that do something to an element, also", 
    "return the element.", 
    "That lets you chain the calls together, right?", 
    "So, just like in Ruby, the results of doing the CSS modification is a copy", 
    "of that same element, so we can now do other things to it, like change its", 
    "inner HTML and finally show it.", 
    "So that's, what, four lines of JavaScript using jQuery.", 
    "And as someone who actually started dabbling with JavaScript before jQuery", 
    "was a thing, this is much nicer than the old way of doing it.", 
    "And if it seems that jQuery is doing a lot in a few lines of code and,", 
    "therefore, oh my God, there's a lot of documentation to read as with Rails,", 
    "it's absolutely true.", 
    "But this is the payoff, right?", 
    "Your JavaScript code is actually really tight, and you can almost read", 
    "it and see what it does.", 
    "I'm taking an element, changing its CSS properties, changing what HTML is", 
    "inside it, and showing it.", 
    "It could not be more straightforward than that.", 
    "And the last thing I do is I attach a handler to the close link.", 
    "So what is that?", 
    "That's when I click on one of these and I have this link that says close.", 
    "I attach a handler to that that hides it.", 
    "What does hide do?", 
    "It just hides that same element.", 
    "OK, last thing to notice here.", 
    "In our original handler function, when we first click on the name of the", 
    "movie, the last thing that happens, after the AJAX request is fired off,", 
    "is I return false.", 
    "This is important.", 
    "What happens if I don't return false.", 
    "Well, more to the point.", 
    "What happens if I return a non-false value?", 
    "I said this last time.", 
    "But I said a lot of things last time.", 
    "OK, the reason to return a false value is, remember, I said", 
    "we're overriding, right?", 
    "What is it we're attaching this behavior to?", 
    "We're attaching it to the link itself.", 
    "If we didn't have JavaScript, the normal thing to happen when we click", 
    "on a link, is to follow the link to whatever page it goes to.", 
    "But we're overriding that and saying, no, no, the click behavior on the link", 
    "is now going to be defined by whatever this function does.", 
    "The reason to return false is that it suppresses the built-in behavior that", 
    "would normally come after.", 
    "If we return true or if we return any non-false , value then the browser", 
    "would then follow through what its normal behaviors is of clicking on a", 
    "link-- which is to go fetch that page --and then you'd have a problem, where", 
    "the server receives an AJAX requests and, immediately followed by that, a", 
    "non-AJAX request to do the same thing, and it won't work the way you expect.", 
    "So, there's two reasons to return false from a handler.", 
    "One of them is, if you want to really override what the default browser", 
    "behavior would have been, returning false will suppress it.", 
    "The other one is sometimes depending on conditionally what happens as", 
    "you've got some code that you execute in your handler, and you may want to", 
    "proceed or not proceed, depending on what the handler does.", 
    "This is most common for things like form submission.", 
    "So, for example, if you want to add some logic that checks the values on a", 
    "form that the user filled out before submitting it, a common trick is you", 
    "have your validation code, and if any of the validations", 
    "fail, you return false.", 
    "You attach your validation code to the form submit handler, the form submit", 
    "handler will run the validation code.", 
    "if everything is great, it'll return true, which means, OK, now the browser", 
    "can do what it would have done anyway without JavaScript, which is submit", 
    "the actual form.", 
    "But if the validation fails for whatever reason, you can return false.", 
    "You can put up a little alert for the user saying you forgot to fill in your", 
    "credit card number.", 
    "And the form submission will be suppressed, and the user will stay on", 
    "the same page.", 
    "So, remember, in JavaScript you always have to explicitly return a value.", 
    "If you don't do that, the thing that is returned will be undefined.", 
    "And, when you're talking about handlers, it's particularly important", 
    "to pay attention to whether you're returning a truthy value or a falsy", 
    "value, to use JavaScript parlance, because they actually change the", 
    "behavior of the browser, as seen by the user.", 
    "Which is the same reason that in show movie info we return false here.", 
    "In hide movie info we hide the element, and then we return false, so", 
    "there's no other behaviors.", 
    "And, I think, that pretty much sets up everything we need.", 
    "We have an invisible div.", 
    "It's invisible, because we created it and immediately hid it.", 
    "We've got, for every anchor that is in the movies table, we're going to", 
    "attach the get movie info handler to it, so all of this stuff happens in", 
    "our set-up function.", 
    "And in our get movie info function all we're doing is we're creating an AJAX", 
    "call based on the same URL, we're reusing our exact same route, same", 
    "controller action.", 
    "The only difference is that the rendering step will now behave", 
    "differently if it's AJAX versus non-AJAX.", 
    "When you can get away with using the same controller action for multiple", 
    "things, that's often a good sign, right?", 
    "It means your controller action is thin and it's really doing the minimum", 
    "amount of work in terms of just setting up some variables and whatever", 
    "little piece of data it's going to render.", 
    "We could also have written our app in a way that we get back a data", 
    "structure in JSON format of what all the movies are, and we could unpack", 
    "that data structure ourselves and animate them or look up the names of", 
    "movies on Netflix, or something like that.", 
    "But the goal here was to make sure we touched each of the moving parts once.", 
    "And I think we've kind of done that.", 
    "So, we can summarize what we just did.", 
    "We can summarize the walk-through.", 
    "Now, that we've done not only client-side JavaScript, but actually", 
    "some communication to the server as well, don't forget to include the", 
    "JavaScript you need on all of your pages.", 
    "If you use JavaScript, include tag defaults, you'll get jQuery, you'll", 
    "get your own applications code.", 
    "Anything that you put into JS files in your app assets JavaScript directory", 
    "will automatically get loaded.", 
    "So make sure you put your code in the right place, then you don't have to", 
    "worry about it.", 
    "Define handlers that respond to whatever actions you want to enhance", 
    "with AJAX behaviors.", 
    "And in your setup function, ideally, bind those handlers to", 
    "the appropriate elements.", 
    "We also saw that another trick frequently done in the setup function", 
    "is creating HTML elements that should only be there if JavaScript is", 
    "available, right?", 
    "And you can create them and hide them, if you just want to have them", 
    "conditionally show up later, like we did in this example.", 
    "Once you're in a handler, what can you do?", 
    "You can inspect the form element data.", 
    "One thing we didn't talk about very much is we saw in our example code, we", 
    "used the ATTR function to access a particular elements attribute, right?", 
    "We accessed the HREF attribute of the anchor element.", 
    "But in fact, you could access any attribute you want.", 
    "And in order to make things like AJAX programming more unobtrusive, one of", 
    "the changes in HTML5 is that it is legal to have an arbitrary number of", 
    "attributes, whose names begin with data hyphen.", 
    "So data hyphen message, data hyphen movie name, data hyphen", 
    "whatever you want.", 
    "Those are legal with any element they're ignored by the browser, and", 
    "it's set up that way so that you can use those to encode values that you", 
    "eventually want to pick up for something like an AJAX call.", 
    "So when you're handler, you build up your AJAX call, you eventually call", 
    "the server, you have to make sure you've got a controller route and an", 
    "action that will receive the request.", 
    "In some cases you can reuse actions or routes that you already have.", 
    "In other cases, you're going to have some specialized functionality, and", 
    "you'll need separate new controller actions with their own", 
    "routes just for that.", 
    "Determine what you're going to render.", 
    "Are you going to render a piece of HTML, and use jQuery to stick that", 
    "into an element?", 
    "Are you going to render a data structure and use JavaScript to parse", 
    "that data structure and make specific changes to elements on", 
    "the page and so forth?", 
    "You have to define a callback function that will actually do", 
    "whatever that thing is.", 
    "So, it's going to receive the reply and, depending on what you sent back,", 
    "maybe you are going to unpack some JSON objects, maybe you're going to", 
    "replace an HTML element, maybe which we didn't really do in this example,", 
    "but is very popular is by adding, changing, or removing CSS classes to", 
    "existing elements, you can change the way they're displayed.", 
    "You can make them bigger, you can highlight them, you can make them fade", 
    "out, fade in, disappear, pull something out of a hat.", 
    "All you have to do is just define the different CSS classes upfront in your", 
    "CSS file, but wait until your JavaScript code to decide which", 
    "classes to attach or remove from which elements.", 
    "So that's another common thing that will happen in the callback functions.", 
    "And that's that it, right?", 
    "The nice thing about this separation of concerns with JavaScript is you", 
    "already know all the stuff on the server side to handle AJAX.", 
    "It's the same machinery, routes, actions, rendering that", 
    "you've already used.", 
    "And in many cases, making a one line change can repurpose some of your", 
    "existing controller actions.", 
    "So that's our quick AJAXy tour.", 
    "One thing I didn't talk about but is worth taking a look is, when you", 
    "construct a form for the user to submit, there's an option to the form", 
    "tag helper in Rails that lets you specify this form can be submitted", 
    "either by AJAX or, in the absence of JavaScript, just as a regular form", 
    "submission.", 
    "And that's a way to submit a form without having to", 
    "immediately redraw the page.", 
    "The nice thing about that is that jQuery and Rails will arrange to have", 
    "the form submission as seen by the controller look just the same, whether", 
    "it's coming from AJAX, or whether it's coming from a regular form post.", 
    "Again you could just look at the XHR method on the request object and", 
    "determine which one it actually was.", 
    "But you don't have to change, for example, the logic that you've already", 
    "got to examine the form elements that were submitted.", 
    "So that's called a remote form and it's worth taking a look at the Rails", 
    "docs if you want to do that.", 
    "So here's a question, which is not true when you're using JavaScript for", 
    "client-side form validation?", 
    "JavaScript code can inspect the DOM to see what the user typed", 
    "and validate it.", 
    "JavaScript can prevent the form from being submitted by overriding the", 
    "behavior of the Submit button.", 
    "Some validations must be done on the server because they may be impractical", 
    "to do on the client.", 
    "For example, checking if something is a valid zip code.", 
    "And the server doesn't have to repeat whichever validations were", 
    "successfully performed my JavaScript.", 
    "So which is not true?"
  ]
}