{
  "start": [
    465, 
    2750, 
    5440, 
    9870, 
    13760, 
    14790, 
    17400, 
    19060, 
    22430, 
    23350, 
    26620, 
    28110, 
    31430, 
    34700, 
    37200, 
    40590, 
    44160, 
    46390, 
    48170, 
    50620, 
    52670, 
    55490, 
    56560, 
    58380, 
    59400, 
    64069, 
    67700, 
    72040, 
    75390, 
    78390, 
    79660, 
    83160, 
    86270, 
    87930, 
    91570, 
    94920, 
    97040, 
    99370, 
    104580, 
    109930, 
    114340, 
    116710, 
    119010, 
    123860, 
    127060, 
    129538, 
    134140, 
    134560, 
    136130, 
    140740, 
    143370, 
    145910, 
    148280, 
    151680, 
    154890, 
    159730, 
    161130, 
    163930, 
    164960, 
    167670, 
    169650, 
    173530, 
    176500, 
    179690, 
    182140, 
    186870, 
    189810, 
    192300, 
    196710, 
    198090, 
    203240, 
    207570, 
    211280, 
    213790, 
    214940, 
    218030, 
    220900, 
    222130, 
    225280, 
    228650, 
    230410, 
    232910, 
    235490, 
    239560, 
    242460, 
    243460, 
    246440, 
    248180, 
    249360, 
    250770, 
    254440, 
    256850, 
    260310, 
    263620, 
    264660, 
    268630, 
    269530
  ], 
  "end": [
    2750, 
    5440, 
    9870, 
    13760, 
    14790, 
    17400, 
    19060, 
    22430, 
    23350, 
    26620, 
    28110, 
    31430, 
    34700, 
    37200, 
    40590, 
    44160, 
    46390, 
    48170, 
    50620, 
    52670, 
    55490, 
    56560, 
    58380, 
    59400, 
    64069, 
    67700, 
    72040, 
    75390, 
    78390, 
    79660, 
    83160, 
    86270, 
    87930, 
    91570, 
    94920, 
    97040, 
    99370, 
    104580, 
    109930, 
    114340, 
    116710, 
    119010, 
    123860, 
    127060, 
    129539, 
    134140, 
    134560, 
    136130, 
    140740, 
    143370, 
    145910, 
    148280, 
    151680, 
    154890, 
    159730, 
    161130, 
    163930, 
    164960, 
    167670, 
    169650, 
    173530, 
    176500, 
    179690, 
    182140, 
    186870, 
    189810, 
    192300, 
    196710, 
    198090, 
    203240, 
    207570, 
    211280, 
    213790, 
    214940, 
    218030, 
    220900, 
    222130, 
    225280, 
    228650, 
    230410, 
    232910, 
    235490, 
    239560, 
    242460, 
    243460, 
    246440, 
    248180, 
    249360, 
    250770, 
    254440, 
    256850, 
    260310, 
    263620, 
    264660, 
    268630, 
    269530, 
    271650
  ], 
  "text": [
    "ARMANDO FOX: A bug that depends on the behavior external services--", 
    "we already talked about different levels at which you can effectively", 
    "stub out the internet, all the way from the methods in your model that", 
    "call that external API, all the way out to essentially mocking the network", 
    "stack itself.", 
    "So certainly either of those things could be used to", 
    "achieve the first goal.", 
    "The green, bugs that depend on the time of day-- well, there's a couple", 
    "of ways to do this.", 
    "One way to do is to define your own time class that's just a wrapper", 
    "around Ruby's time class.", 
    "But by now, since you all have experience surgically putting seams", 
    "into test whenever you need them, you could just stub the time class and", 
    "have time.now return whatever you want, right?", 
    "So if you could figure out what's the behavior of the time of day or the day", 
    "the week that causes the bug to trigger, you could certainly use", 
    "surgical seams like we've seen before.", 
    "Therefore, the green one is also possible.", 
    "Now between the last two, the third one is tricky--", 
    "bugs that are statistical in nature.", 
    "But in fact, most of the time you can create regression tests that will", 
    "actually do this.", 
    "Anybody have a suggestion how?", 
    "Yeah, that's basically it.", 
    "If it's really a statistical outcome, then you should be able to reproduce a", 
    "statistical outcome in a test by running the test lots of times.", 
    "So if 50% of the time the coin is supposed to come up head, you do the", 
    "equivalent of running the test 100 times and keeping track of-- did you", 
    "get 50% plus or minus some margin of error, because it's not going to be", 
    "perfectly 50.", 
    "So I'm sure again, as with a lot of these questions, I'm sure if you guys", 
    "thought hard enough you could come up with some specifics statistical case", 
    "that would be really, really hard to test.", 
    "But the goal is to get you to think creatively about what can be tested.", 
    "And things that are non-deterministic but can be described statistically", 
    "actually are amenable to this kind of testing.", 
    "So good on you for voting blue.", 
    "So just to wrap up a little bit what we've done in this chapter-- we talked", 
    "about a bunch of different things that have to do with working well in teams.", 
    "Closing out bugs, actually, I think, fits into this category because when", 
    "your team is relying on you to close out a bug, that's a different", 
    "responsibility then you closing out the bug yourself.", 
    "In part, that's where the no bug closure without a test comes from.", 
    "Is that's sort of the proof to the rest of the world that you've managed", 
    "to do this.", 
    "One of the things we talked about is how do you allocate responsibilities", 
    "within the team?", 
    "How do teams work together?", 
    "There is more than one team that I have seen in industry where the", 
    "division of labor is really along the lines of-- this person works on the", 
    "front end, this person works on the back end, this person works on", 
    "business logic.", 
    "There's not a huge problem with doing that, but, at the end of the day, on a", 
    "smaller team, there's some benefit to be gained by spreading the knowledge", 
    "around, which is why the agile approach really focuses on doing it at", 
    "the level of stories.", 
    "It's probably also, arguably, better for your career if you acquire a", 
    "variety of skills.", 
    "You don't want to be stuck as the back end person or the front end", 
    "person all the time.", 
    "And having some expertise in doing each of the tools and doing each of", 
    "the parts of the application will probably also be better for the whole", 
    "project because it gives more people on the project visibility into", 
    "different parts of the project.", 
    "And as well, if you take pair programming seriously, and early in", 
    "the semester, we talked about this idea promiscuous pairing, where you're", 
    "switching off several times a day and you're trying all different", 
    "combinations of pairs within the team, that's another way to naturally spread", 
    "some of the knowledge around the project.", 
    "So whereas one person in the pair might initially be the front end", 
    "specialist or the back end specialist, as the pairs work together and that", 
    "information gets spread around, you actually find that everybody gets a", 
    "little bit better at what they're doing because they have a view of the", 
    "overall app.", 
    "So I think our summary of this is pretty straightforward.", 
    "The idea of these 2-pizza teams means management doesn't have to be a", 
    "painful process.", 
    "Even code reviews don't have to be a painful process.", 
    "Scrum, not used by everybody, but increasingly by a lot of colleagues of", 
    "mine-- just meet for 10 minutes a day.", 
    "And it's a forcing function for everybody to say not only what they've", 
    "been up to but what obstacles they've run into.", 
    "I've been to a lot of stand-up Scrum meetings where somebody will say, I", 
    "had trouble with x, and spontaneously someone else will say, oh, I know the", 
    "problem you're having.", 
    "And immediately there's a little bit of knowledge sharing that, now, not", 
    "only is the problem solved, but everybody else has", 
    "heard about it as well.", 
    "So it's a pretty good system.", 
    "We've seen some tools, like tracker and so forth, that make it easier to", 
    "manage these processes, simple as they are.", 
    "And people forget to do this, but when you finish your project, or even when", 
    "you finish an iteration, think about what worked and what didn't during", 
    "that iteration.", 
    "We screw up all the time, but the bad thing is if you screw up in the same", 
    "way repeatedly.", 
    "That suggests that you're not absorbing knowledge."
  ]
}