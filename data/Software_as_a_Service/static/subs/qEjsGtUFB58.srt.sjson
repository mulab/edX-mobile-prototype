{
  "start": [
    1220, 
    4390, 
    7950, 
    10790, 
    14540, 
    18080, 
    19840, 
    22880, 
    28330, 
    32110, 
    32680, 
    34070, 
    38250, 
    40800, 
    42240, 
    46070, 
    47650, 
    52390, 
    56560, 
    59960, 
    62140, 
    66610, 
    70690, 
    74430, 
    76670, 
    79520, 
    81470, 
    85940, 
    88270, 
    92120, 
    94890, 
    97330, 
    100760, 
    103960, 
    107690, 
    110140, 
    115830, 
    117750, 
    120340, 
    124360, 
    126020, 
    129758, 
    132070, 
    135720, 
    139170, 
    142760, 
    146590, 
    151540, 
    154630, 
    155920, 
    159060, 
    161630, 
    164830, 
    165830, 
    169840, 
    173120, 
    174920, 
    177430, 
    181290, 
    183820, 
    188330, 
    190050, 
    194950, 
    197840, 
    198940, 
    199950, 
    202130, 
    203310, 
    205530, 
    211120, 
    216010, 
    218210, 
    220170, 
    222870, 
    224120, 
    226880, 
    230830, 
    233770, 
    237570, 
    240800, 
    243440, 
    246440, 
    250400, 
    253860, 
    254950, 
    257899, 
    259480, 
    262140, 
    264540, 
    265210, 
    268910, 
    272220, 
    274800, 
    276060, 
    278860, 
    279950, 
    286570, 
    287690, 
    290880, 
    294040, 
    297070, 
    300170, 
    303070, 
    305900, 
    308980, 
    311230, 
    313900, 
    317960, 
    320570, 
    322930, 
    324960, 
    328790, 
    331980, 
    335720, 
    338270, 
    340100, 
    341850, 
    344940, 
    347120, 
    351320, 
    353520, 
    354520, 
    358540, 
    361370, 
    364370, 
    365210, 
    368130, 
    368580, 
    371590, 
    372090, 
    375200, 
    381140, 
    383510, 
    387630, 
    391000, 
    394430, 
    396150, 
    400000, 
    402730
  ], 
  "end": [
    4390, 
    7950, 
    10790, 
    14540, 
    18080, 
    19840, 
    22880, 
    28330, 
    32110, 
    32680, 
    34070, 
    38250, 
    40800, 
    42240, 
    46070, 
    47650, 
    52390, 
    56560, 
    59960, 
    62140, 
    66610, 
    70690, 
    74430, 
    76670, 
    79520, 
    81470, 
    85940, 
    88270, 
    92120, 
    94890, 
    97330, 
    100760, 
    103960, 
    107690, 
    110140, 
    115830, 
    117750, 
    120340, 
    124360, 
    126020, 
    129759, 
    132070, 
    135720, 
    139170, 
    142760, 
    146590, 
    151540, 
    154630, 
    155920, 
    159060, 
    161630, 
    164830, 
    165830, 
    169840, 
    173120, 
    174920, 
    177430, 
    181290, 
    183820, 
    188330, 
    190050, 
    194950, 
    197840, 
    198940, 
    199950, 
    202130, 
    203310, 
    205530, 
    211120, 
    216010, 
    218210, 
    220170, 
    222870, 
    224120, 
    226880, 
    230830, 
    233770, 
    237570, 
    240800, 
    243440, 
    246440, 
    250400, 
    253860, 
    254950, 
    257899, 
    259480, 
    262140, 
    264540, 
    265210, 
    268910, 
    272220, 
    274800, 
    276060, 
    278860, 
    279950, 
    286570, 
    287690, 
    290880, 
    294040, 
    297070, 
    300170, 
    303070, 
    305900, 
    308980, 
    311230, 
    313900, 
    317960, 
    320570, 
    322930, 
    324960, 
    328790, 
    331980, 
    335720, 
    338270, 
    340100, 
    341850, 
    344940, 
    347120, 
    351320, 
    353520, 
    354520, 
    358540, 
    361370, 
    364370, 
    365210, 
    368130, 
    368580, 
    371590, 
    372090, 
    375200, 
    381140, 
    383510, 
    387630, 
    391000, 
    394430, 
    396150, 
    400000, 
    402730, 
    405730
  ], 
  "text": [
    "ARMANDO FOX: So finishing up our discussion of monitoring tools, we", 
    "talked about internal, external monitoring, and the fact that there's", 
    "a number of different things you might want to monitor for, including just", 
    "whether the site's available, whether you want to see what operations on the", 
    "site are the slowest, which ones are taking the longest for your end users.", 
    "If you want to get a nice stack trace when you have an", 
    "exception, stuff like that.", 
    "And we saw an example of how you could use Cucumber to actually express user", 
    "stories about your site's performance by using the RESTful APIs of things", 
    "like New Relic.", 
    "So that's where we left off.", 
    "Things we haven't talked about very much that are typically measured in", 
    "professional software houses when they go into production. .", 
    "Stress testing or load testing.", 
    "We mentioned that there's some kinds of bugs that only really show up after", 
    "your service has been up for a long time.", 
    "Sometimes they have to do with resource exhaustion, memory leaks.", 
    "They may have to do with other--", 
    "There's a number of data corruption kinds of bugs that, you might have to", 
    "run your system for a long time before you see them.", 
    "So stress testing a system, even when it's generally working fine, right now", 
    "you're going from can I run my test suite once to can I hammer it with", 
    "load for a long time and wait for bad things to happen?", 
    "In fact, there was a pretty interesting article that I need to dig", 
    "up, and I'm going to repost it in Piazza.", 
    "I think it was in Communications of the ACM this month.", 
    "But it was about, I don't remember if it was Netflix or Joyent.", 
    "It was one of the two, Netflix or Joyent.", 
    "One of the ways that they practice dealing with failures is that they", 
    "induced failures in their production system.", 
    "So while their production system is running, they basically have a very", 
    "careful rehearsal on their development and staging system of how they would", 
    "handle a certain type of crisis, and then they induce that crisis in a", 
    "controlled manner in their production system while it's live to make sure", 
    "that it really is largely a non-event for their users.", 
    "So that's really walking the walk and talking to talk about making sure that", 
    "you could reproduce in production the things that you see in", 
    "development and staging.", 
    "Usually in any slow app, there's usually one component that becomes the", 
    "reason for the slowness.", 
    "In the limit, the component that you can't really easily replicate your way", 
    "out of scaling is the database, as we've talked about.", 
    "But often, if you use a tool like New Relic, you'll find that a small number", 
    "of actions or views, or a small number of database queries that occur in", 
    "different actions might actually be responsible for a lot of the slowness.", 
    "So one of the reasons that you want to be able to drill down on individual", 
    "controller actions is it's one thing to sort of look at the median or the", 
    "99th percentile performance that your users are getting, but you also want", 
    "to know what those users are doing, right?", 
    "It's often the case that fixing a small amount of stuff will actually", 
    "make your aggregate numbers a lot better.", 
    "When you're doing this kind of load or stress testing, there's a range of how", 
    "sophisticated you can be.", 
    "The simplest thing you can imagine is basically just use a single URL, and", 
    "hit it over and over again, and make sure that you're-- just see at what", 
    "point your application runs out of steam.", 
    "You can also do things that are fixed sequences of URLs.", 
    "So for example, simulating a simple flow with a fixed set of steps through", 
    "an application, kind of like you would do in a user story.", 
    "To my knowledge, most people don't use Cucumber in this way, although I guess", 
    "I don't see any reason why you couldn't.", 
    "But there are tools like Httperf and AB for Apache Benchmark that actually", 
    "pre-date Rails by a long time, and are very good at doing", 
    "these sorts of things.", 
    "Longevity bugs.", 
    "What kind of longevity bugs might you encounter when you do", 
    "this sort of testing?", 
    "Resource leaks, like I said, are the most common.", 
    "One that some people overlook is exhausting the sessions table.", 
    "So one of the common pitfalls, if you have a site that's not that popular,", 
    "then you have a big promotion, all of a sudden, you get a bunch of new users", 
    "who have never been to the site before.", 
    "And by default, you'll probably allocate a session", 
    "for each one of them.", 
    "Now, the way Rails ships out of the box, and one of the reasons this", 
    "decision was made is the default place that the session data is kept is in", 
    "the cookie that goes back and forth to the user's browser.", 
    "So if you're using the default Rails behavior for sessions, you're not", 
    "really in danger of having this be problematic.", 
    "If you change the default Rails behavior for sessions, for example,", 
    "some people store sessions in a separate database table.", 
    "The main reason for doing that would be that the session gets large enough", 
    "that you can't fit it into 4 KB, which is the limit for how big", 
    "a cookie can be.", 
    "Although if the session really is greater than 4 KB, you probably need", 
    "to be asking yourself why.", 
    "It may be that you're putting bigger objects in the session than what", 
    "really belongs there, and you should be just putting IDs of", 
    "things in the session.", 
    "But regardless, one problem you can have if you start storing sessions in", 
    "the database is the active and new user coming to your site, whether or", 
    "not they ever come back again in their lives has consumed a", 
    "session table entry.", 
    "And unless you're cleaning out the session table regularly, you'll", 
    "eventually run out.", 
    "So session exhaustion is an example of what some people call a self denial of", 
    "service attack.", 
    "You make your site so popular that people flood it, and you allocate a", 
    "lot of resources to each new person, even though you have no evidence if", 
    "they're ever going to come back.", 
    "Other things that you can flush out longevity bugs with.", 
    "Software rejuvenation, which is a very fancy term for something everybody", 
    "already does, which is you reboot your computer when it's not working right", 
    "and you're not quite sure why, or you restart a server process when it", 
    "appears to be stuck, and you're not quite sure why.", 
    "Most commercial sites have done this for years.", 
    "Depending on who you ask, it may be called rejuvenation or rolling reboot.", 
    "In fact, the Apache Web Server already does this.", 
    "When you start Apache, what you're actually doing is you're starting a", 
    "small number of Apache children.", 
    "And one of the configuration parameters is how long any given child", 
    "will survive before it commits suicide.", 
    "So after a certain number of requests, it will sort of silently die, and the", 
    "other n minus 1 children will sort of take up the slack.", 
    "And then a fresh child will be brought up in its place.", 
    "So they're always sort of turning over.", 
    "And in heavily loaded sites, sort of every few minutes, Apache is turning", 
    "over all of its child processes.", 
    "And this is partially because even really well debugged software will", 
    "turn up things like resource leaks and memory leaks that you", 
    "hadn't thought about.", 
    "So this is one way to sort of keep things fresh.", 
    "Running out of sessions, like I said, if you're doing the default thing that", 
    "Rails gives you, which is to store the session in a cookie, you mostly don't", 
    "have to worry about this.", 
    "But then you do have to worry that your session is small enough to fit in", 
    "that cookie.", 
    "And if you're not storing entire objects in the session, this shouldn't", 
    "be a problem.", 
    "4 KB is pretty big if all you're storing is IDs.", 
    "So having talked a little about these metrics, we could ask, since one of", 
    "the new things about software as a service is the developers and", 
    "operators roles now kind of overlap.", 
    "In your operator role as a developer, which of these metrics would probably", 
    "not be as interesting to you as the other three?", 
    "Which are the slowest queries?", 
    "What's the maximum CPU utilization over some time interval?", 
    "What's the 99%ile of response time?", 
    "Or what are the three slowest views, and how long do those take to render?"
  ]
}