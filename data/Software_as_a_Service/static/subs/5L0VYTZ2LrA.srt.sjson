{
  "start": [
    1030, 
    1490, 
    4300, 
    8350, 
    11670, 
    14060, 
    16350, 
    19450, 
    22190, 
    25360, 
    28190, 
    29260, 
    31010, 
    33160, 
    34910, 
    38570, 
    41210, 
    45360, 
    47130, 
    48710, 
    52100, 
    55250, 
    58250, 
    61880, 
    65550, 
    68280, 
    71420, 
    74420, 
    75610, 
    77440, 
    81740, 
    84920, 
    87510, 
    90260, 
    93200, 
    95850, 
    98870, 
    101550, 
    103890, 
    107850, 
    110370, 
    114200, 
    117880, 
    122050, 
    125660, 
    128729, 
    134980, 
    137720, 
    142175, 
    145080, 
    147710, 
    151860, 
    152720, 
    156440, 
    160140, 
    161780, 
    165240, 
    170040, 
    174410, 
    176390, 
    178720, 
    183140, 
    186620, 
    191430, 
    196060, 
    200750, 
    205520, 
    209230, 
    213060, 
    214280, 
    217070, 
    221380, 
    225850, 
    229830, 
    233180, 
    237250, 
    238370, 
    241810, 
    243270, 
    247080, 
    249500, 
    251320, 
    253010, 
    255680, 
    258329, 
    262160, 
    266070, 
    269310, 
    270490, 
    271920, 
    274750, 
    276620, 
    278550, 
    280980, 
    283840, 
    284710, 
    286570, 
    289320, 
    293190, 
    296180, 
    299660, 
    302060, 
    303270, 
    306722, 
    309420, 
    312280, 
    313250, 
    316130, 
    318460, 
    321235, 
    323670, 
    326130, 
    329090, 
    330910, 
    334470, 
    338230, 
    341770, 
    345080, 
    346290, 
    350540, 
    353290, 
    354780, 
    359310, 
    362670, 
    366730, 
    367870, 
    371430, 
    374590, 
    377440, 
    379590, 
    382400, 
    383800, 
    387090, 
    390810, 
    391830, 
    394200, 
    397670, 
    401120, 
    403130, 
    407000, 
    409490, 
    414210, 
    415660, 
    418940, 
    420620, 
    424370, 
    426490, 
    428990, 
    432550, 
    433970, 
    436200, 
    439290, 
    444610, 
    447460, 
    449980, 
    453040, 
    457110, 
    459950, 
    461460, 
    463490, 
    465870, 
    467010, 
    470150, 
    473260, 
    476090, 
    479010, 
    483520, 
    484470, 
    487700, 
    489570, 
    492900, 
    496690, 
    498410
  ], 
  "end": [
    1490, 
    4300, 
    8350, 
    11670, 
    14060, 
    16350, 
    19450, 
    22190, 
    25360, 
    28190, 
    29260, 
    31010, 
    33160, 
    34910, 
    38570, 
    41210, 
    45360, 
    47130, 
    48710, 
    52100, 
    55250, 
    58250, 
    61880, 
    65550, 
    68280, 
    71420, 
    74420, 
    75610, 
    77440, 
    81740, 
    84920, 
    87510, 
    90260, 
    93200, 
    95850, 
    98870, 
    101550, 
    103890, 
    107850, 
    110370, 
    114200, 
    117880, 
    122050, 
    125660, 
    128729, 
    134980, 
    137720, 
    142175, 
    145080, 
    147710, 
    151860, 
    152720, 
    156440, 
    160140, 
    161780, 
    165240, 
    170040, 
    174410, 
    176390, 
    178720, 
    183140, 
    186620, 
    191430, 
    196060, 
    200750, 
    205520, 
    209230, 
    213060, 
    214280, 
    217070, 
    221380, 
    225850, 
    229830, 
    233180, 
    237250, 
    238370, 
    241810, 
    243270, 
    247080, 
    249500, 
    251320, 
    253010, 
    255680, 
    258329, 
    262160, 
    266070, 
    269310, 
    270490, 
    271920, 
    274750, 
    276620, 
    278550, 
    280980, 
    283840, 
    284710, 
    286570, 
    289320, 
    293190, 
    296180, 
    299660, 
    302060, 
    303270, 
    306722, 
    309420, 
    312280, 
    313250, 
    316130, 
    318460, 
    321235, 
    323670, 
    326130, 
    329090, 
    330910, 
    334470, 
    338230, 
    341770, 
    345080, 
    346290, 
    350540, 
    353290, 
    354780, 
    359310, 
    362670, 
    366730, 
    367870, 
    371430, 
    374590, 
    377440, 
    379590, 
    382400, 
    383800, 
    387090, 
    390810, 
    391830, 
    394200, 
    397670, 
    401120, 
    403130, 
    407000, 
    409490, 
    414210, 
    415660, 
    418940, 
    420620, 
    424370, 
    426490, 
    428990, 
    432550, 
    433970, 
    436200, 
    439290, 
    444610, 
    447460, 
    449980, 
    453040, 
    457110, 
    459950, 
    461460, 
    463490, 
    465870, 
    467010, 
    470150, 
    473260, 
    476090, 
    479010, 
    483520, 
    484470, 
    487700, 
    489570, 
    492900, 
    496690, 
    498410, 
    499660
  ], 
  "text": [
    "Armando Fox: OK.", 
    "Let's pick up where we left off from last time.", 
    "The one thing we didn't get to talking about last time that I had intended to", 
    "get to was the five Rs of fixing bugs.", 
    "I don't know that these are universally five Rs, but", 
    "they're our five Rs.", 
    "And they're pretty well supported by practice.", 
    "We try to make up these mnemonics so that people can remember stuff.", 
    "But what you can really boil it down to is, if there's not a test that", 
    "demonstrates both the failing and passing behavior, then you haven't", 
    "fixed the bug.", 
    "That's what it comes down to.", 
    "So what are the actual five Rs?", 
    "Someone's got to report the bug.", 
    "Then someone on the development team has to either reproduce the reported", 
    "bug or reclassify it.", 
    "As we'll see, sometimes even a bona fide failure from the customer's point", 
    "of view doesn't necessarily get classified as a bug.", 
    "Maybe it's something that won't be fixed.", 
    "The next and all-important step is to make sure that you can come up with a", 
    "simple-as-possible regression test that demonstrates the bug in action.", 
    "In other words, once you've reproduced the bug by whatever manual means are", 
    "possible, you need to capture that in an automatable way, so that when you", 
    "fix the bug, you have proof in the form of a test that used to fail and", 
    "is now passing that the bug really has been fixed.", 
    "And of course, that test goes into your regression suite so that if that", 
    "bug ever tries to rear its head again, you'll know about it sooner rather", 
    "than later.", 
    "And then finally, you release the fix.", 
    "And depending on what your delivery method is, sometimes when the fix has", 
    "been committed and pushed to the master branch of the repo, that may", 
    "count as releasing, in your project.", 
    "In other projects, it might not be counted as a release until you", 
    "actually deploy the version that has the fixed code.", 
    "But either way, those are the basic steps.", 
    "And even in non-agile organizations, they usually follow", 
    "some version of this.", 
    "Now, what we'll see is that there's tools that we've already been using", 
    "for things like tracking feature progress that you can repurpose for", 
    "classifying bugs and dealing with them.", 
    "But even in organizations that follow other software life-cycle", 
    "methodologies, especially the idea that until you've reproduced the bug", 
    "in a test and proved that you can make the test pass where it once failed,", 
    "until you can do that, you can't close out the bug.", 
    "So it's not just about fixing the bug in the source code.", 
    "So we've used a tool already that can actually be adapted for bug fixes.", 
    "In the reporting stage, one of the easiest things you can do in smaller", 
    "projects, works pretty well, is you can mark a story in Pivotal Tracker as", 
    "being a bug, as opposed to marking it as being a feature.", 
    "Bugs are, by definition, 0-point stories.", 
    "Now, that's not to say that they take zero effort to do the story and close", 
    "out the bug.", 
    "But the idea is, in principle, if you've done good TDD, you should have", 
    "been able to catch the bug during the development phase in a test, before", 
    "the story actually got delivered.", 
    "So in some sense, it's to avoid getting double credit, once for doing", 
    "a story and then again for actually fixing bugs to really do the story.", 
    "One thing we haven't talked about-- but if you're interested in gadgetry", 
    "and in more automation--", 
    "GitHub integrates with just about everything.", 
    "So there's a page on every GitHub repo called \"service hooks.\" And there's a", 
    "variety of services that have been tailored to work with GitHub so that", 
    "when you push commits to GitHub, various interesting things can happen.", 
    "One of the examples of this that Tracker does, is if you annotate your", 
    "Git commits and pushes with an appropriate string, then whenever you", 
    "push a commit that contains the fix to a particular bug on Tracker, or even", 
    "to any other Tracker story, like a feature, GitHub will automatically", 
    "cause the corresponding feature to be marked \"delivered\" in Tracker so you", 
    "don't have to do it yourself.", 
    "So there's a number of different services hooks that later on when we", 
    "talk about continuous integration and continuous deployment, the idea is", 
    "that you can tie your source code control system into a lot of the other", 
    "software-as-a-service-based tools that you're using for project management.", 
    "If you get into a larger project, you'll see that GitHub itself also has", 
    "an \"issues\" feature, like an issues discussion forum, that is part of", 
    "every repo.", 
    "And in much larger projects, you'll often see a", 
    "full-featured bug database.", 
    "Bugzilla is one of the more popular open-source ones for doing this.", 
    "I've found that for a lot of small projects, the Tracker", 
    "approach works just fine.", 
    "And you can see your--", 
    "one advantage of using the Tracker approach is you can actually", 
    "prioritize your bug fixes with respect to certain features.", 
    "So very low-priority bugs that may not affect a lot of people might actually", 
    "get prioritized lower than finishing features that do.", 
    "So, I guess my recommendation would be use the simplest thing that works for", 
    "your project.", 
    "I'm pretty lazy.", 
    "I only like learning new tools if they're going to add a lot of value.", 
    "So I've used Tracker.", 
    "I've used the GitHub issues feature.", 
    "I've been on a couple of projects where we used Bugzilla.", 
    "And it's not clear that the projects, in retrospect, were large enough to", 
    "really deserve that.", 
    "But your mileage may vary, right?", 
    "So once the bug has been reported, what do you do with it?", 
    "The sort of obvious option is that you try to reproduce it and repair it.", 
    "But in some cases, the bug maybe is not a bug at all.", 
    "For example, the software might be working as designed, but because of a", 
    "poor UI design, the customer misunderstood what", 
    "was supposed to happen.", 
    "In other words, it behaves the way you think it should behave, you just did a", 
    "poor job presenting it to the user.", 
    "Another possibility is that the bug is in a part of the code that is on the", 
    "way to being obsolete.", 
    "It's on the way to being replaced, or there's a new feature coming that's", 
    "going to cause that part of the code to change.", 
    "And in those cases, you might just mark it as, yes, technically this is a", 
    "bug, but we're not going to fix it because the part of the code that it", 
    "occurs in is going to be replaced by something else soon enough.", 
    "Assuming that it is a real bug, the next step is to reproduce it with the", 
    "simplest possible test.", 
    "And \"simplest possible\" basically means, what's the least amount of", 
    "environment that you can set up and still trigger the bug?", 
    "What you're trying to do is identify the preconditions that caused the bug", 
    "to happen and isolate it from the environment as much as possible.", 
    "So, what does that mean concretely?", 
    "Well, we've seen that if you have a group of specs, or even a single spec,", 
    "you can use the Before block to set up some preconditions", 
    "before the test runs.", 
    "If you're doing Cucumber, you can use some background steps to set up some", 
    "things that get set up in the environment before your scenario runs.", 
    "There's also a global Before hook in Cucumber that we didn't really talk", 
    "about in class.", 
    "But the idea is you want to minimize the amount of stuff that goes into", 
    "those blocks so that you can draw the tightest lasso that you", 
    "can around the bug.", 
    "And once you've gotten that test to fail--", 
    "So, the first step is that the thing that make you happy is having a test", 
    "like that and getting it to fail--", 
    "in other words, being able to reproduce in an automated way what you", 
    "were able to reproduce manually when the bug got reported.", 
    "Now you fix it.", 
    "And the way you know you fixed it is because you have a test.", 
    "You may also, in the process of fixing it, create other tests for other", 
    "conditions that might trigger the bug that are different from the conditions", 
    "that caused it to be reported.", 
    "And then as I said, depending on your project, the term \"release\"--", 
    "in other words, when do you release the fixed version of the code?", 
    "That could mean that it's been pushed to the repo but not necessarily been", 
    "deployed to production yet.", 
    "Or depending on how your project is run, it might not be considered fixed", 
    "until it's deployed to production.", 
    "In particular, if it's a bug that affects a very large number of users--", 
    "well, if it's a bug that affects a very large number of users, you should", 
    "wonder how you let it slip into production in the first place.", 
    "But in those cases, it's fair to mean deployment as the", 
    "qualification for release.", 
    "In other words, when does the customer see the value?", 
    "And with that in mind, we can now ask, with the benefit of all the testing", 
    "stuff that we've done, here's a spectrum of different kinds of bugs", 
    "that will be triggered by different types of conditions, and which kind", 
    "could you not create a regression test for?", 
    "If it was a bug that depends on the behavior of external services.", 
    "So for example, my service calls the RESTful API of another service, and", 
    "the only way to trigger the bug is when that RESTful API behaves in a", 
    "certain way.", 
    "A bug that depends on something like the time of day.", 
    "There's an old joke in computer science about bugs that depend on the", 
    "phase of the moon.", 
    "So, for example, if it's a bug that's only triggered on Sundays, or it only", 
    "happens during leap years, like a certain bug we saw.", 
    "A third possibility, bugs that are statistical in nature.", 
    "So for example, if you're writing some sort of a game program, like to play", 
    "blackjack, you might have criteria about the behavior of the game in", 
    "terms of percentages.", 
    "That some percentage of the time, something should happen, but you can't", 
    "speak with certainty about any single outcome.", 
    "No single outcome would be necessarily indicative of a bug.", 
    "Or the fourth choice is, with careful craftsmanship, you could actually", 
    "reproduce any of these conditions.", 
    "So think about it for a moment."
  ]
}