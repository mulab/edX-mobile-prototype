{
  "start": [
    0, 
    2320, 
    4390, 
    4720, 
    5530, 
    7000, 
    9200, 
    10320, 
    13870, 
    17280, 
    18820, 
    21250, 
    22890, 
    27710, 
    29630, 
    31040, 
    33100, 
    38100, 
    39290, 
    41440, 
    42985, 
    45850, 
    47280, 
    48390, 
    51450, 
    53640, 
    57130, 
    61200, 
    63182, 
    63690, 
    65840, 
    66820, 
    69860, 
    73600, 
    77290, 
    78360, 
    80440, 
    82570, 
    85150, 
    89490, 
    90690, 
    91090, 
    91610, 
    92500, 
    95810, 
    97740, 
    101330, 
    104200, 
    108650, 
    109510, 
    112890, 
    117100, 
    120950, 
    122470, 
    127420, 
    130130, 
    134390, 
    135880, 
    136840, 
    142050, 
    143370, 
    145750, 
    150540, 
    151940, 
    154720, 
    158940, 
    160930, 
    166630, 
    168990, 
    171716, 
    175630, 
    177580, 
    179321, 
    183210, 
    188040, 
    188500, 
    189510, 
    191770, 
    196180, 
    197640, 
    200960, 
    201990, 
    205170, 
    208710, 
    211180, 
    212600, 
    217810, 
    219110, 
    221960, 
    226460, 
    230370, 
    233250, 
    238030, 
    241255, 
    243990, 
    247760, 
    248970, 
    251860, 
    255270, 
    257149, 
    260649, 
    265510, 
    269580, 
    270370, 
    272300, 
    275140, 
    279450, 
    283340, 
    285340, 
    289400, 
    294740, 
    298790, 
    301260, 
    302640, 
    303990, 
    307215, 
    309310, 
    310920, 
    312760, 
    317500, 
    320580, 
    323530, 
    325990, 
    333320, 
    334790, 
    335840, 
    336870, 
    340220, 
    343520, 
    348200, 
    349060, 
    351640, 
    352250, 
    352800, 
    354140, 
    360170, 
    360870, 
    362100, 
    368490, 
    376160, 
    378250, 
    382010, 
    385490, 
    388460, 
    394240, 
    397630, 
    400170, 
    402290, 
    404940, 
    408270, 
    415120, 
    416610, 
    418125, 
    418845, 
    423180, 
    428270, 
    432390, 
    435750, 
    437120, 
    440310, 
    444780, 
    447400, 
    450690, 
    451540, 
    452300, 
    452580, 
    456060, 
    460440, 
    468300, 
    470880, 
    475610, 
    477340, 
    480150, 
    481690, 
    486120, 
    488040, 
    492420, 
    497330, 
    498700, 
    500480, 
    505680, 
    510220, 
    511340, 
    511480, 
    514100, 
    517870, 
    525700, 
    530860, 
    534210, 
    536820, 
    539890, 
    541230, 
    545080, 
    546220, 
    551150, 
    551760, 
    555360, 
    556510, 
    559590, 
    561840, 
    566290, 
    568790, 
    570460, 
    572740, 
    575990, 
    577740, 
    578810, 
    582340, 
    583050, 
    583420, 
    585400, 
    591050, 
    594710, 
    596680, 
    600710, 
    602890, 
    607170, 
    609030, 
    610500, 
    614150, 
    617785, 
    620650, 
    621870, 
    625140, 
    626220, 
    628010, 
    631030, 
    634680
  ], 
  "end": [
    2320, 
    4390, 
    4720, 
    5530, 
    7000, 
    9200, 
    10320, 
    13870, 
    17280, 
    18820, 
    21250, 
    22890, 
    27710, 
    29630, 
    31040, 
    33100, 
    38100, 
    39290, 
    41440, 
    42985, 
    45850, 
    47280, 
    48390, 
    51450, 
    53640, 
    57130, 
    61200, 
    63182, 
    63690, 
    65840, 
    66820, 
    69860, 
    73600, 
    77290, 
    78360, 
    80440, 
    82570, 
    85150, 
    89490, 
    90690, 
    91090, 
    91610, 
    92500, 
    95810, 
    97740, 
    101330, 
    104200, 
    108650, 
    109510, 
    112890, 
    117100, 
    120950, 
    122470, 
    127420, 
    130130, 
    134390, 
    135880, 
    136840, 
    142050, 
    143370, 
    145750, 
    150540, 
    151940, 
    154720, 
    158940, 
    160930, 
    166630, 
    168990, 
    171716, 
    175630, 
    177580, 
    179321, 
    183210, 
    188040, 
    188500, 
    189510, 
    191770, 
    196180, 
    197640, 
    200960, 
    201990, 
    205170, 
    208710, 
    211180, 
    212600, 
    215170, 
    219110, 
    221960, 
    226460, 
    230370, 
    233250, 
    238030, 
    241255, 
    243990, 
    247760, 
    248970, 
    251860, 
    255270, 
    257149, 
    260649, 
    265510, 
    269580, 
    270370, 
    272300, 
    275140, 
    279450, 
    283340, 
    285340, 
    289400, 
    294740, 
    298790, 
    301260, 
    302640, 
    303990, 
    307215, 
    309310, 
    310920, 
    312760, 
    317500, 
    320580, 
    323530, 
    325990, 
    333320, 
    334790, 
    335840, 
    336870, 
    340220, 
    343520, 
    348200, 
    349060, 
    351640, 
    352250, 
    352800, 
    354140, 
    360170, 
    360870, 
    362100, 
    368490, 
    376160, 
    378250, 
    382010, 
    385490, 
    388460, 
    394240, 
    397630, 
    400170, 
    402290, 
    404940, 
    408270, 
    415120, 
    416610, 
    418125, 
    418845, 
    420540, 
    428270, 
    432390, 
    435750, 
    437120, 
    440310, 
    444780, 
    447400, 
    450690, 
    451540, 
    452300, 
    452580, 
    456060, 
    460440, 
    468300, 
    470880, 
    475610, 
    477340, 
    480150, 
    481690, 
    486120, 
    488040, 
    492420, 
    497330, 
    498700, 
    500480, 
    505680, 
    510220, 
    511340, 
    511480, 
    514100, 
    517870, 
    525700, 
    530860, 
    534210, 
    536820, 
    539890, 
    541230, 
    545080, 
    546220, 
    551150, 
    551760, 
    555360, 
    556510, 
    559590, 
    561840, 
    566290, 
    568790, 
    570460, 
    572740, 
    575990, 
    577740, 
    578810, 
    582340, 
    583050, 
    583420, 
    585400, 
    591050, 
    594710, 
    596680, 
    600710, 
    602890, 
    607170, 
    609030, 
    610500, 
    614150, 
    617785, 
    620650, 
    621870, 
    625140, 
    626220, 
    628010, 
    631030, 
    634680, 
    635930
  ], 
  "text": [
    "Ready for some Rails?", 
    "OK.", 
    "All right.", 
    "So what are we on?", 
    "We've talked a little bit about JS and what we can do.", 
    "We've talked about Ajax.", 
    "We've talked about JS as a language.", 
    "We've talked about testing and test driving.", 
    "How does this come back when this comes all the way back and hits you", 
    "with Rails again?", 
    "What does this look like to you?", 
    "So this is where we were.", 
    "JQuery link up in head, stuff on our static page, some JS at the bottom.", 
    "And that's not really ideal at all.", 
    "So what are we doing server-side, right?", 
    "On your Rails app, this is what we're doing, right?", 
    "We're taking that request, we're receiving an HTTP request, we're going", 
    "through our Rails routes.", 
    "We're getting into the right controller, we're querying our", 
    "database for some data.", 
    "We're gonna render some templates, and we're going to return a text response", 
    "to the client.", 
    "Well, client-side--", 
    "like on the browser-- what is our JS doing at this point, right?", 
    "Well, it's kind of doing the same thing, right?", 
    "It's-- like I said, it's making these Ajax HTTP requests.", 
    "When that response comes back from our server that we're writing, we're", 
    "getting some data back, we're going to build some nodes, and we're going to", 
    "show it to the user.", 
    "It's not that different, right?", 
    "Kind of similar.", 
    "And this is-- and I'll reiterate this at the end--", 
    "your JavaScript goes from being sort of rainbow sprinkles that you sprinkle", 
    "over your DOM, and it really should be first-class citizen code in your", 
    "application, right?", 
    "There's a lot of business value in this JS that you've been", 
    "writing all this time.", 
    "So we should treat it first class.", 
    "The good news is that Rails 3 has something called the Asset Pipeline.", 
    "Have you looked at this yet, anyone?", 
    "What?", 
    "Two thumbs.", 
    "All right, excellent.", 
    "The Asset Pipeline is fantastic, and it's horrible at the same time.", 
    "But for the purposes of this talk, it's fantastic.", 
    "It gives you the ability to concatenate all your JavaScript", 
    "together, which means we can spread--", 
    "we have a lot of tiny files, which is always better than having monolithic", 
    "files, right?", 
    "You give me something that's got 25, 30 lines-- if it goes down past the", 
    "bottom of my editor window, I'm never going to be able to grok it.", 
    "So we can have a lot of small files, which means a lot of small classes, a", 
    "lot of small objects.", 
    "We can control the include order, so dependencies work.", 
    "We can have multiple packages of JavaScript.", 
    "So, while Rails kind of wants you to, oh, put all your JavaScript in", 
    "Application JS--", 
    "yes, you could do that.", 
    "However, what if you needed separate packages of JS for different", 
    "places in your app.", 
    "Or maybe you want to have a small section to sort of bootstrap your", 
    "application, that have subsequent files that get loaded that do all the", 
    "real nitty-gritty.", 
    "And then, of course, the big thing, which I'm just going to barrel right", 
    "over and not talk much today, unless you ask about it.", 
    "Asset Pipeline also handles minification for you.", 
    "So we want to have small amounts of JavaScript that do awesome things--", 
    "adjust that pyramid however you like.", 
    "But in order to--", 
    "the Asset Pipeline will shrink that down for you, obfuscating your code", 
    "and whatever, making it as small as possible.", 
    "So you can have gargantuan variable names if you want, they'll just get", 
    "turned into A, right?", 
    "And what this means is-- hey, does this have-- well, look at that.", 
    "Oh, hey!", 
    "Yes, there is a laser in here.", 
    "I promise not to shoot anybody.", 
    "You move your JavaScript from where it used to live in the dark ages a year", 
    "and a half ago--", 
    "in your public directory, all the way down here at the bottom, where nobody", 
    "knew how to manage it.", 
    "And we have this Assets JavaScripts directory in our generic--", 
    "like, up there in our app directory where all of our Ruby is.", 
    "So now you can switch contexts between your Ruby and your JS,", 
    "your JS's app code.", 
    "The Asset Pipeline makes this easy for you.", 
    "So now--", 
    "yes, we'll deal with one application JS here.", 
    "That application JS in our app could be made up of 10s of files if we", 
    "needed it to, and have all sorts of fun stuff, which we'll talk more about", 
    "what I get into a little bit of the framework.", 
    "And you know that it will be nice and tight and small for the user, and you", 
    "don't have to worry about all that stuff, nor do you have to--", 
    "You have to manage your JS the way you manage your Ruby, is really kind of", 
    "what it amounts to, which is a good thing.", 
    "Jasmine also supports this.", 
    "You might be saying to yourself, if I'm testing application JS and there's", 
    "3,000 lines of JavaScript all concatenated together, how the heck am", 
    "I gonna know where my error is?", 
    "This is now supported, so that when you run your tests, and there's an", 
    "error in fubar.JS, line 17, you'll actually click over and get there.", 
    "You'll see that instead of it all being concatenated in [INAUDIBLE].", 
    "So that's a good thing.", 
    "So Jasmine has your back there.", 
    "OK, so your Rails Controllers, how do they change?", 
    "So if I had a controller like this-- my StuffController, it's got a show", 
    "method, I'm getting stuff and finding based on params, right?", 
    "This is pretty straightforward.", 
    "And we all know, based on how Rails conventions work, that there's a", 
    "show.HTML.erb or a .haml somewhere sitting in a directory somewhere that", 
    "will get-- that template will get evaluated with our stuff instance", 
    "variable, and we'll be able to access that instance of", 
    "stuff in our template.", 
    "Right?", 
    "How does your controller look differently if you are responding to", 
    "an Ajax request?", 
    "Not that different.", 
    "But basically, instead of--", 
    "you want to tell Rails, I don't want you to go and get that HTML file--", 
    "because we're going to talk about JSON in a minute--", 
    "but instead, you're going to say, I'm going to explicitly call render, and I", 
    "want you to render the JSON version of stuff.", 
    "You can go look up as JSON to JSON functions that are all in active", 
    "record, I believe.", 
    "Is that where they are?", 
    "Yeah, they're in active record.", 
    "But basically that stuff-- there are many, many ways to take that Ruby", 
    "object stuff that we've just deserialized from our database, and", 
    "turn it into something that looks just like that object, or a representation", 
    "of that object.", 
    "Have you guys played with JSON much at all?", 
    "More nods?", 
    "Right?", 
    "Eh, right?", 
    "All JSON is is serialization to strings of your JavaScript objects.", 
    "No functions--", 
    "don't serialize your functions--", 
    "but it is yet another text representation of JavaScript.", 
    "But it's sort of become the lingua franca of your app talking to your JS", 
    "front end, on your front end, on the client, right?", 
    "So instead of giving me HTML, almost always what I want is a JSON", 
    "representation of that object, which is going to be, again, sent down as a", 
    "string, evaluated, just the way--", 
    "In fact, jQuery's Ajax success call, before--", 
    "if we go back to where that done call got called with data.", 
    "If that was a JSON response--", 
    "we asked for JSON and it came back as valid JSON--", 
    "we would actually, instead of having a string that we would have to go", 
    "evaluate, we would actually have the JS object there, which is really nice.", 
    "So it really is what you want to be using when you're responding", 
    "for your Rails app.", 
    "So you're not going to be templating, you're going to be", 
    "dealing with direct objects.", 
    "I'll talk a little bit more about that in a second.", 
    "But this is where you really start to think about your Rails app not just", 
    "being something that's serving this static pages.", 
    "And not just something that's serving static pages, maybe a little JS to", 
    "animate them and stuff.", 
    "Really, what your app is-- your Rails app is-- it's an API.", 
    "And you could even say it's an API directly to what's serialized out in", 
    "your database.", 
    "We talked about REST much in this class?", 
    "Eh, OK.", 
    "Some.", 
    "Right?", 
    "This is just a way of defining the objects that your API supports, right?", 
    "If you do a Rails generate new controller with the scaffolding, you", 
    "get the 7 happy CRUD methods that all map to specific RESTful actions.", 
    "What you really start thinking about is--", 
    "OK, I've got this part of my app that's the HTML.", 
    "Maybe it's even HTML with a little dynamic.", 
    "But then I've got this other section of my app--", 
    "these other set of controllers--", 
    "that are exposing these RESTful resources via an API that I'm hitting", 
    "over JavaScript.", 
    "And one of the hardest things that I do on a day-to-day basis, besides", 
    "teach people how to test drive all the time, is thinking about how you define", 
    "those objects--", 
    "your resources, right?", 
    "It doesn't necessarily have to be a one-to-one mapping from your database", 
    "tables, to your active record objects, to slash models, to the", 
    "resources you expose.", 
    "Right?", 
    "You could have a resource that's combined bunch of two or three", 
    "different objects, or models, if that made sense.", 
    "But some subset of your Rails controllers are really just a RESTful", 
    "API that you're consuming with your JS.", 
    "Here's the last textbook I'll show up here today, which", 
    "is, think a lot about--", 
    "as you're designing your app, whatever it is.", 
    "But think about what those resources are.", 
    "And this is a great book that explains a lot of good philosophies about how", 
    "to do that.", 
    "I've cropped this page a little bit, but DHH of Rails fame actually did the", 
    "intro on this.", 
    "So when Rails started getting RESTful--", 
    "sort of early--", 
    "late Rails 1 before Rails 2 popped around--", 
    "So when all this RESTful stuff started showing up in Rails, it was because", 
    "David had gotten really inspired by reviewing this book.", 
    "And it really is a great way to start thinking about your app.", 
    "A little extra credit.", 
    "These are all things that--", 
    "you guys have talked at all about skinny controllers and fat models?", 
    "Your controllers start getting a little bit different if you start", 
    "thinking about APIs.", 
    "There are all sorts of neat little extractions you can do, whether it's a", 
    "Query object--", 
    "STUDENT: [SNEEZE].", 
    "PROFESSOR: Bless you--", 
    "presenters to take your models and turn them into JSON, responders, which", 
    "is a way that you have one controller support multiple formats.", 
    "So if you did want to have the same controller, if you wanted to have the", 
    "HTML representation of your stuff as well as the API representation of your", 
    "stuff, you can do that with responders.", 
    "There's plenty of room for other plain old Ruby objects all around Rails,", 
    "even though the blogs won't talk about it.", 
    "It's a great way--", 
    "and I mentioned, this is all extra credit stuff.", 
    "But it's a good way to have a lot of decoupled objects--", 
    "we like decoupled objects, or lightly-coupled objects,", 
    "loosely-coupled objects--", 
    "with really, really fast tests that your controllers wind up aggregating", 
    "these things.", 
    "So this is some stuff to go up and look up.", 
    "I don't get to use all this stuff every day even, but it's fun to read", 
    "about, and gives you-- helps you a lot think about the flow of the data", 
    "through your app."
  ]
}