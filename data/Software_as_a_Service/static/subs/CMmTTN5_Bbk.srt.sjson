{
  "start": [
    490, 
    3140, 
    6890, 
    12190, 
    14840, 
    20040, 
    21480, 
    25240, 
    28450, 
    30590, 
    33290, 
    34370, 
    35680, 
    38460, 
    39130, 
    41000, 
    43520, 
    48100, 
    50180, 
    52430, 
    54450, 
    56260, 
    62460, 
    64769, 
    65920, 
    68720, 
    70720, 
    72760, 
    76250, 
    80830, 
    84600, 
    87620, 
    91140, 
    93520, 
    97160, 
    101290, 
    104720, 
    108170, 
    112260, 
    116270, 
    118510, 
    121130, 
    124560, 
    128680, 
    133420, 
    135360, 
    137120, 
    140470, 
    142940, 
    144260, 
    146950, 
    149880, 
    153040, 
    156790, 
    160330, 
    163420, 
    167660, 
    170550, 
    173710, 
    177740, 
    182120, 
    185670, 
    188780, 
    190640, 
    194900, 
    197780, 
    200770, 
    203190, 
    206360, 
    210290, 
    211560, 
    216040, 
    217320, 
    218720, 
    220720, 
    222990, 
    223390, 
    225890, 
    228620, 
    232320, 
    236010, 
    240480, 
    243410, 
    245510, 
    248790, 
    252340, 
    254690, 
    255550, 
    257160, 
    260430, 
    262530, 
    265400, 
    268960, 
    272040, 
    275330, 
    278480, 
    281590, 
    285130, 
    287820, 
    291430, 
    293970, 
    297160, 
    300690, 
    303480, 
    307280, 
    309080, 
    311370, 
    314730, 
    318010, 
    321500, 
    323890, 
    325650, 
    328150, 
    332180, 
    334040, 
    335060, 
    337510, 
    340610, 
    344170, 
    347250, 
    349000, 
    351470, 
    354390, 
    356940, 
    362160, 
    364820, 
    368970, 
    371770, 
    373520, 
    376230, 
    378950, 
    382000, 
    384330, 
    387570, 
    391320, 
    394970, 
    398710, 
    401570, 
    405760, 
    406760, 
    409690, 
    412550, 
    417610, 
    420430, 
    421910, 
    425490, 
    429410, 
    431760
  ], 
  "end": [
    3140, 
    6890, 
    12190, 
    14840, 
    20040, 
    21480, 
    25240, 
    28450, 
    30590, 
    33290, 
    34370, 
    35680, 
    38460, 
    39130, 
    41000, 
    43520, 
    48100, 
    50180, 
    52430, 
    54450, 
    56260, 
    62460, 
    64769, 
    65920, 
    68720, 
    70720, 
    72760, 
    76250, 
    80830, 
    84600, 
    87620, 
    91140, 
    93520, 
    97160, 
    101290, 
    104720, 
    108170, 
    112260, 
    116270, 
    118510, 
    121130, 
    124560, 
    128680, 
    133420, 
    135360, 
    137120, 
    140470, 
    142940, 
    144260, 
    146950, 
    149880, 
    153040, 
    156790, 
    160330, 
    163420, 
    167660, 
    170550, 
    173710, 
    177740, 
    182120, 
    185670, 
    188780, 
    190640, 
    194900, 
    197780, 
    200770, 
    203190, 
    206360, 
    210290, 
    211560, 
    216040, 
    217320, 
    218720, 
    220720, 
    222990, 
    223390, 
    225890, 
    228620, 
    232320, 
    236010, 
    240480, 
    243410, 
    245510, 
    248790, 
    252340, 
    254690, 
    255550, 
    257160, 
    260430, 
    262530, 
    265400, 
    268960, 
    272040, 
    275330, 
    278480, 
    281590, 
    285130, 
    287820, 
    291430, 
    293970, 
    297160, 
    300690, 
    303480, 
    307280, 
    309080, 
    311370, 
    314730, 
    318010, 
    321500, 
    323890, 
    325650, 
    328150, 
    332180, 
    334040, 
    335060, 
    337510, 
    340610, 
    344170, 
    347250, 
    349000, 
    351470, 
    354390, 
    356940, 
    362160, 
    364820, 
    368970, 
    371770, 
    373520, 
    376230, 
    378950, 
    382000, 
    384330, 
    387570, 
    391320, 
    394970, 
    398710, 
    401570, 
    405760, 
    406760, 
    409690, 
    412550, 
    417610, 
    420430, 
    421910, 
    425490, 
    429410, 
    431760, 
    433010
  ], 
  "text": [
    "ARMANDO FOX: Let's start our discussion of legacy code.", 
    "I think if you remember when Dave introduced the course at the very", 
    "beginning, one of the things that, when we went out to companies that", 
    "many of you are going to be interviewing with and maybe soon", 
    "working for, we wanted to know what are the things that are really missing", 
    "in our software engineering education.", 
    "The unanimous answer from almost all of them that the number one concern", 
    "is, help students understand how to work with legacy code.", 
    "So let's start doing that.", 
    "And the first question to ask is, first of all, what makes something be", 
    "legacy code?", 
    "What's a crisp definition?", 
    "For most people, it's just code that I don't want to edit, that I don't want", 
    "to be responsible for.", 
    "That's legacy code, it's not my problem.", 
    "But we could probably come up with a more precise definition.", 
    "And then we can ask, does the Agile techniques that we've been using have", 
    "anything to contribute in how to deal with legacy code.", 
    "And happily, it turns out that the answer is yes, more", 
    "than you might think.", 
    "So what's legacy code?", 
    "Well, originally, if you organized the software body of knowledge, the", 
    "heading where you would talk about legacy code is under software", 
    "maintenance.", 
    "The idea was that you put the software out there, now it's in the field, and", 
    "you've got to maintain it and over time it becomes legacy.", 
    "It sort of rots away or something.", 
    "But quantitatively, if you look at that the total cost that goes into", 
    "software according to Robert Glass, who's done a lot of research on this,", 
    "60 percent of the maintenance cost of software are not about fixing bugs,", 
    "they're actually about enhancing it, improving it, and making it do new", 
    "stuff after it's been deployed, compared to only 17 percent for what", 
    "we think of as fixing bugs and problems.", 
    "So he came up with the 60/60 rule that 60 percent of the cost of software is", 
    "in the maintenance phase, and 60 percent of that is enhancements.", 
    "So that means that legacy code is pretty important because it's", 
    "consuming the majority of the cost of the overall software life cycle.", 
    "And I think he put very eloquently, \"old hardware becomes obsolete, but", 
    "old software is in production every night.\" It's still meeting somebody's", 
    "need or else it wouldn't be deployed.", 
    "And if you want to read a bunch of other pithy facts and fallacies of", 
    "software engineering, Robert Glass's book comes highly recommended.", 
    "It's written sort of very no BS.", 
    "So let's get back to this idea of what makes something be legacy code.", 
    "The number one part of the definition is it's still", 
    "solving somebody's problem.", 
    "Given that we can agree, nobody loves maintaining legacy code.", 
    "There must be an agreement that the value in maintaining", 
    "it exceeds the pain.", 
    "So it's still meeting somebody's need.", 
    "One possible definition is, well I didn't write this code, it's poorly", 
    "documented from my point of view, that makes it legacy.", 
    "Or you might say, well I wrote it but that was a long time ago and I didn't", 
    "create great documentation so it's legacy now.", 
    "I knew it really well three years ago when I wrote it, but now I forgot", 
    "everything I did and the design documents aren't very good.", 
    "But a more precise definition, and the one that we're going to use for", 
    "reasons that will quickly become obvious, is that it's code that", 
    "doesn't have good tests, regardless of who wrote it or when they wrote it.", 
    "And this idea really is the center of Michael Feathers book, \"Working", 
    "Effectively with Legacy Code,\" which I think, if after this class you decide", 
    "you want to read one book on working with legacy code, this is the one.", 
    "It's really, really well written.", 
    "Of course, this is like a 400 page book and we have one chapter, so we're", 
    "going to try to distill the essence of a lot of his advice and combine it", 
    "with the Agile techniques that we've already used.", 
    "So legacy code has now become your job.", 
    "You have been hired in some capacity and you've got to make some", 
    "enhancements to a piece of code you didn't write.", 
    "There's two approaches.", 
    "The approach most of us use, and I'm guilty of this too, is what he calls", 
    "edit and pray.", 
    "So you make some changes.", 
    "You kind of try out a couple of sanity checks.", 
    "You're like, ah, still seems to work.", 
    "OK.", 
    "And then hold your breath.", 
    "You don't think you broke anything, but how could you possibly know", 
    "because how do know your change didn't affect something somewhere else?", 
    "We're going to go with the more distinct cover and modify.", 
    "Yes, this is copyright by United Feature Syndicate used only by parody", 
    "and for educational purposes.", 
    "I'm required to say that.", 
    "So we're going to use test coverage as a security blanket.", 
    "The idea behind test coverage is if my test coverage is really good, if I", 
    "make a change that accidentally breaks something, I'll know about it", 
    "immediately.", 
    "So this is the approach that we're going to take.", 
    "And it's also another motivation for why we care about things like test", 
    "coverage to begin with.", 
    "So how can Agile techniques help us here?", 
    "One of them is determining where we need to make changes.", 
    "It turns out that some of the same techniques that we've been proposing", 
    "for designing a new app, things like coming up with user stories and", 
    "thinking about how the user stories map to the database schema and the", 
    "models that you're going to set up, if we run those same techniques in", 
    "reverse, they're actually useful for helping us understand the code base", 
    "that we have to approach without having written it ourselves.", 
    "The other thing is, we've very briefly so far, we've talked about the", 
    "refactor part of the red green refactor cycle.", 
    "The idea that after you write a few tests, you look for opportunities to", 
    "improve the structure of the code, to DRY it out, to make it more beautiful,", 
    "but without breaking it, with respect to the test base.", 
    "Well as it turns out, refactoring is a thing you often have to do when you're", 
    "modifying legacy code as well.", 
    "And all of the same questions arise.", 
    "If the code that you're trying to modify already has good test coverage,", 
    "then great, because as soon as you modify it, if you broke the existing", 
    "test, you'll know right away, and if not, you create test coverage using", 
    "TDD as you go.", 
    "Suppose it's not well tested.", 
    "Well, the next question is, is it testable?", 
    "Can you write tests to cover the part of the code you're going to change so", 
    "that as you change it, you'll have some indication", 
    "if you broke something?", 
    "If it's testable, then you're in a little better position because now you", 
    "can create those tests and now you're back at step one.", 
    "If it is neither tested nor testable, then you have to do some refactoring.", 
    "You have to change the structure of the code so that you can create the", 
    "test so that you can make the changes.", 
    "And there's really no shortcut about this, boys and girls.", 
    "You either suffer the pain at the end when you deploy it and you get a call", 
    "in the middle of the night because it broke in a way you didn't anticipate,", 
    "or you invest the time up front and you actually use testing to ferret out", 
    "all those cases before you go to production.", 
    "So, how does this kind of map to what we know how to do?", 
    "Our general methodology is that we're going to add tests to improve coverage", 
    "in the areas that we're going to change.", 
    "We'll make the changes using those tests as the ground truth.", 
    "So we're going to capture what the code actually does now.", 
    "And whatever it does now, even if we think it ought to be doing something", 
    "better, what it does now is the truth.", 
    "The goal number one is to not break that.", 
    "Refactor, because that may be necessary in order to create the test", 
    "or we just want to leave that part of the code better than we found it.", 
    "And if you think about it, if Agile is embracing change, this is just", 
    "embracing change on a longer time scale.", 
    "If you look at these steps, this is exactly the TDD cycle but we're doing", 
    "it over a longer time scale.", 
    "We're doing it on code that maybe hasn't been groomed as carefully as it", 
    "might, so the code itself is out of date.", 
    "So with this perspective, we can ask this question.", 
    "If you were assigned to modify legacy code, which statement", 
    "would make you happiest?", 
    "That the code was originally developed using Agile techniques, that it's well", 
    "covered, that it's well structured and easy to read, or that a lot of the", 
    "design documents are still available and possibly even", 
    "readable and in your language."
  ]
}