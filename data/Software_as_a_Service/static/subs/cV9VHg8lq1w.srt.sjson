{
  "start": [
    270, 
    2250, 
    6080, 
    9670, 
    10550, 
    11870, 
    13370, 
    15190, 
    18060, 
    19340, 
    20670, 
    22310, 
    23560, 
    26080, 
    28960, 
    32770, 
    35740, 
    38765, 
    39940, 
    43470, 
    46130, 
    49360, 
    49760, 
    53080, 
    54040, 
    55306, 
    56300, 
    58820, 
    60140, 
    63650, 
    65890, 
    68880, 
    69820, 
    72310, 
    74160, 
    79775, 
    81940, 
    85310, 
    87590, 
    92020, 
    94570, 
    95920, 
    98010, 
    101200, 
    103790, 
    106150, 
    110130, 
    111590, 
    114080, 
    115970, 
    116930, 
    117560, 
    120860, 
    125050, 
    128288, 
    129100, 
    132150, 
    134700, 
    142100, 
    145560, 
    146690, 
    150370, 
    154800, 
    156950, 
    160270, 
    164750, 
    167020, 
    167770, 
    169770, 
    174280, 
    179350, 
    182840, 
    186010, 
    188800, 
    189880, 
    193040, 
    195520, 
    199090, 
    202990, 
    204440, 
    207330, 
    209580, 
    212220, 
    215080, 
    219700, 
    223820, 
    228540, 
    232380, 
    234030, 
    236860, 
    240550, 
    242250, 
    245960, 
    248290, 
    252640, 
    257450, 
    259570, 
    261060, 
    263970, 
    269070, 
    270190, 
    274290, 
    277860, 
    280780, 
    282540, 
    286940, 
    288610, 
    291640, 
    294360, 
    295760, 
    299560, 
    303460, 
    306860, 
    311290, 
    314700, 
    318810, 
    320540, 
    323690, 
    326150, 
    327490, 
    331950, 
    333090, 
    335510, 
    338520, 
    341250, 
    344690, 
    345810, 
    347470, 
    350580, 
    354820, 
    359840, 
    362340, 
    365100, 
    368500, 
    370230, 
    374220, 
    377710, 
    380520, 
    382560, 
    385750, 
    388750, 
    391670, 
    394990, 
    397550, 
    398950, 
    400330, 
    401495, 
    403970, 
    407770, 
    409720, 
    409900, 
    412030, 
    413070, 
    416170, 
    418540, 
    419580, 
    420710, 
    424420, 
    426440, 
    429820, 
    432500, 
    434110, 
    437200, 
    438120, 
    440880, 
    444810, 
    445730, 
    448700, 
    450990, 
    453560, 
    457120, 
    462380, 
    464990, 
    469090, 
    471390, 
    475320, 
    480020, 
    482790, 
    485790, 
    487350, 
    490450, 
    495270, 
    496820, 
    497480, 
    500410, 
    504780, 
    510430, 
    512120, 
    513340, 
    521570, 
    528140, 
    528440, 
    531060, 
    532540, 
    536160, 
    537860, 
    541500, 
    542630, 
    546180, 
    550460, 
    554200, 
    557380, 
    561030, 
    563160, 
    566120, 
    567690, 
    571520, 
    574790, 
    577400, 
    579850, 
    581590, 
    584090, 
    586980, 
    590910, 
    592870, 
    594540, 
    596750
  ], 
  "end": [
    2250, 
    6080, 
    9670, 
    10550, 
    11870, 
    13370, 
    15190, 
    18060, 
    19340, 
    20670, 
    22310, 
    23560, 
    26080, 
    28960, 
    32770, 
    35740, 
    38765, 
    39940, 
    43470, 
    46130, 
    49360, 
    49760, 
    53080, 
    54040, 
    55306, 
    56300, 
    58820, 
    60140, 
    63650, 
    65890, 
    68880, 
    69820, 
    72310, 
    74160, 
    79775, 
    81940, 
    85310, 
    87590, 
    92020, 
    94570, 
    95920, 
    98010, 
    101200, 
    103790, 
    106150, 
    110130, 
    111590, 
    114080, 
    115970, 
    116930, 
    117560, 
    120860, 
    125050, 
    128289, 
    129100, 
    132150, 
    134700, 
    142100, 
    145560, 
    146690, 
    150370, 
    154800, 
    156950, 
    160270, 
    164750, 
    167020, 
    167770, 
    169770, 
    174280, 
    179350, 
    182840, 
    186010, 
    188800, 
    189880, 
    193040, 
    195520, 
    199090, 
    202990, 
    204440, 
    207330, 
    209580, 
    212220, 
    215080, 
    219700, 
    223820, 
    228540, 
    232380, 
    234030, 
    236860, 
    240550, 
    242250, 
    245960, 
    248290, 
    252640, 
    257450, 
    259570, 
    261060, 
    263970, 
    269070, 
    270190, 
    274290, 
    277860, 
    280780, 
    282540, 
    286940, 
    288610, 
    291640, 
    294360, 
    295760, 
    299560, 
    303460, 
    306860, 
    311290, 
    314700, 
    318810, 
    320540, 
    323690, 
    326150, 
    327490, 
    331950, 
    333090, 
    335510, 
    338520, 
    341250, 
    344690, 
    345810, 
    347470, 
    350580, 
    354820, 
    359840, 
    362340, 
    365100, 
    368500, 
    370230, 
    374220, 
    377710, 
    380520, 
    382560, 
    385750, 
    388750, 
    391670, 
    394990, 
    397550, 
    398950, 
    400330, 
    401495, 
    403970, 
    407770, 
    409720, 
    409900, 
    412030, 
    413070, 
    416170, 
    418540, 
    419580, 
    420710, 
    424420, 
    426440, 
    429820, 
    432500, 
    434110, 
    437200, 
    438120, 
    440880, 
    444810, 
    445730, 
    448700, 
    450990, 
    453560, 
    457120, 
    462380, 
    464990, 
    469090, 
    471390, 
    475320, 
    480020, 
    482790, 
    485790, 
    487350, 
    490450, 
    495270, 
    496820, 
    497480, 
    500410, 
    504780, 
    510430, 
    512120, 
    513340, 
    521570, 
    528140, 
    528440, 
    531060, 
    532540, 
    536160, 
    537860, 
    541500, 
    542630, 
    546180, 
    550460, 
    554200, 
    557380, 
    561030, 
    563160, 
    566120, 
    567690, 
    571520, 
    574790, 
    577400, 
    579850, 
    581590, 
    584090, 
    586980, 
    590910, 
    592870, 
    594540, 
    596750, 
    598000
  ], 
  "text": [
    "ARMANDO FOX: On to JavaScript.", 
    "Who remembers the leftmost icon?", 
    "Who knew how to walk when the leftmost icon became a thing?", 
    "OK.", 
    "[LAUGHTER]", 
    "ARMANDO FOX: Every time I teach this class, I get a little bit", 
    "older, but that's OK.", 
    "Does anybody recognize the gentleman in the picture?", 
    "Anybody?", 
    "Bueller?", 
    "Did anybody get that reference?", 
    "This is Brendan Eich.", 
    "Brendan Eich is the creator of JavaScript.", 
    "He created it in an awful hurry and here's what he had to say about it.", 
    "\"JavaScript had to quote, \"look like Java,\" only less so-- like being", 
    "Java's dumb kid brother or boy-hostage sidekick.", 
    "Plus I had to be done in 10 days or something worse than JavaScript would", 
    "have happened.\"", 
    "By the way what he originally wanted to do-- he was the guy at Netscape who", 
    "was given the task of, hey, the browser needs to be scriptable.", 
    "Embed some language in the browser so that people can do browser-side", 
    "programming.", 
    "And what he wanted to embed-- anybody know what he wanted to embed?", 
    "Scheme.", 
    "If you read the book, you would know that.", 
    "You'd get bonus points.", 
    "But yes, he actually thought Scheme would be a fine language for", 
    "programming the browser.", 
    "And as it turns out, although it's not obvious from the get-go, JavaScript", 
    "inherits some great things from Scheme.", 
    "But also some not-so-great things from various other places that we don't", 
    "want to talk about.", 
    "So let's kind of get the big picture of what the moving parts are and how", 
    "this all happened.", 
    "In 1995, Netscape, at that time the darling of the start-up scene, decided", 
    "that they wanted the browser be scriptable.", 
    "And originally they were going to call their language LiveScript.", 
    "Whatever it was going to be, it was going to be called LiveScript.", 
    "But that was also around the time that Java was becoming really popular, and", 
    "somebody thought, you know, we really need to capitalize on the", 
    "popularity of Java.", 
    "And one of the things that the scripting language is going to do", 
    "anyway is sort of be the link between a browser and Java applets.", 
    "So why don't we give it a name that reminds people of Java.", 
    "That's basically how JavaScript got its name.", 
    "In fact, other than superficial syntax, there's almost nothing in", 
    "common between Java and JavaScript.", 
    "They almost could not be more different.", 
    "They're both imperative, I guess.", 
    "But even so.", 
    "OK.", 
    "So originally, it was going to be just simple stuff like doing animations and", 
    "form validations, and part of what came along with JavaScript was a way", 
    "to represent the stuff on the page so that the embedded language could", 
    "manipulate it.", 
    "So that was called the Document Object Model or DOM, and it's now fairly", 
    "stable, although it was chaotic in the early days.", 
    "In 1997, the European Standards Agency published a draft standard of a", 
    "language called ECMAScript, which to me, sounds like some kind of a skin", 
    "disorder or something.", 
    "But ECMAScript is supposed to be the generic version of JavaScript.", 
    "So JavaScript is a brand, it's an implementation; LiveScript is another", 
    "one; Microsoft JScript is another.", 
    "But in practice, we're just going to say JavaScript because everybody does.", 
    "However technically, JavaScript is an implementation of ECMAScript, and it", 
    "deviates from the ECMAScript standard, it adds some of its own", 
    "stuff and so on.", 
    "We're just going to call it JavaScript.", 
    "A really important thing happened in 1998 when Microsoft added a new method", 
    "to IE5 that allowed what we now think of as AJAX, but more on that later.", 
    "And then ultimately, when Google Maps showed up, that was kind of, I think,", 
    "for a lot of people, a wake up call of how much you could actually do by", 
    "combining some of these new technologies when people have fast", 
    "network connections.", 
    "And ever since then, it's been all AJAX all the time.", 
    "So that's the very rough time line.", 
    "JavaScript is in a privileged position because since it's the language", 
    "embedded in the browser, it can do all kinds of things that you can't really", 
    "do in any other language.", 
    "It can have code that's triggered by user-initiated events.", 
    "So when the user interacts with stuff on the page,", 
    "JavaScript is how you respond.", 
    "It can make requests to the server without triggering a page reload.", 
    "This was the most important thing that happened with XML HTTP request, which", 
    "by the way today, rarely uses XML, but let's not worry about that.", 
    "The really important thing was that in the old days, whenever the browser", 
    "made an HTTP request to the server, stuff would come back and the entire", 
    "page would get redrawn.", 
    "And in between, you'd see the little spinning wristwatch or whatever.", 
    "With XML HTTP request, it allowed a request to happen in the background,", 
    "with the page still there.", 
    "And when the reply came, the reply could be used to update the page in", 
    "place without redrawing the entire world.", 
    "So XML HTTP request was huge because it allowed JavaScript code to make", 
    "requests to the server and modify the page in place when the response to", 
    "that request came back, rather than always having to", 
    "redisplay the entire page.", 
    "We'll talk a lot more about the DOM in another section, but just to give you", 
    "an overview, the idea is that you think of a document in HTML or XML as", 
    "a tree of objects.", 
    "We already know this from our brief introduction to HTML and XML.", 
    "The DOM is a language independent, and it's easy to forget about this right,", 
    "people think of the DOM as a thing you manipulate from JavaScript, but the", 
    "definition of the DOM is language independent.", 
    "It only talks about data structures, attributes on specific elements in", 
    "HTML or XML.", 
    "It is hierarchical and there are rules about what kinds of elements can be", 
    "included in what other kinds of elements, which attributes are", 
    "required, and so forth.", 
    "That's all part of the definition of HTML that we saw.", 
    "The browser, when it receives an HTML or an XML document, parses it and", 
    "creates a set of data structures that represent the Document Object Model", 
    "for that document, and part of what the browser does is it provides an API", 
    "that allows JavaScript code to interact with the DOM data.", 
    "So JavaScript can read DOM element values or attributes, like what did", 
    "the user type in this box?", 
    "It can change those values or attributes, which has the side effect", 
    "of causing the browser to redisplay the parts of the page", 
    "that might have changed.", 
    "Unfortunately, the JavaScript API is implemented incompatibly across", 
    "different browsers.", 
    "So usually when you hear people talking about JavaScript", 
    "incompatibility across browsers, it's usually not the language.", 
    "The language is actually fairly stable across browsers.", 
    "It's the API that the browser provides for interacting between", 
    "JavaScript and the DOM.", 
    "That's where a lot of the pain is.", 
    "We're going to get around a lot of that pain by using jQuery, a truly", 
    "kick ass framework that not only homogenizes the APIs, and makes the", 
    "incompatibilities largely go away, but adds a lot of power beyond the raw", 
    "APIs is that the browsers provide for you.", 
    "So remember, JavaScript is just another language.", 
    "It's the JSAPI that gives it the privileged position of being able to", 
    "script what the browser does.", 
    "Remember also that JavaScript as a language is single threaded.", 
    "And last time I said this, somebody said, well what about web workers?", 
    "If you don't know about web workers, don't worry about the next paragraph.", 
    "But if you were about to ask what about web workers?", 
    "Web workers have no concurrency in the language.", 
    "JavaScript as a language doesn't have multiple threads, doesn't have mutual", 
    "exclusion, it doesn't have a way to manage concurrency.", 
    "You can launch other tasks, but managing the launching of those tasks,", 
    "and ensuring that they don't have race conditions on your data structures is", 
    "completely your problem.", 
    "So I'm sticking to my guns on this.", 
    "JavaScript is single threaded.", 
    "It is part of the language definition that it's single threaded.", 
    "That means that all the interactions in the browser that are done in", 
    "JavaScript have to be non-blocking.", 
    "Right?", 
    "And this is important because it changes the way you think about the", 
    "programming model.", 
    "The programming model for the old web is you make a request to the server.", 
    "You sit around for a while until the request comes back", 
    "and you get a reply.", 
    "Then you do something.", 
    "If you did that with JavaScript, the browser's UI would freeze and the user", 
    "wouldn't be able to do anything while you were waiting.", 
    "So what you actually have to do is say, I'm going to make a request and", 
    "here is a function to call when the reply comes back.", 
    "And that immediately returns.", 
    "Remember way back when we talk about Ruby and the cool fact that functions", 
    "are closures?", 
    "This is where that knowledge is going to come back and be really useful,", 
    "because when you're making a request, you don't have the luxury of waiting", 
    "for a reply.", 
    "But you do have the luxury of passing an object that contains all the state", 
    "necessary to handle the reply when it does come.", 
    "And it has the context of the place we originally created it.", 
    "So the fact that functions are closures in JavaScript is key.", 
    "It's kind of tightly mated to the fact that it's a single-threaded language.", 
    "We're going to do unobtrusive JavaScript, which means that instead", 
    "of mixing stuff in with between our HTML code, like this is the way you", 
    "used to do things before CSS.", 
    "And now you use classes and IDs and you have a separate CSS file.", 
    "There's a new way to do JavaScript that allows all the JavaScript to be", 
    "separated from the HTML code.", 
    "So we're going to give a preview of what this looks like.", 
    "Here is the bad, old way.", 
    "There's a lot of street JavaScript around that looks like this.", 
    "Where people will put JavaScript right into an event handler.", 
    "And don't worry about the concept, we're going to get", 
    "to all these concepts.", 
    "I just want to give you an overall preview of what's going on.", 
    "A better new way to do this is to have a tag that looks like it has no", 
    "behaviors at all, but I'm going to have a piece of JavaScript--", 
    "and by the end of the next section, you'll understand", 
    "how all of this works--", 
    "that at the time the page is loaded, will find the element whose ID is my", 
    "alert, and it will bind a function to its click that puts up an alert box.", 
    "OK?", 
    "So again, don't worry too much about understanding the mechanics here.", 
    "That's where we're going to go.", 
    "But the important thing to take away from this example is mixing JavaScript", 
    "into your HTML, bad.", 
    "Separating it, and binding the behavior separately, good.", 
    "Why is this?", 
    "Because more browsers than you might think, in fact, as of last year, 36%", 
    "of browsers in China were legacy browsers in the sense that they either", 
    "had JavaScript disabled or partially disabled or had such an old version of", 
    "a browser that you couldn't rely on some of the behaviors working well.", 
    "So you should create your sites so that browsers that don't have", 
    "JavaScript still get a usable experience.", 
    "And as we'll see, if you followed RESTful design in creating your app,", 
    "this is actually not so hard to do.", 
    "One trick we're going to make a lot of use of is rather than putting a bunch", 
    "of page elements up that won't work without JavaScript, we'll use", 
    "JavaScript to add those elements when the page is loaded.", 
    "That way, if you don't have JavaScript, the elements won't be", 
    "created and you won't even see them on the page.", 
    "It's a really neat trick and it's easy to do.", 
    "Here's a question to close out our very short introduction.", 
    "Client-side JavaScript code can interact with the HTML page because,", 
    "the functionality is part of JavaScript?", 
    "The functionality is part of the browser?", 
    "The functionality as part of the JSAPI.", 
    "Which one or ones?"
  ]
}