{
  "start": [
    0, 
    1890, 
    5860, 
    9040, 
    11790, 
    14250, 
    18200, 
    22650, 
    24040, 
    27410, 
    29460, 
    31420, 
    32659, 
    35350, 
    37540, 
    41210, 
    43960, 
    46540, 
    49900, 
    52420, 
    57440, 
    58950, 
    62250, 
    63360, 
    66620, 
    70900, 
    74280, 
    75890, 
    78830, 
    81700, 
    85310, 
    89310, 
    89940, 
    92330, 
    95320, 
    98620, 
    99840, 
    101070, 
    103110, 
    104080, 
    107840, 
    110380, 
    112990, 
    115110, 
    118270, 
    121110, 
    122420, 
    124650, 
    127090, 
    130508, 
    133770, 
    136260, 
    139460, 
    142900, 
    145530, 
    148480, 
    149280, 
    150380, 
    150650, 
    152050, 
    155260, 
    159790, 
    164370, 
    167840, 
    171490, 
    172330, 
    175180, 
    176070, 
    178300, 
    180530, 
    182010, 
    185340, 
    188530, 
    191595, 
    194670, 
    197940, 
    201450, 
    203660, 
    206860, 
    210460, 
    212850, 
    216610, 
    218620, 
    223450, 
    227120, 
    228740, 
    229730, 
    233740, 
    237250, 
    240060, 
    244120, 
    247330, 
    249790, 
    251770, 
    254760, 
    257390, 
    260826, 
    262260, 
    264450, 
    267490, 
    272180, 
    275320, 
    276040, 
    278905, 
    280040, 
    284050, 
    284890, 
    287950, 
    290370, 
    291830, 
    294290, 
    299430, 
    301290, 
    305110, 
    306030, 
    308410, 
    310220, 
    313140, 
    314390, 
    316450, 
    320220, 
    321920, 
    327210, 
    330020, 
    331140, 
    333730, 
    336240, 
    340170, 
    343590, 
    347150, 
    350110, 
    352160, 
    354500, 
    357370, 
    360650, 
    364350, 
    367850, 
    371000, 
    373260, 
    375660, 
    378570, 
    380970, 
    384190, 
    385060, 
    388840, 
    389600, 
    391330, 
    394090, 
    396190, 
    396980, 
    398860, 
    406010, 
    409830, 
    410950, 
    414490, 
    416080, 
    420050, 
    423110, 
    424830, 
    427710, 
    430300, 
    432160, 
    433330, 
    436200, 
    439840, 
    440820, 
    443550, 
    446720, 
    450090, 
    454010, 
    456230, 
    458520, 
    462900, 
    465750, 
    468070, 
    472580, 
    474070, 
    479180, 
    483200, 
    484400, 
    486380, 
    488930, 
    492560, 
    495360, 
    498340, 
    500260, 
    504190, 
    508600, 
    512230, 
    514100, 
    517340, 
    519058, 
    522230, 
    524030, 
    527050, 
    527490, 
    529610, 
    532130, 
    534800, 
    536150, 
    539740, 
    541650, 
    544930, 
    549270, 
    551350, 
    554500, 
    557160, 
    560540, 
    563920, 
    565560, 
    568460, 
    569860, 
    572340, 
    575450, 
    576930, 
    578150, 
    579680, 
    580710, 
    583110, 
    585940, 
    587120, 
    589180, 
    594860, 
    597640, 
    599980, 
    603320, 
    607380, 
    609700, 
    614600, 
    615420, 
    619380, 
    621200, 
    622710, 
    625010, 
    629330, 
    630410, 
    634460, 
    635690, 
    637320, 
    641580, 
    643580, 
    647470, 
    648570, 
    652630, 
    654690, 
    656740, 
    660970, 
    661950, 
    665290, 
    667250, 
    668670, 
    674230, 
    675790, 
    680870, 
    685870, 
    687770, 
    692520, 
    696110, 
    700180, 
    702940, 
    706590, 
    708700, 
    712340, 
    717220, 
    720700, 
    723630, 
    726860, 
    730060, 
    730890, 
    733300, 
    734420, 
    736410, 
    737960, 
    739620, 
    743300, 
    745790, 
    748030, 
    751490, 
    755550, 
    757590, 
    762100, 
    764050, 
    766560, 
    768070, 
    770510, 
    773820, 
    776520, 
    779780, 
    780910, 
    783430, 
    787290, 
    792370, 
    794685, 
    795720, 
    799030, 
    803380, 
    806500, 
    810240, 
    814590, 
    818170, 
    820120, 
    823690, 
    827040, 
    831460, 
    834570, 
    836160, 
    837390, 
    842660, 
    846700, 
    850210, 
    851690, 
    854650, 
    855920, 
    859360, 
    863300, 
    864660, 
    868410, 
    871120, 
    872300, 
    876330, 
    879020, 
    882360, 
    883720, 
    885780, 
    887300, 
    890440, 
    894180, 
    897660, 
    900080, 
    901450, 
    903030, 
    905320, 
    908200, 
    910130, 
    915400, 
    919300, 
    924290, 
    928390, 
    930990, 
    932830, 
    935850, 
    939560, 
    942890, 
    944060, 
    948710, 
    953150, 
    955590, 
    958320, 
    959820, 
    962960, 
    966740, 
    969700, 
    972330, 
    975700, 
    978520, 
    982260, 
    982740, 
    985810, 
    986350, 
    989240, 
    991060, 
    994790, 
    997850, 
    998700, 
    1001630, 
    1003370, 
    1004550, 
    1007710, 
    1012330, 
    1014880, 
    1017660, 
    1020870, 
    1024670, 
    1029390, 
    1031339, 
    1035020, 
    1036470, 
    1039368, 
    1040050, 
    1041329, 
    1044598, 
    1047868, 
    1051200, 
    1055380, 
    1056490, 
    1058330, 
    1062310, 
    1064720, 
    1065800, 
    1067390, 
    1071070, 
    1073470, 
    1075800, 
    1077460, 
    1081570
  ], 
  "end": [
    1890, 
    5860, 
    9040, 
    11790, 
    14250, 
    18200, 
    22650, 
    24040, 
    27410, 
    29460, 
    31420, 
    32659, 
    35350, 
    37540, 
    41210, 
    43960, 
    46540, 
    49900, 
    52420, 
    57440, 
    58950, 
    62250, 
    63360, 
    66620, 
    70900, 
    74280, 
    75890, 
    78830, 
    81700, 
    85310, 
    89310, 
    89940, 
    92330, 
    95320, 
    98620, 
    99840, 
    101070, 
    103110, 
    104080, 
    107840, 
    110380, 
    112990, 
    115110, 
    118270, 
    121110, 
    122420, 
    124650, 
    127090, 
    130509, 
    133770, 
    136260, 
    139460, 
    142900, 
    145530, 
    148480, 
    149280, 
    150380, 
    150650, 
    152050, 
    155260, 
    159790, 
    164370, 
    167840, 
    171490, 
    172330, 
    175180, 
    176070, 
    178300, 
    180530, 
    182010, 
    185340, 
    188530, 
    191595, 
    194670, 
    197940, 
    201450, 
    203660, 
    206860, 
    210460, 
    212850, 
    216610, 
    218620, 
    223450, 
    227120, 
    228740, 
    229730, 
    233740, 
    237250, 
    240060, 
    244120, 
    247330, 
    249790, 
    251770, 
    254760, 
    257390, 
    260826, 
    262260, 
    264450, 
    267490, 
    272180, 
    275320, 
    276040, 
    278905, 
    280040, 
    284050, 
    284890, 
    287950, 
    290370, 
    291830, 
    294290, 
    299430, 
    301290, 
    305110, 
    306030, 
    308410, 
    310220, 
    313140, 
    314390, 
    316450, 
    320220, 
    321920, 
    327210, 
    330020, 
    331140, 
    333730, 
    336240, 
    340170, 
    343590, 
    347150, 
    350110, 
    352160, 
    354500, 
    357370, 
    360650, 
    364350, 
    367850, 
    371000, 
    373260, 
    375660, 
    378570, 
    380970, 
    384190, 
    385060, 
    388840, 
    389600, 
    391330, 
    394090, 
    396190, 
    396980, 
    398860, 
    406010, 
    409830, 
    410950, 
    414490, 
    416080, 
    420050, 
    423110, 
    424830, 
    427710, 
    430300, 
    432160, 
    433330, 
    436200, 
    439840, 
    440820, 
    443550, 
    446720, 
    450090, 
    454010, 
    456230, 
    458520, 
    462900, 
    465750, 
    468070, 
    472580, 
    474070, 
    479180, 
    483200, 
    484400, 
    486380, 
    488930, 
    492560, 
    495360, 
    498340, 
    500260, 
    504190, 
    508600, 
    512230, 
    514100, 
    517340, 
    519059, 
    522230, 
    524030, 
    527050, 
    527490, 
    529610, 
    532130, 
    534800, 
    536150, 
    539740, 
    541650, 
    544930, 
    549270, 
    551350, 
    554500, 
    557160, 
    560540, 
    563920, 
    565560, 
    568460, 
    569860, 
    572340, 
    575450, 
    576930, 
    578150, 
    579680, 
    580710, 
    583110, 
    585940, 
    587120, 
    589180, 
    594860, 
    597640, 
    599980, 
    603320, 
    607380, 
    609700, 
    614600, 
    615420, 
    619380, 
    621200, 
    622710, 
    625010, 
    629330, 
    630410, 
    634460, 
    635690, 
    637320, 
    641580, 
    643580, 
    647470, 
    648570, 
    652630, 
    654690, 
    656740, 
    660970, 
    661950, 
    665290, 
    667250, 
    668670, 
    674230, 
    675790, 
    680870, 
    685870, 
    687770, 
    692520, 
    696110, 
    700180, 
    702940, 
    706590, 
    708700, 
    712340, 
    717220, 
    720700, 
    723630, 
    726860, 
    730060, 
    730890, 
    733300, 
    734420, 
    736410, 
    737960, 
    739620, 
    743300, 
    745790, 
    748030, 
    751490, 
    755550, 
    757590, 
    762100, 
    764050, 
    766560, 
    768070, 
    770510, 
    773820, 
    776520, 
    779780, 
    780910, 
    783430, 
    787290, 
    792370, 
    794685, 
    795720, 
    799030, 
    803380, 
    806500, 
    810240, 
    814590, 
    818170, 
    820120, 
    823690, 
    827040, 
    831460, 
    834570, 
    836160, 
    837390, 
    842660, 
    846700, 
    850210, 
    851690, 
    854650, 
    855920, 
    859360, 
    863300, 
    864660, 
    868410, 
    871120, 
    872300, 
    876330, 
    879020, 
    882360, 
    883720, 
    885780, 
    887300, 
    890440, 
    894180, 
    897660, 
    900080, 
    901450, 
    903030, 
    905320, 
    908200, 
    910130, 
    915400, 
    919300, 
    924290, 
    928390, 
    930990, 
    932830, 
    935850, 
    939560, 
    942890, 
    944060, 
    948710, 
    953150, 
    955590, 
    958320, 
    959820, 
    962960, 
    966740, 
    969700, 
    972330, 
    975700, 
    978520, 
    982260, 
    982740, 
    985810, 
    986350, 
    989240, 
    991060, 
    994790, 
    997850, 
    998700, 
    1001630, 
    1003370, 
    1004550, 
    1007710, 
    1012330, 
    1014880, 
    1017660, 
    1020870, 
    1024670, 
    1029390, 
    1031339, 
    1035020, 
    1036470, 
    1039369, 
    1040050, 
    1041329, 
    1044599, 
    1047869, 
    1051200, 
    1055380, 
    1056490, 
    1058330, 
    1062310, 
    1064720, 
    1065800, 
    1067390, 
    1071070, 
    1073470, 
    1075800, 
    1077460, 
    1081570, 
    1082820
  ], 
  "text": [
    "ARMANDO FOX: I'm gonna vote for blue.", 
    "But I would like to talk through all these to make sure that we all agree", 
    "on why all of these are reasonable places to test stuff.", 
    "So autotest with RSpec+Cucumber.", 
    "Is there any argument against testing?", 
    "Well, if you voted for something other than blue, did you have an argument", 
    "against testing in the autotest environment using RSpec+Cucumber,", 
    "other than the fact that they're kind of slow.", 
    "But if you're only developing one feature at a time, the wait shouldn't", 
    "be that agonizing.", 
    "So autotest is perfectly reasonable.", 
    "autotest--", 
    "well, in fact, I would say I don't really do any coding now without", 
    "having autotest always running in the background.", 
    "And although it does take longer to test out JavaScript and AJAXy", 
    "features, especially if you're doing it with Selenium, because you're", 
    "generally concentrating on one feature time and not touching a lot of the", 
    "code, autotest is a perfectly reasonable way to do your", 
    "developer-side testing of these features.", 
    "In continuous integration, well, you can run essentially complete Cucumber", 
    "scenarios in CI.", 
    "So this is an opportunity to run those same features but against a variety of", 
    "different browsers.", 
    "So you can make sure that you didn't accidentally do anything in your", 
    "JavaScript code that fails to work properly on some browsers.", 
    "If you have a staging environment, you've probably got regression tests", 
    "that run in staging as well.", 
    "So that's a good place to test stuff just to make sure that there's no", 
    "differences between staging and development or between production and", 
    "development that will get in the way when you go to actually deploy.", 
    "So in fact, I would argue that all of these are a reasonable", 
    "place to test it.", 
    "Now you might not be the same kinds of tests in all of them.", 
    "When you do your testing in the RSpec+Cucumber environment on your own", 
    "machine, really what you're making sure of is the sort of classic things", 
    "you've been testing for so far.", 
    "Is it correct behavior?", 
    "Am I getting good coverage of my lines of JavaScript?", 
    "And so on.", 
    "Whereas when you test in CI, you might want to broaden your test coverage to", 
    "ask, what happens if somebody runs this on Internet Explorer", 
    "5 on Windows 95?", 
    "Which browsers can I actually expect this to work on?", 
    "Or maybe I'm testing for the performance of different browsers", 
    "because even though it works on a lot of browsers, the user experience is", 
    "intolerable.", 
    "And then again, in a staging environment you might be checking,", 
    "what is the effect of this on the actual servers?", 
    "As opposed to sort of running onsie twosie in a smaller environment where", 
    "I'm handling a few requests at a time and running individual tests.", 
    "In staging I can actually run a whole bunch of workload.", 
    "And in the aggregate I can see what is the aggregate performance effect of", 
    "these new AJAX features in a typical deployment environment.", 
    "So the kinds of things that you might test in each environment are", 
    "different, but there is a reason to test this kind of functionality in all", 
    "three places.", 
    "Everybody down with that?", 
    "OK.", 
    "This is cool.", 
    "Upgrades and feature flags.", 
    "This is one of the short list of topics where when I went around and", 
    "talked to a lot of the prominent software as a service companies.", 
    "And I was trying to figure out exactly for this part of the class is, what is", 
    "the subset of operations-related things that developers", 
    "have to be aware of?", 
    "Because it would change the way that they design or develop their", 
    "application.", 
    "And this was sort of on a lot of people's short lists.", 
    "And I liked it because it's a good concept.", 
    "It's useful for you guys to know.", 
    "And it's something that doesn't really have an equivalent when you're doing", 
    "software not as a service or SNaaS.", 
    "So let's talk about upgrades and feature flags.", 
    "Why are upgrades potentially challenging?", 
    "Needless to say, upgrading for software as a service your goal, if", 
    "you care at all about availability, is for your upgrade not to result in a", 
    "severe interruption to your customers.", 
    "You'd like to be able to do the vast majority of your upgrades, if not all", 
    "of them, without taking the service down and without your users", 
    "experiencing a lot of sluggishness or grief.", 
    "So when you're rolling out code that touches more than one server--", 
    "and many interesting applications do.", 
    "We mentioned when we started talking about platform as a service, I think", 
    "one of the things I said was all of Pivotal Tracker fits", 
    "into one large database.", 
    "Which is true.", 
    "And if you've ever used the famous SurveyMonkey.", 
    "I think all of you are now familiar with SurveyMonkey several times over.", 
    "All of SurveyMonkey fits in a single database.", 
    "So every question answered by every survey respondent on every survey ever", 
    "hosted by SurveyMonkey, that's one large database.", 
    "Now, needless to say, it's more than one large server to", 
    "handle the actual workload.", 
    "So when you're going to roll out code, you're going to be rolling out code", 
    "probably to more than one machine, which means that at some instant in", 
    "time some machines will be running version n of the code and some will be", 
    "running n plus 1, the upgraded version.", 
    "So one question is, will that work?", 
    "Is there a reason that the two versions-- and sometimes it's OK.", 
    "Sometimes version n plus 1 builds strictly on top of version n and from", 
    "the database's point of view or the user's point of view, there's really", 
    "no conflict.", 
    "But there's other cases in which there might be reasons that the two versions", 
    "are mutually incompatible.", 
    "The biggest one is when the upgraded code is associated with a change to", 
    "the schema.", 
    "So not only are we changing the code, we're changing something about the", 
    "database schema in order to support a new feature.", 
    "Maybe we're just adding fields.", 
    "Maybe we're replacing fields or renaming fields.", 
    "But in any case, we've got the problem that schema version n plus 1 doesn't", 
    "work with the current version of the app.", 
    "And version n plus 1 of the app doesn't work with the current version", 
    "of the schema.", 
    "So in this case, you really have to think about how you're", 
    "going to handle it.", 
    "The most naive way you can do it-- and by the way, if you can do this you", 
    "should do it this way.", 
    "Anything that you can do that's simpler is good.", 
    "If you can take your service offline for just long enough to do this,", 
    "that's a perfectly reasonable way to do it.", 
    "Now the question of how long is just long enough to do this, if you're", 
    "talking about taking your service offline for a minute or two, you may", 
    "be able to get away with it.", 
    "If you're talking about several minutes, you should think carefully", 
    "about whether this is the right way to do it.", 
    "But the ideal way to do it if your users didn't care is you take the", 
    "whole service down, apply the destructive migration--", 
    "including whatever copying or moving around of data it needs to do--", 
    "deploy the new code, and then bring everything back online together.", 
    "So now you've got the new schema.", 
    "Every server's been upgraded with a new version of the app.", 
    "And now users can be let back in.", 
    "And I think we have an example.", 
    "So here's a simple example of a destructive version of a migration.", 
    "And the idea here is whereas originally I just had a single field", 
    "for the name of the moviegoer, for various complicated reasons I now want", 
    "to have a first name and a last name field.", 
    "So the migration is really doing two different things.", 
    "First of all, its change in the schema so that instead of a single name", 
    "field, I've got separate ones for first and last.", 
    "But the other thing it's doing is, I already have the first and last names", 
    "of most of the users.", 
    "So part of the migration is to essentially massage the data to fit", 
    "the new schema.", 
    "So this is a very common pattern.", 
    "You're doing a migration that in some sense is destructive.", 
    "But you can also take advantage of data you already have", 
    "as part of the migration.", 
    "And that's what I've done.", 
    "Once I create the two new columns, I just grab the existing name column of", 
    "each moviegoer, I use that to populate the first and last names of the simple", 
    "regular expression.", 
    "And once that's all done, finally I remove the no longer necessary", 
    "vestigial column.", 
    "So it's pretty clear from the way I've done this that if I had an old version", 
    "of the code that looked for the name column, it's going to break as soon as", 
    "I try to run it against this new one.", 
    "And if my new version of the code looks for first name and last name,", 
    "it's going to break unless I first run the migration.", 
    "So we'll use this as our simple example to motivate how", 
    "feature flags work.", 
    "Basically, the way you do this with feature flags is you try to separate", 
    "the migration part into a part that's non-destructive and a part that's", 
    "destructive.", 
    "And in between, you've got this intermediate state that could work", 
    "with either version of the app because you're going to make the app know", 
    "about the fact that you're in the process of doing this migration.", 
    "So what would this simple example look like if we're going to do it this way?", 
    "Just as a preview, let's walk through the steps first.", 
    "We're going to do the non-destructive part of the migration.", 
    "And in our example, adding fields to an existing schema is non-destructive", 
    "because the old version is not going to know to look for them.", 
    "So that doesn't break anything in and of itself.", 
    "And in fact, copying the data from the existing field into the new field is", 
    "also non-destructive.", 
    "As long as the old data isn't changing as we're trying to copy it over.", 
    "Then we'll deploy whatever new functionality is going to be the", 
    "version n plus 1.", 
    "But it will be protected by a feature flag.", 
    "That's what we're going to look at in a minute.", 
    "The idea of a feature flag is that it's a trigger that you insert in the", 
    "application that you can change while the application's running.", 
    "And as soon as you change the trigger while the application's running,", 
    "certain internal code paths now change.", 
    "That's a fundamentally what a feature flag does.", 
    "So we deploy a new version of the software that has a feature flag.", 
    "And the feature flag is currently set to do the old thing.", 
    "And we make sure that that still works.", 
    "So now all we've done is we've added behaviors but we haven't sort of", 
    "turned them on yet.", 
    "Then, once we've deployed the new version to all the servers, we flip", 
    "the feature flag on for everybody.", 
    "And if the feature flag is, for example, stored in the database,", 
    "that's easy.", 
    "Because everybody's reading from the same database.", 
    "So now, the new version of the code functionality will be enabled.", 
    "And hopefully the world continues to spin on its axis and", 
    "no disasters happen.", 
    "But if a disaster happens, we can flip the feature flag back and presumably", 
    "go back to the code operating the old way.", 
    "So it's a way to give ourselves an easy out.", 
    "Assuming nothing goes wrong, in the fullness of time, all of the records", 
    "that have to be migrated will have been migrated.", 
    "And once that happens, we can deploy a new version of the code that doesn't", 
    "have the old code path at all and removes the feature flag.", 
    "So we have this intermediate state that's going on in steps two through", 
    "four where you sort of have a version of the software that knows how to do", 
    "it the old way and how to do with the new way.", 
    "And by flipping a flag, you can change instantly at run time", 
    "which way it's choosing.", 
    "So let's actually look at this as an example.", 
    "We'll do the same RottenPotatoes example, but we'll do it", 
    "using feature flags.", 
    "So here's our first migration.", 
    "This is--", 
    "part of it's pretty obvious.", 
    "We're going to add the first name and last name columns.", 
    "Notice that we're not deleting the old columns and we're not copying", 
    "the data over yet.", 
    "All we're doing is adding the two new columns.", 
    "We're also, in this example, we're going to add a new Boolean field for", 
    "each moviegoer basically saying whether that person's information has", 
    "been migrated to the new format or not.", 
    "And initially, this is going to start out as false for everyone.", 
    "So the initial state of the world is that there is two empty new fields", 
    "associated with each moviegoer's record.", 
    "And there's one new Boolean field that indicates whether we've migrated that", 
    "person yet.", 
    "And we'll talk about indices in the next section.", 
    "You'll understand why that line's important.", 
    "Then, what's the next step?", 
    "So that's the non-destructive part of the migration.", 
    "Then we need a version of the code that has a feature flag to condition", 
    "that behavior.", 
    "And happily, you already know all of the mechanisms that you're going to", 
    "need to do this.", 
    "We're going to use scopes.", 
    "Remember scopes are one of the ways we can essentially define our own", 
    "relational accessors.", 
    "And we've got this migrated field that we're introducing into every", 
    "moviegoer's record.", 
    "We're just going to have different scopes that condition on the value of", 
    "that field.", 
    "So here's an example.", 
    "Suppose we had a method in our original app that finds names matching", 
    "some string.", 
    "This would be an example of a point in the code that has to know whether it's", 
    "trying to do this operation against the old schema or", 
    "against the new schema.", 
    "So hypothetically I'm using a gem call feature flags, which really exists and", 
    "helps you out with stuff like this.", 
    "But basically any time we're called upon to search for an existing name,", 
    "if the new name schema is in effect, then we can check--", 
    "we're basically doing two searches, right?", 
    "We're doing over all of the names that have already been migrated.", 
    "We look at both the first name and the last name columns for the match.", 
    "For the subset of moviegoers that are under the old schema that have not yet", 
    "been migrated, we'll just search the name field.", 
    "And then we'll just take the results of both of those put together.", 
    "Here's another nice use of duck typing.", 
    "You can use plus to add together these two proxy objects.", 
    "So basically if the feature flag has been turned on, we'll do a more robust", 
    "search because we'll check both the new schema for the records that have", 
    "been migrated and the old schema for those that haven't.", 
    "If the feature flag is turned off, then we just do what we did before.", 
    "So presumably, this single line is representative of what the", 
    "method used to do.", 
    "And if the feature flag is off, we'll just have the code behave", 
    "as it always has.", 
    "So how do things actually get migrated?", 
    "Well, there's a couple of ways we can do it.", 
    "One way is we can do it lazily.", 
    "We can wait for each individual user's record to be updated.", 
    "And we can have a before save hook.", 
    "Again, this is one of the things you've already seen.", 
    "And what we'll do is we'll add a hook so that any time a moviegoer is about", 
    "to be updated, we will update them to the new schema unless they've already", 
    "been updated to the new schema.", 
    "So our update schema function is just a match on the name.", 
    "It assigns the--", 
    "I should be doing more error checking than I am, but for", 
    "the purposes of example.", 
    "I will split the name up into two pieces.", 
    "I'll store the first and last name field values.", 
    "And by the way, we're still updating in the name field itself.", 
    "So the idea is when the records are in this intermediate state,", 
    "they've been migrated.", 
    "But the old data value is still available.", 
    "But the ideas from this point on, because I'm setting the migrated flag", 
    "to true, then any code paths that look at the value of the migration flag", 
    "will now only ever try to manipulate it using the new schema.", 
    "Does that make sense?", 
    "So this is one way to do it where the only time somebody would get updated", 
    "is when you try to make a change to their existing row.", 
    "Now you could combine this with, for example, a background process the runs", 
    "with low priority that just sort of grabs a handful of rows at a time and", 
    "does this exact computation on a small number of rows so that in a fixed", 
    "amount of time, not dependent on how often your users are logging in, you", 
    "could actually update the entire table.", 
    "So through some combination of lazy updates like this one, which is", 
    "triggered by a before save, and eager updates, which you could run a", 
    "separate job to do when demand is otherwise low on your site, you'll", 
    "eventually get to the point where you've migrated everything over.", 
    "So now you'll reach a point where--", 
    "and you can test for this.", 
    "Because we're keeping track in the moviegoers table of whether each", 
    "record has been migrated, at any given time whenever you see that all of the", 
    "migrated flags are true for everybody, that means that there's no more", 
    "records remaining in the old format.", 
    "And then you can deploy a new version of the code that gets rid of the", 
    "feature flag.", 
    "So at that point you can take out the methods that are conditioned on the", 
    "value of the feature flag, leaving only the new code path, deploy that.", 
    "Make sure there's no problems.", 
    "And lastly, you can deploy a new migration, which just deletes the old", 
    "obsolete field values that nobody is touching anymore.", 
    "So this is a simple example.", 
    "You can do feature flags for much more complicated things too.", 
    "You can do AB testing with feature flags.", 
    "You can have some users get one version of a piece of functionality", 
    "and other users get a different version.", 
    "You could see which one people like better.", 
    "But the basic idea is the same.", 
    "The idea is that you've got two different code paths in a deployed", 
    "app, and which one is followed depends on the value of this flag that you can", 
    "change more or less instantaneously.", 
    "What happens if an upgrade goes wrong despite your careful", 
    "use of feature flags?", 
    "You might think that--", 
    "when we talked about migrations, remember we said there's an up", 
    "migration and you can have a corresponding down migration, which is", 
    "to undo that change?", 
    "But surprisingly, the wisdom of people who are experts in deployment and", 
    "operation is don't use down migrations to recover from a disaster.", 
    "And the basic reason is it actually is part of the thinking that has come out", 
    "of people who've worked on a reliable computing, which is if you've got a", 
    "catastrophe recovery code path, it probably doesn't", 
    "get tested very often.", 
    "Because hopefully catastrophes are not occurring very often.", 
    "So you actually don't know, even if it's thoroughly tested.", 
    "Maybe somebody else has committed an irreversible migration since the one", 
    "that you're trying to roll back.", 
    "In fact, the less painful thing to do is usually to use feature flags.", 
    "So use the feature flag to protect each step of your deployment process.", 
    "And make sure that at each step you still haven't broken anything.", 
    "And by the time you get to the end, you'll be in a position to just remove", 
    "the feature flag entirely.", 
    "But down migrations are useful for development.", 
    "Not so trustworthy for recovering from a botched deployment.", 
    "As I mentioned, people use a feature flags for other stuff too.", 
    "One thing is what people call preflight checking.", 
    "It's gradually rolling out a feature to increasing numbers of users.", 
    "So even if you've done all of your other due diligence, what you might do", 
    "is first, let's say 10% of the users randomly chosen are going to get the", 
    "new feature.", 
    "And it's because maybe you aren't 100% sure of all the performance", 
    "implications.", 
    "You want to make sure that before everybody gets it, you get to observe", 
    "how it works for a subset of users.", 
    "So what you really need is, essentially, a feature flag that", 
    "returns true 10% of the time randomly chosen.", 
    "And then those are the users.", 
    "And then you can change the value of that threshold as you get more and", 
    "more confident with your roll out.", 
    "You can do AB testing.", 
    "So a feature that could be implemented in two different ways or has two", 
    "different UIs and you would like to monitor the behavior of your users,", 
    "you give half of your users one and half of your users the other.", 
    "A complex feature who's code spans multiple deploys.", 
    "As I said, that's also a case for continuous integration.", 
    "You've got more and more code that's going into place to make a feature", 
    "work, but you don't unveil the feature and make it visible to the user until", 
    "all the pieces are in place and deployed.", 
    "And that final deployment of when the switch becomes available could be", 
    "controlled by a feature flag.", 
    "And there's a roll out gem, which is a public repo on GitHub", 
    "you can search for.", 
    "It covers all of these cases.", 
    "It covers simple cases like the example we did and much more.", 
    "So when you get to the point that your app actually has enough users that", 
    "downtime becomes a problem and that your database gets big enough that you", 
    "can't afford to just sort of take the whole app offline for a while, this is", 
    "a good thing to think about.", 
    "So here's a question about feature flags.", 
    "Which of these, if any, is a poor place to store the feature flag value?", 
    "And let's just use the simplest feature flag, if it's", 
    "just true or false.", 
    "Like the example we did.", 
    "You could put the feature flag in a YML file in your config directory.", 
    "You could put it into an existing database table.", 
    "You could make a new database table just to keep track of", 
    "features flag stuff.", 
    "Or any of those three is potentially a defensible place to store", 
    "feature flag values."
  ]
}